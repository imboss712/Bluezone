{"version":3,"sources":["../node_modules/@material-ui/icons/StarBorderRounded.js","containers/SingleMatch/MatchHelper/Prize/PrizeValue.js","containers/SingleMatch/MatchHelper/Prize/Prize.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","getPrizeList","totalWinners","totalAmount","entryFees","teamFactor","positionPrizeList","temp","i","winingPrize","Math","floor","push","position","prize","teamType","prizeList","useStyles","makeStyles","theme","table","width","tableContainer","marginBottom","spacing","tableRow","backgroundColor","tableCell","color","fontWeight","bullet","fontSize","verticalAlign","marginRight","Prize","memo","props","classes","entry","TableContainer","component","Paper","variant","elevation","className","Table","TableHead","TableRow","TableCell","align","TableBody","map","p","Typography","style","margin"],"mappings":"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","file":"static/js/69.345e3927.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.65 9.04l-4.84-.42-1.89-4.45c-.34-.81-1.5-.81-1.84 0L9.19 8.63l-4.83.41c-.88.07-1.24 1.17-.57 1.75l3.67 3.18-1.1 4.72c-.2.86.73 1.54 1.49 1.08l4.15-2.5 4.15 2.51c.76.46 1.69-.22 1.49-1.08l-1.1-4.73 3.67-3.18c.67-.58.32-1.68-.56-1.75zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarBorderRounded');\n\nexports.default = _default;","const getPrizeList = (totalWinners, totalAmount, entryFees, teamFactor) => {\r\n  const positionPrizeList = [];\r\n\r\n  totalAmount -= totalWinners * entryFees * teamFactor;\r\n  const temp = (totalWinners * (totalWinners + 1)) / 2;\r\n\r\n  let i = 1;\r\n  while (i <= totalWinners) {\r\n    const winingPrize =\r\n      entryFees * teamFactor +\r\n      Math.floor(totalAmount / temp) * (totalWinners - i + 1);\r\n\r\n    positionPrizeList.push({ position: i, prize: winingPrize });\r\n\r\n    i += 1;\r\n  }\r\n\r\n  return positionPrizeList;\r\n};\r\n\r\nconst positionPrizeList = (teamType, entryFees) => {\r\n  let prizeList;\r\n\r\n  if (teamType === 'Solo') {\r\n    const totalAmount = 100 * entryFees * 0.5;\r\n    prizeList = getPrizeList(10, totalAmount, entryFees, 1);\r\n  } else if (teamType === 'Duo') {\r\n    const totalAmount = 100 * entryFees * 0.55;\r\n    prizeList = getPrizeList(5, totalAmount, entryFees, 2);\r\n  } else if (teamType === 'Squad') {\r\n    const totalAmount = 100 * entryFees * 0.6;\r\n    prizeList = getPrizeList(6, totalAmount, entryFees, 4);\r\n  }\r\n\r\n  return prizeList;\r\n};\r\n\r\nexport default positionPrizeList;\r\n","import React, { memo } from 'react';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport positionPrizeList from './PrizeValue';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    width: '100%'\r\n  },\r\n  tableContainer: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  tableRow: {\r\n    backgroundColor: '#E3F2FD'\r\n  },\r\n  tableCell: {\r\n    color: '#0D47A1',\r\n    fontWeight: 'bold'\r\n  },\r\n  bullet: {\r\n    fontSize: theme.spacing(2),\r\n    color: 'rgba(0, 0, 0, 0.6)',\r\n    verticalAlign: 'text-top',\r\n    marginRight: 'inherit'\r\n  }\r\n}));\r\n\r\nconst Prize = memo((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { teamType, entry } = props;\r\n\r\n  const prizeList = positionPrizeList(teamType, entry);\r\n\r\n  return (\r\n    <>\r\n      <TableContainer\r\n        component={Paper}\r\n        variant=\"outlined\"\r\n        elevation={0}\r\n        className={classes.tableContainer}\r\n      >\r\n        <Table className={classes.table} aria-label=\"position-prize-table\">\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell className={classes.tableCell}>TEAM POSITION</TableCell>\r\n              <TableCell align=\"right\" className={classes.tableCell}>\r\n                TEAM PRIZE\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {prizeList.map((p) => {\r\n              return (\r\n                <TableRow key={p.position}>\r\n                  <TableCell>{p.position}</TableCell>\r\n                  <TableCell align=\"right\">Rs. {p.prize}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <TableContainer component={Paper} variant=\"outlined\" elevation={0}>\r\n        <Table className={classes.table} aria-label=\"kill-prize-table\">\r\n          <TableHead>\r\n            <TableRow className={classes.tableRow}>\r\n              <TableCell className={classes.tableCell}>\r\n                PER KILL PRIZE\r\n              </TableCell>\r\n              <TableCell align=\"right\" className={classes.tableCell}>\r\n                Rs. {0.2 * entry}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      <Typography color=\"textSecondary\" style={{ margin: '20px 4px 16px 4px' }}>\r\n        <StarBorderRoundedIcon className={classes.bullet} />\r\n        Prize money is subject to change based on number of participants.\r\n      </Typography>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Prize;\r\n"],"sourceRoot":""}