{"version":3,"sources":["ui/BackButton/BackButton.js","assets/loading.svg","ui/Loading/Loading.js","ui/HelmetComponent/HelmetComponent.js","containers/SingleMatch/ComponentHelper/MatchActions/MatchActionsHelper/DeleteModal.js","containers/SingleMatch/ComponentHelper/MatchInfo/MatchInfo.js","datas/rulesList.js","containers/SingleMatch/ComponentHelper/Rules/Rules.js","containers/SingleMatch/ComponentHelper/TournamentTabs.js","containers/SingleMatch/SingleMatch.js"],"names":["useStyles","makeStyles","theme","buttonBox","marginTop","spacing","breakpoints","down","arrowIcon","fontSize","marginRight","BackButton","link","text","classes","className","elevation","to","style","textDecoration","color","loadingBox","textAlign","margin","paper","padding","loadingIcon","marginLeft","verticalAlign","image","width","height","undefined","Loading","props","children","hideImage","Box","Paper","src","loading","alt","Typography","variant","CircularProgress","size","HelmetComponent","title","description","url","indexBehaviour","name","content","rel","href","property","messageBox","DeleteModal","Divider","sx","backgroundColor","borderRadius","gridBox","flexGrow","headingText","letterSpacing","datagrid","DataGrid","value","secondaryValue","Stack","direction","justifyContent","alignSelf","MatchInfo","memo","matchTime","matchDate","teamType","perspective","map","server","entryFees","discountPercent","prizePool","newMatchDate","format","Date","newMatchTime","tournamentData","id","Container","Grid","container","alignItems","data","item","xs","sm","md","Regulations","_id","rules","Rules","reg","TableContainer","component","marginBottom","Table","TableHead","TableRow","TableCell","fontWeight","TableBody","rule","index","Prize","lazy","Teams","Result","tabpanel","tabheader","position","top","bottom","zIndex","TabPanel","other","role","hidden","a11yProps","TournamentTabs","tournamentId","matchStatus","useState","setValue","isVerySmallScreen","useMediaQuery","borderBottom","borderColor","Tabs","onChange","event","newValue","Tab","icon","label","fallback","SuspenseLoading","entry","Error","MatchActions","ShortInfo","root","palette","background","connect","state","user","auth","tournaments","match","dispatch","onGetMatch","matchId","actions","onDeleteMatch","history","modalRef","useRef","tournament","loadingMatch","matchError","params","isMobileScreen","handleDelete","useCallback","current","openModal","useEffect","status","statusText","msg","formattedMatchDate","formattedMatchTime","participantStatus","onDelete","participationStatus","participants","Modal","ref","confirmText","onConfirmClick"],"mappings":"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","file":"static/js/57.6569d3a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonBox: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down('md')]: {\r\n      marginTop: theme.spacing(3.5)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  arrowIcon: {\r\n    fontSize: theme.spacing(2.2),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst BackButton = ({ link, text }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.buttonBox} elevation={0}>\r\n      <Link to={link} style={{ textDecoration: 'none' }}>\r\n        <Button color=\"primary\">\r\n          <ArrowBackRoundedIcon className={classes.arrowIcon} color=\"primary\" />\r\n          {text}\r\n        </Button>\r\n      </Link>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","export default __webpack_public_path__ + \"static/media/loading.0655dbc7.svg\";","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport loading from '../../assets/loading.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingBox: {\r\n    textAlign: 'center',\r\n    margin: 'auto'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5)\r\n  },\r\n  loadingIcon: {\r\n    marginLeft: theme.spacing(0.75),\r\n    verticalAlign: 'text-top'\r\n  },\r\n  image: {\r\n    width: 300,\r\n    height: 300,\r\n    [theme.breakpoints.down('md')]: {\r\n      width: 275,\r\n      height: 275\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 250,\r\n      height: 250\r\n    },\r\n    [theme.breakpoints.down(undefined)]: {\r\n      width: 200,\r\n      height: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst Loading = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { children, hideImage } = props;\r\n\r\n  return (\r\n    <Box className={classes.loadingBox}>\r\n      <Paper className={classes.paper} elevation={0}>\r\n        {hideImage || hideImage === true ? null : (\r\n          <img src={loading} alt=\"Loading...\" className={classes.image} />\r\n        )}\r\n\r\n        <Typography color=\"primary\" variant=\"h6\">\r\n          {children}{' '}\r\n          <CircularProgress\r\n            size={24}\r\n            color=\"primary\"\r\n            className={classes.loadingIcon}\r\n          />\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\nconst HelmetComponent = (props) => {\r\n  const { title, description, url, indexBehaviour } = props;\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      {url && <link rel=\"canonical\" href={url} />}\r\n      <meta name=\"robots\" content={indexBehaviour} />\r\n      <meta property=\"og:locale\" content=\"en_US\" />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      {url && <meta property=\"og:url\" content={url} />}\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:description\" content={description} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default HelmetComponent;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport ArrowForwardRoundedIcon from '@mui/icons-material/ArrowForwardRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  messageBox: {\r\n    padding: theme.spacing(1.5)\r\n  },\r\n  arrowIcon: {\r\n    fontSize: theme.spacing(1.75),\r\n    color: 'rgba(0, 0, 0, 0.6)',\r\n    verticalAlign: 'middle'\r\n  }\r\n}));\r\n\r\nconst DeleteModal = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography color=\"secondary\">\r\n        Do you really want to delete this tournament?\r\n      </Typography>\r\n\r\n      <Box className={classes.messageBox}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          <ArrowForwardRoundedIcon className={classes.arrowIcon} /> All teams\r\n          will be deleted.\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          <ArrowForwardRoundedIcon className={classes.arrowIcon} /> No money\r\n          will be refunded to any team.\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <Typography color=\"primary\" sx={{ marginTop: 1.5 }}>\r\n        We suggest you to do this instead of deleting:\r\n      </Typography>\r\n\r\n      <Box className={classes.messageBox}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          <ArrowForwardRoundedIcon className={classes.arrowIcon} /> Postponed\r\n          the tournament by updating time or date.\r\n        </Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n","import React, { memo } from 'react';\r\nimport { format } from 'date-fns';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    margin: theme.spacing(1.5, 0),\r\n    backgroundColor: '#4A3F44',\r\n    padding: theme.spacing(2.5, 0),\r\n    borderRadius: theme.spacing(0)\r\n  },\r\n  gridBox: {\r\n    flexGrow: 1\r\n  },\r\n  headingText: {\r\n    color: '#FFFFFF',\r\n    textAlign: 'center',\r\n    margin: theme.spacing(0.65, 0, 2.6, 0),\r\n    letterSpacing: theme.spacing(0.05),\r\n    fontSize: theme.spacing(3)\r\n  },\r\n  datagrid: {\r\n    padding: theme.spacing(1.5, 0),\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nconst DataGrid = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { title, value, secondaryValue } = props;\r\n\r\n  return (\r\n    <Box className={classes.datagrid}>\r\n      <Typography sx={{ color: '#FFFFFF' }}>\r\n        <b>{title}</b>\r\n      </Typography>\r\n\r\n      <Stack\r\n        direction=\"row\"\r\n        spacing={1}\r\n        sx={{ marginTop: 1, justifyContent: 'center' }}\r\n      >\r\n        <Typography sx={{ color: '#C0C0C0' }}>{value}</Typography>\r\n\r\n        {secondaryValue ? (\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{ color: '#C0C0C0', alignSelf: 'flex-end' }}\r\n          >\r\n            <del>{secondaryValue}</del>\r\n          </Typography>\r\n        ) : null}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst MatchInfo = memo((props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    title,\r\n    matchTime,\r\n    matchDate,\r\n    teamType,\r\n    perspective,\r\n    map,\r\n    server,\r\n    entryFees,\r\n    discountPercent,\r\n    prizePool\r\n  } = props;\r\n\r\n  const newMatchDate = format(new Date(matchDate), 'yyyy-MM-dd');\r\n  const newMatchTime = `${newMatchDate} ${matchTime}`;\r\n\r\n  const formattedMatchDate = format(new Date(newMatchDate), 'dd MMM yyyy');\r\n  const formattedMatchTime = format(new Date(newMatchTime), 'hh:mm aa');\r\n\r\n  const discountedEntryFees =\r\n    entryFees - (entryFees * discountPercent) / 100 === 0\r\n      ? 'Free'\r\n      : `₹ ${entryFees - (entryFees * discountPercent) / 100}`;\r\n\r\n  const originalEntryFees =\r\n    discountPercent === 0 || entryFees === 0 ? null : `₹${entryFees}`;\r\n\r\n  const tournamentData = [\r\n    {\r\n      id: 1,\r\n      title: 'Date',\r\n      value: formattedMatchDate\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Time',\r\n      value: formattedMatchTime\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Team Type',\r\n      value: teamType\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Perspective',\r\n      value: perspective\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Map',\r\n      value: map\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Server',\r\n      value: server\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Entry Fees',\r\n      value: discountedEntryFees,\r\n      secondaryValue: originalEntryFees\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'Prize Pool',\r\n      value: `₹ ${prizePool}`\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={0}>\r\n      <Container>\r\n        <Typography className={classes.headingText}>{title}</Typography>\r\n\r\n        <Grid container spacing={4} alignItems=\"center\">\r\n          {tournamentData.map((data) => {\r\n            return (\r\n              <Grid\r\n                item\r\n                xs={6}\r\n                sm={4}\r\n                md={3}\r\n                key={data.id}\r\n                className={classes.gridBox}\r\n              >\r\n                <DataGrid\r\n                  title={data.title}\r\n                  value={data.value}\r\n                  secondaryValue={data.secondaryValue}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Container>\r\n    </Paper>\r\n  );\r\n});\r\n\r\nexport default MatchInfo;\r\n","const Regulations = [\r\n  {\r\n    _id: 1,\r\n    title: 'RULES & TECHNICAL ISSUES',\r\n    rules: [\r\n      'Only Mobile and Tab players are allowed to participate.',\r\n      'Once the tournament has started, no one can enter the tournament.',\r\n      'If someone leaves the tournament, no money will be refunded.',\r\n      'Any disconnection issue or network failure while in the lobby or game will not be considered unless the same problem is faced by a large number of players.'\r\n    ]\r\n  },\r\n  {\r\n    _id: 2,\r\n    title: 'PREREQUISITES & TIPS',\r\n    rules: [\r\n      'You must have the latest version of Battlegrounds Mobile India (BGMI) game installed on your Mobile/Tab.',\r\n      'You must have already downloaded the map on which the tournament will be played.',\r\n      'Please make sure your device is charged.',\r\n      'Make sure you have good internet connectivity.',\r\n      'It is recommended to turn on DND or Game Mode when playing tournaments.',\r\n      'Use earphones/headphones for a better gaming experience.'\r\n    ]\r\n  },\r\n  {\r\n    _id: 3,\r\n    title: 'CHEATING',\r\n    rules: [\r\n      'The use of emulators and/or any other device that gives players an unfair advantage is not permitted in the tournament. (Emulator is allowed only in emulator specific tournaments).',\r\n      'Players found to be using hacks and/or mods will be disqualified from the tournament and/or players will be banned from the platform for a certain period.',\r\n      'Teaming up with other players/teams in a tournament will result in disqualification and/or the players being banned from the platform for a certain period.',\r\n      'Any unfair means is strictly prohibited.'\r\n    ]\r\n  },\r\n  {\r\n    _id: 4,\r\n    title: 'SCHEDULING',\r\n    rules: [\r\n      'Players are advised to check their exact timings for their tournament on the day of the tournament.',\r\n      'Issues related to schedule change will not be entertained.',\r\n      'Any change in the timing of the tournament will be communicated to all players in advance.'\r\n    ]\r\n  },\r\n  {\r\n    _id: 5,\r\n    title: 'REFUND',\r\n    rules: [\r\n      'If you leave the team/tournament before the start of the tournament, only 90% of the entry fee will be refunded.',\r\n      'If someone leaves the tournament, no money will be refunded.',\r\n      'Participation/entry fee will not be refunded if you do not participate in the tournament for any reason.'\r\n    ]\r\n  },\r\n  {\r\n    _id: 6,\r\n    title: 'PRIVACY',\r\n    rules: [\r\n      'Do not share Room Id and Password with anyone.',\r\n      'If you wish to live-stream your gameplay on any video streaming platform, please ensure a delay of at least 5 minutes to avoid sharing your location.'\r\n    ]\r\n  },\r\n  {\r\n    _id: 7,\r\n    title: 'IMPORTANT NOTE',\r\n    rules: ['Keep a screenshot of your score for proof.']\r\n  }\r\n];\r\n\r\nexport default Regulations;\r\n","import React, { memo } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Table from '@mui/material/Table';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\nimport Regulations from '../../../../datas/rulesList';\r\n\r\nconst Rules = memo(() => {\r\n  return (\r\n    <>\r\n      {Regulations.map((reg) => {\r\n        return (\r\n          <TableContainer\r\n            key={reg._id}\r\n            component={Paper}\r\n            variant=\"outlined\"\r\n            elevation={0}\r\n            sx={{ marginBottom: 3 }}\r\n          >\r\n            <Table sx={{ width: 1 }} aria-label=\"rules-table\">\r\n              <TableHead>\r\n                <TableRow sx={{ backgroundColor: '#E3F2FD' }}>\r\n                  <TableCell sx={{ color: '#0D47A1', fontWeight: 'bold' }}>\r\n                    {reg.title}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {reg.rules.map((rule, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{rule}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Rules;\r\n","import React, { useState, lazy, Suspense } from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport RuleRoundedIcon from '@mui/icons-material/RuleRounded';\r\nimport MoneyRoundedIcon from '@mui/icons-material/MoneyRounded';\r\nimport GroupsRoundedIcon from '@mui/icons-material/GroupsRounded';\r\nimport AssessmentRoundedIcon from '@mui/icons-material/AssessmentRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\nimport SuspenseLoading from '../../../ui/Loading/SuspenseLoading';\r\n\r\nimport Rules from './Rules/Rules';\r\nconst Prize = lazy(() => import('./Prize/Prize'));\r\nconst Teams = lazy(() => import('./Participants/Teams'));\r\nconst Result = lazy(() => import('./Result/Result'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabpanel: {\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(2.7, 1.5)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2.4, 0.7)\r\n    }\r\n  },\r\n  tabheader: {\r\n    backgroundColor: '#FFFFFF',\r\n    marginTop: theme.spacing(1),\r\n    position: 'sticky',\r\n    top: 0,\r\n    bottom: 8,\r\n    zIndex: 5\r\n  }\r\n}));\r\n\r\nconst TabPanel = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tournament-tabpanel-${index}`}\r\n      aria-labelledby={`tournament-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box className={classes.tabpanel}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index) => {\r\n  return {\r\n    id: `tournament-tab-${index}`,\r\n    'aria-controls': `tournament-tabpanel-${index}`\r\n  };\r\n};\r\n\r\nconst TournamentTabs = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { tournamentId, teamType, entryFees, matchStatus } = props;\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const isVerySmallScreen = useMediaQuery('(max-width:450px)');\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Box\r\n        sx={{ borderBottom: 1, borderColor: 'divider' }}\r\n        className={classes.tabheader}\r\n      >\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"tournament tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <Tab\r\n            icon={<RuleRoundedIcon />}\r\n            label={isVerySmallScreen ? '' : 'Rules'}\r\n            {...a11yProps(0)}\r\n          />\r\n\r\n          <Tab\r\n            icon={<MoneyRoundedIcon />}\r\n            label={isVerySmallScreen ? '' : 'Prize'}\r\n            {...a11yProps(1)}\r\n          />\r\n\r\n          <Tab\r\n            icon={<GroupsRoundedIcon />}\r\n            label={isVerySmallScreen ? '' : 'Participants'}\r\n            {...a11yProps(2)}\r\n          />\r\n\r\n          <Tab\r\n            icon={<AssessmentRoundedIcon />}\r\n            label={isVerySmallScreen ? '' : 'Result'}\r\n            {...a11yProps(3)}\r\n          />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Rules />\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <Suspense fallback={<SuspenseLoading />}>\r\n          <Prize teamType={teamType} entry={entryFees} />\r\n        </Suspense>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={2}>\r\n        <Suspense fallback={<SuspenseLoading />}>\r\n          <Teams tournamentId={tournamentId} />\r\n        </Suspense>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={3}>\r\n        <Suspense fallback={<SuspenseLoading />}>\r\n          <Result tournamentId={tournamentId} matchStatus={matchStatus} />\r\n        </Suspense>\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TournamentTabs;\r\n","import React, { lazy, Suspense, useRef, useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { format } from 'date-fns';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport BackButton from '../../ui/BackButton/BackButton';\r\nimport HelmetComponent from '../../ui/HelmetComponent/HelmetComponent';\r\nimport Loading from '../../ui/Loading/Loading';\r\nimport SuspenseLoading from '../../ui/Loading/SuspenseLoading';\r\nimport Modal from '../../ui/Modal/Modal';\r\n\r\nimport DeleteModal from './ComponentHelper/MatchActions/MatchActionsHelper/DeleteModal';\r\nimport MatchInfo from './ComponentHelper/MatchInfo/MatchInfo';\r\nimport TournamentTabs from './ComponentHelper/TournamentTabs';\r\nconst Error = lazy(() => import('../../ui/Error/Error'));\r\nconst MatchActions = lazy(() =>\r\n  import('./ComponentHelper/MatchActions/MatchActions')\r\n);\r\nconst ShortInfo = lazy(() => import('./ComponentHelper/ShortInfo/ShortInfo'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n}));\r\n\r\nconst SingleMatch = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const modalRef = useRef();\r\n\r\n  const {\r\n    tournaments: { match: tournament, loadingMatch, matchError },\r\n    user,\r\n    onGetMatch,\r\n    onDeleteMatch,\r\n    history,\r\n    match\r\n  } = props;\r\n\r\n  const tournamentId = match.params.tournamentId;\r\n\r\n  const isMobileScreen = useMediaQuery('(max-width:960px)');\r\n\r\n  const handleDelete = useCallback(() => {\r\n    modalRef.current.openModal();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    onGetMatch(tournamentId);\r\n  }, [onGetMatch, tournamentId]);\r\n\r\n  if (loadingMatch || tournament === null) {\r\n    return <Loading>Fetching Match Data...</Loading>;\r\n  }\r\n\r\n  if (tournament === null && matchError && matchError.status) {\r\n    return (\r\n      <Suspense>\r\n        <Error status={matchError.status} statusText={matchError.msg} />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  if (tournament) {\r\n    const newMatchDate = format(new Date(tournament.matchDate), 'yyyy-MM-dd');\r\n    const newMatchTime = `${newMatchDate} ${tournament.matchTime}`;\r\n\r\n    const formattedMatchDate = format(new Date(newMatchDate), 'dd MMM yyyy');\r\n    const formattedMatchTime = format(new Date(newMatchTime), 'hh:mm aa');\r\n\r\n    return (\r\n      <>\r\n        <HelmetComponent\r\n          title={`Online ${tournament.teamType} BGMI Tournament at ${formattedMatchDate} | Bluezone`}\r\n          description={`The online ${tournament.teamType} BGMI tournament of Rs ${tournament.prizePool} prize pool will be played on ${formattedMatchDate} at ${formattedMatchTime} on the map of ${tournament.map}.`}\r\n          url={`https://www.bluezone.fun/tournaments/${tournament._id}`}\r\n          indexBehaviour=\"index, follow\"\r\n        />\r\n\r\n        <Box>\r\n          <Container>\r\n            <BackButton link=\"/tournaments\" text=\"Back To Tournaments\" />\r\n\r\n            <Suspense>\r\n              <MatchActions\r\n                tournamentId={tournamentId}\r\n                role={user.role}\r\n                matchStatus={tournament.matchStatus}\r\n                participantStatus={tournament.participantStatus}\r\n                onDelete={handleDelete}\r\n              />\r\n            </Suspense>\r\n          </Container>\r\n\r\n          <MatchInfo\r\n            title={tournament.title}\r\n            matchTime={tournament.matchTime}\r\n            matchDate={tournament.matchDate}\r\n            teamType={tournament.teamType}\r\n            perspective={tournament.perspective}\r\n            map={tournament.map}\r\n            server={tournament.server}\r\n            entryFees={tournament.entryFees}\r\n            discountPercent={tournament.discountPercent}\r\n            prizePool={tournament.prizePool}\r\n          />\r\n        </Box>\r\n\r\n        <Box className={classes.root}>\r\n          <Container>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              direction={isMobileScreen ? 'column-reverse' : 'row'}\r\n            >\r\n              <Grid item xs={12} sm={12} md={8}>\r\n                <TournamentTabs\r\n                  tournamentId={tournament._id}\r\n                  teamType={tournament.teamType}\r\n                  entryFees={tournament.entryFees}\r\n                  matchStatus={tournament.matchStatus}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={12} md={4}>\r\n                <Suspense fallback={<SuspenseLoading />}>\r\n                  <ShortInfo\r\n                    tournamentId={tournament._id}\r\n                    participantStatus={tournament.participantStatus}\r\n                    entryFees={tournament.entryFees}\r\n                    discountPercent={tournament.discountPercent}\r\n                    matchStatus={tournament.matchStatus}\r\n                    participationStatus={tournament.participationStatus}\r\n                    participants={tournament.participants}\r\n                  />\r\n                </Suspense>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </Box>\r\n\r\n        <Modal\r\n          ref={modalRef}\r\n          title=\"Delete Tournament\"\r\n          confirmText=\"Delete\"\r\n          onConfirmClick={() => {\r\n            onDeleteMatch(tournamentId, history);\r\n          }}\r\n        >\r\n          <DeleteModal />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  tournaments: state.match\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetMatch: (matchId) => dispatch(actions.getMatchById(matchId)),\r\n  onDeleteMatch: (matchId, history) =>\r\n    dispatch(actions.deleteMatch(matchId, history))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleMatch);\r\n"],"sourceRoot":""}