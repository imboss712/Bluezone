{"version":3,"sources":["../node_modules/@mui/icons-material/ArrowBackRounded.js","ui/BackButton/BackButton.js","ui/styles/globalStyles.js","ui/SubmitButton/SubmitButton.js","ui/FormComponents/FormikField.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","../node_modules/@mui/icons-material/AccountBoxRounded.js","containers/CreateProfile/FormHelper/index.js","containers/CreateProfile/Profile.js","containers/CreateProfile/CreateProfile.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","useStyles","makeStyles","theme","buttonBox","marginTop","spacing","breakpoints","down","arrowIcon","fontSize","marginRight","BackButton","link","text","classes","className","elevation","to","style","textDecoration","color","globalStyles","root","maxWidth","margin","paper","padding","box","headingText","marginBottom","palette","secondary","headingIcon","submitButton","display","justifyContent","loadingIcon","marginLeft","SubmitButton","props","variant","createText","creatingText","updateText","updatingText","isSubmitting","edit","disabled","onClick","size","disableElevation","FormikField","name","label","type","placeholder","error","as","TextField","id","fullWidth","autoComplete","helperText","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","styles","ownerState","capitalize","_extends","transition","transitions","create","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","React","inProps","ref","useThemeProps","thickness","other","_objectWithoutPropertiesLoose","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","getTextFieldUtilityClass","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextFieldRoot","FormControl","autoFocus","defaultValue","FormHelperTextProps","InputLabelProps","inputProps","InputProps","inputRef","maxRows","minRows","multiline","onBlur","onChange","onFocus","required","rows","select","SelectProps","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","_jsxs","native","undefined","helperTextId","inputLabelId","InputComponent","InputElement","InputLabel","htmlFor","Select","labelId","input","FormHelperText","validationSchema","Yup","game","max","gameName","gameId","bio","Profile","sharedClasses","initialValues","handleSubmit","Box","Container","Paper","sx","Typography","onSubmit","values","setSubmitting","setTimeout","errors","touched","submitForm","readOnly","connect","state","auth","dispatch","onCreateProfile","profileData","history","actions","user","isProfile","rel","href","content","property"],"mappings":"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","file":"static/js/28.b577f12b.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 11H7.83l4.88-4.88c.39-.39.39-1.03 0-1.42a.9959.9959 0 0 0-1.41 0l-6.59 6.59c-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L7.83 13H19c.55 0 1-.45 1-1s-.45-1-1-1z\"\n}), 'ArrowBackRounded');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonBox: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down('md')]: {\r\n      marginTop: theme.spacing(3.5)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  arrowIcon: {\r\n    fontSize: theme.spacing(2.2),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst BackButton = ({ link, text }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.buttonBox} elevation={0}>\r\n      <Link to={link} style={{ textDecoration: 'none' }}>\r\n        <Button color=\"primary\">\r\n          <ArrowBackRoundedIcon className={classes.arrowIcon} color=\"primary\" />\r\n          {text}\r\n        </Button>\r\n      </Link>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst globalStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n    margin: 'auto'\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(2.8, 3)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2.6, 2)\r\n    },\r\n    borderRadius: theme.spacing(0.75),\r\n    textAlign: 'center'\r\n  },\r\n  box: {\r\n    margin: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      margin: theme.spacing(2.8, 2.8)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: theme.spacing(2.6, 1.5)\r\n    }\r\n  },\r\n  headingText: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(4),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  headingIcon: {\r\n    fontSize: theme.spacing(6),\r\n    color: '#3f51b5'\r\n  },\r\n  submitButton: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport default globalStyles;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nconst SubmitButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    variant = 'contained',\r\n    createText,\r\n    creatingText,\r\n    updateText = '',\r\n    updatingText = '',\r\n    isSubmitting,\r\n    edit = false,\r\n    disabled,\r\n    onClick\r\n  } = props;\r\n\r\n  return (\r\n    <Button\r\n      size=\"large\"\r\n      variant={variant}\r\n      color=\"primary\"\r\n      aria-label=\"Submit\"\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      disableElevation\r\n    >\r\n      {isSubmitting ? (\r\n        <>\r\n          {edit ? updatingText : creatingText}\r\n          <CircularProgress size={16} className={classes.loadingIcon} />\r\n        </>\r\n      ) : edit ? (\r\n        updateText\r\n      ) : (\r\n        createText\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport { ErrorMessage, Field } from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst FormikField = ({\r\n  name,\r\n  label,\r\n  type = 'text',\r\n  placeholder = '',\r\n  error,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <Field\r\n      as={TextField}\r\n      type={type}\r\n      id={name}\r\n      label={label}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      error={error}\r\n      disabled={disabled}\r\n      fullWidth\r\n      autoComplete=\"off\"\r\n      helperText={<ErrorMessage name={name} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormikField;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { refType } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps == null ? void 0 : InputLabelProps.required) != null ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [label, displayRequired && '\\u00a0*']\n      });\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 5v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2H5c-1.11 0-2 .9-2 2zm12 4c0 1.66-1.34 3-3 3s-3-1.34-3-3 1.34-3 3-3 3 1.34 3 3zm-9 8c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1H6v-1z\"\n}), 'AccountBoxRounded');\n\nexports.default = _default;","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  game: Yup.string().required('Required').max(30),\r\n  gameName: Yup.string().required('Required').max(20),\r\n  gameId: Yup.number('Must be a number type').required('Required'),\r\n  bio: Yup.string().required('Required').max(32)\r\n});\r\n\r\nexport { validationSchema };\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Form, Formik, Field, ErrorMessage } from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport AccountBoxRoundedIcon from '@mui/icons-material/AccountBoxRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport BackButton from '../../ui/BackButton/BackButton';\r\nimport FormikField from '../../ui/FormComponents/FormikField';\r\nimport SubmitButton from '../../ui/SubmitButton/SubmitButton';\r\nimport globalStyles from '../../ui/styles/globalStyles';\r\n\r\nimport { validationSchema } from './FormHelper/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(2.8, 3)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2.6, 2)\r\n    },\r\n    borderRadius: theme.spacing(0.75),\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const sharedClasses = globalStyles();\r\n\r\n  const { initialValues, handleSubmit, edit } = props;\r\n\r\n  return (\r\n    <Box className={sharedClasses.root}>\r\n      <Container>\r\n        {edit && <BackButton link=\"/dashboard\" text=\"Back To Dashboard\" />}\r\n\r\n        <Paper\r\n          className={classes.paper}\r\n          variant=\"outlined\"\r\n          sx={{ marginTop: edit ? 2 : 4 }}\r\n        >\r\n          <AccountBoxRoundedIcon className={sharedClasses.headingIcon} />\r\n\r\n          <Typography className={sharedClasses.headingText} variant=\"h5\">\r\n            <b>{edit ? 'Update Your Profile' : 'Create Your Profile'}</b>\r\n          </Typography>\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setTimeout(() => {\r\n                setSubmitting(false);\r\n                handleSubmit(values);\r\n              }, 500);\r\n            }}\r\n          >\r\n            {({ isSubmitting, errors, touched, submitForm }) => {\r\n              return (\r\n                <Form id=\"profile-form\">\r\n                  <Box className={sharedClasses.box}>\r\n                    <Field\r\n                      as={TextField}\r\n                      type=\"text\"\r\n                      id=\"game\"\r\n                      label=\"Game\"\r\n                      name=\"game\"\r\n                      error={touched.game && errors.game ? true : false}\r\n                      disabled={isSubmitting}\r\n                      InputProps={{\r\n                        readOnly: true\r\n                      }}\r\n                      fullWidth\r\n                      autoComplete=\"off\"\r\n                      helperText={<ErrorMessage name=\"game\" />}\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box className={sharedClasses.box}>\r\n                    <FormikField\r\n                      name=\"gameName\"\r\n                      label=\"In Game Name\"\r\n                      error={touched.gameName && errors.gameName ? true : false}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box className={sharedClasses.box}>\r\n                    <FormikField\r\n                      name=\"gameId\"\r\n                      label=\"Game Id\"\r\n                      type=\"number\"\r\n                      error={touched.gameId && errors.gameId ? true : false}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box className={sharedClasses.box}>\r\n                    <FormikField\r\n                      name=\"bio\"\r\n                      label=\"Signature\"\r\n                      placeholder=\"Your punch line..\"\r\n                      error={touched.bio && errors.bio ? true : false}\r\n                      disabled={isSubmitting}\r\n                    />\r\n                  </Box>\r\n\r\n                  <Box\r\n                    className={clsx(\r\n                      sharedClasses.box,\r\n                      sharedClasses.submitButton\r\n                    )}\r\n                  >\r\n                    <SubmitButton\r\n                      createText=\"Create Profile\"\r\n                      creatingText=\"Creating... \"\r\n                      updateText=\"Update Profile\"\r\n                      updatingText=\"Updating... \"\r\n                      isSubmitting={isSubmitting}\r\n                      edit={edit}\r\n                      disabled={\r\n                        isSubmitting ||\r\n                        errors.game ||\r\n                        errors.gameName ||\r\n                        errors.gameId ||\r\n                        errors.bio\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      onClick={submitForm}\r\n                    />\r\n                  </Box>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport Profile from './Profile';\r\n\r\nconst CreateProfile = (props) => {\r\n  const {\r\n    onCreateProfile,\r\n    history,\r\n    auth: { user }\r\n  } = props;\r\n\r\n  if (user && user.isProfile) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    const { gameName, gameId, bio } = values;\r\n    onCreateProfile({ gameName, gameId, bio }, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Create Dashboard {user.name === undefined ? null : `- ${user.name}`} |\r\n          Bluezone\r\n        </title>\r\n        <link\r\n          rel=\"canonical\"\r\n          href=\"https://www.bluezone.fun/create-dashboard\"\r\n        />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n        <meta property=\"og:locale\" content=\"en_US\" />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"og:title\" content=\"Create Dashboard | Bluezone\" />\r\n        <meta\r\n          property=\"og:url\"\r\n          content=\"https://www.bluezone.fun/create-dashboard\"\r\n        />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content=\"Create Dashboard | Bluezone\" />\r\n      </Helmet>\r\n\r\n      <Profile\r\n        initialValues={{\r\n          game: 'Battlegrounds Mobile India',\r\n          gameName: '',\r\n          gameId: '',\r\n          bio: ''\r\n        }}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onCreateProfile: (profileData, history) =>\r\n    dispatch(actions.createProfile(profileData, history))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\r\n"],"sourceRoot":""}