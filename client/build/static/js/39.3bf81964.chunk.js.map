{"version":3,"sources":["../node_modules/@material-ui/icons/ArrowBackRounded.js","components/BackButton/BackButton.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../node_modules/@material-ui/icons/InsertPhotoRounded.js","containers/AvatarForm/FormHelper/FormHelper.js","containers/AvatarForm/AvatarForm.js","containers/AvatarForm/UploadAvatar.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useStyles","makeStyles","theme","backBox","marginTop","spacing","breakpoints","down","arrow","fontSize","marginRight","BackButton","props","classes","link","text","className","elevation","to","style","textDecoration","color","SIZE","CircularProgress","ref","_props$color","_props$disableShrink","disableShrink","_props$size","size","_props$thickness","thickness","_props$value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","clsx","root","capitalize","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","SUPPORTED_FORMATS","validationSchema","Yup","shape","avatar","required","test","includes","type","Preview","lazy","maxWidth","margin","paper","padding","box","typography","marginBottom","icon","marginLeft","userIcon","preview","submitBtn","justifyContent","AvatarForm","edit","submitAvatar","previewImg","useState","setPreview","useEffect","Box","Container","Paper","Typography","initialValues","onSubmit","values","setSubmitting","formData","FormData","append","setTimeout","isSubmitting","handleSubmit","setFieldValue","errors","submitForm","fallback","SuspenseLoading","FormControl","fullWidth","error","InputLabel","htmlFor","shrink","Input","id","onChange","event","currentTarget","files","URL","createObjectURL","inputProps","accept","FormHelperText","Button","disabled","onClick","disableElevation","connect","state","auth","dispatch","onUpload","avatarData","history","actions","user","hasAvatar","undefined","rel","href","content","property"],"mappings":"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","file":"static/js/39.3bf81964.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 11H7.83l4.88-4.88c.39-.39.39-1.03 0-1.42a.9959.9959 0 00-1.41 0l-6.59 6.59c-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L7.83 13H19c.55 0 1-.45 1-1s-.45-1-1-1z\"\n}), 'ArrowBackRounded');\n\nexports.default = _default;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backBox: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(3.5)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  arrow: {\r\n    fontSize: theme.spacing(2.2),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst BackButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { link, text } = props;\r\n\r\n  return (\r\n    <Paper className={classes.backBox} elevation={0}>\r\n      <Link to={link} style={{ textDecoration: 'none' }}>\r\n        <Button color=\"primary\">\r\n          <ArrowBackRoundedIcon className={classes.arrow} color=\"primary\" />\r\n          {text}\r\n        </Button>\r\n      </Link>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"\n}), 'InsertPhotoRounded');\n\nexports.default = _default;","import * as Yup from 'yup';\r\n\r\nconst FILE_SIZE = 2000000;\r\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  avatar: Yup.mixed()\r\n    .required('Required')\r\n    .test(\r\n      'fileFormat',\r\n      'Unsupported format! Please upload an image in jpg, jpeg or png format',\r\n      (value) => value && SUPPORTED_FORMATS.includes(value.type)\r\n    )\r\n    .test(\r\n      'fileSize',\r\n      'Image is too large! Please upload less than 2MB',\r\n      (value) => value && value.size <= FILE_SIZE\r\n    )\r\n});\r\n\r\nexport { validationSchema };\r\n","import React, { lazy, Suspense, useEffect, useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport InsertPhotoRoundedIcon from '@material-ui/icons/InsertPhotoRounded';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport BackButton from '../../components/BackButton/BackButton';\r\nimport SuspenseLoading from '../../components/Loading/SuspenseLoading';\r\n\r\nimport { validationSchema } from './FormHelper/FormHelper';\r\n\r\nconst Preview = lazy(() => import('./FormHelper/Preview'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n    margin: 'auto'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2.8, 3)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(2.6, 2)\r\n    },\r\n    borderRadius: theme.spacing(0.75),\r\n    textAlign: 'center'\r\n  },\r\n  box: {\r\n    margin: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: theme.spacing(2.8, 2.8)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      margin: theme.spacing(2.6, 1.5)\r\n    }\r\n  },\r\n  typography: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  userIcon: {\r\n    fontSize: theme.spacing(6),\r\n    color: '#3F51B5'\r\n  },\r\n  preview: {\r\n    width: theme.spacing(24),\r\n    height: theme.spacing(24),\r\n    margin: '8px auto 24px auto'\r\n  },\r\n  submitBtn: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    [theme.breakpoints.down('xs')]: {\r\n      justifyContent: 'space-between'\r\n    }\r\n  }\r\n}));\r\n\r\nconst AvatarForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { edit, submitAvatar, previewImg } = props;\r\n\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  useEffect(() => {\r\n    edit && previewImg && setPreview(previewImg);\r\n  }, [edit, previewImg]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Container>\r\n        {edit && <BackButton link=\"/dashboard\" text=\"Back To Dashboard\" />}\r\n\r\n        <Paper\r\n          className={classes.paper}\r\n          variant=\"outlined\"\r\n          style={{ marginTop: edit ? '16px' : '32px' }}\r\n        >\r\n          <InsertPhotoRoundedIcon className={classes.userIcon} />\r\n          <Typography className={classes.typography} variant=\"h5\">\r\n            <b>{edit ? 'Update Profile Picture' : 'Upload Profile Picture'}</b>\r\n          </Typography>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              avatar: null\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              const formData = new FormData();\r\n              formData.append('avatar', values.avatar);\r\n\r\n              setTimeout(() => {\r\n                setSubmitting(false);\r\n                submitAvatar(formData);\r\n              }, 500);\r\n            }}\r\n          >\r\n            {({\r\n              isSubmitting,\r\n              values,\r\n              handleSubmit,\r\n              setFieldValue,\r\n              errors,\r\n              submitForm\r\n            }) => {\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Suspense fallback={<SuspenseLoading />}>\r\n                    <Preview\r\n                      preview={preview}\r\n                      values={values}\r\n                      errors={errors}\r\n                    />\r\n                  </Suspense>\r\n\r\n                  <Box className={classes.box}>\r\n                    <FormControl\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      error={errors.avatar ? true : false}\r\n                    >\r\n                      <InputLabel htmlFor=\"avatar\" shrink>\r\n                        Avatar\r\n                      </InputLabel>\r\n                      <Input\r\n                        id=\"avatar\"\r\n                        aria-describedby=\"avatar-helper-text\"\r\n                        name=\"avatar\"\r\n                        type=\"file\"\r\n                        onChange={(event) => {\r\n                          setFieldValue('avatar', event.currentTarget.files[0]);\r\n                          if (event.currentTarget.files[0]) {\r\n                            setPreview(\r\n                              URL.createObjectURL(event.currentTarget.files[0])\r\n                            );\r\n                          } else {\r\n                            setPreview(null);\r\n                          }\r\n                        }}\r\n                        inputProps={{\r\n                          accept: 'image/*'\r\n                        }}\r\n                      />\r\n                      <FormHelperText id=\"avatar-helper-text\">\r\n                        {errors.avatar}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Box>\r\n\r\n                  <Box className={clsx(classes.box, classes.submitBtn)}>\r\n                    <Link\r\n                      to=\"/dashboard\"\r\n                      style={{ textDecoration: 'none', marginRight: '10px' }}\r\n                    >\r\n                      <Button size=\"large\" color=\"primary\">\r\n                        {edit ? 'Cancel' : 'Skip'}\r\n                      </Button>\r\n                    </Link>\r\n\r\n                    <Button\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={isSubmitting || errors.avatar ? true : false}\r\n                      onClick={submitForm}\r\n                      disableElevation\r\n                    >\r\n                      {isSubmitting ? (\r\n                        <>\r\n                          {edit ? 'Updating... ' : 'Uploading... '}\r\n                          <CircularProgress\r\n                            size={16}\r\n                            className={classes.icon}\r\n                          />\r\n                        </>\r\n                      ) : edit ? (\r\n                        'Update Avatar'\r\n                      ) : (\r\n                        'Upload Avatar'\r\n                      )}\r\n                    </Button>\r\n                  </Box>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AvatarForm;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport AvatarForm from './AvatarForm';\r\n\r\nconst UploadAvatar = (props) => {\r\n  const {\r\n    history,\r\n    onUpload,\r\n    auth: { user }\r\n  } = props;\r\n\r\n  if (user && user.hasAvatar) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  const submitAvatar = (values) => {\r\n    onUpload(values, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Upload Avatar {user.name === undefined ? null : `- ${user.name}`} |\r\n          Bluezone\r\n        </title>\r\n        <link rel=\"canonical\" href=\"https://www.bluezone.fun/upload-avatar\" />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n        <meta property=\"og:locale\" content=\"en_US\" />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"og:title\" content=\"Upload Avatar | Bluezone\" />\r\n        <meta\r\n          property=\"og:url\"\r\n          content=\"https://www.bluezone.fun/upload-avatar\"\r\n        />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content=\"Upload Avatar | Bluezone\" />\r\n      </Helmet>\r\n      <AvatarForm submitAvatar={submitAvatar} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onUpload: (avatarData, history) =>\r\n    dispatch(actions.uploadAvatar(avatarData, history))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadAvatar);\r\n"],"sourceRoot":""}