{"version":3,"sources":["ui/BackButton/BackButton.js","../node_modules/@mui/icons-material/ArrowBackRounded.js","ui/styles/globalStyles.js","ui/SubmitButton/SubmitButton.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/icons-material/InsertPhotoRounded.js","containers/AvatarForm/FormHelper/index.js","containers/AvatarForm/AvatarForm.js","containers/AvatarForm/UploadAvatar.js"],"names":["useStyles","makeStyles","theme","buttonBox","marginTop","spacing","breakpoints","down","arrowIcon","fontSize","marginRight","BackButton","link","text","classes","className","elevation","to","style","textDecoration","color","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","globalStyles","root","maxWidth","margin","paper","padding","box","headingText","marginBottom","palette","secondary","headingIcon","submitButton","display","justifyContent","loadingIcon","marginLeft","SubmitButton","props","variant","createText","creatingText","updateText","updatingText","isSubmitting","edit","disabled","onClick","size","disableElevation","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","styles","ownerState","capitalize","_extends","transition","transitions","create","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","React","inProps","ref","useThemeProps","thickness","other","_objectWithoutPropertiesLoose","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","SUPPORTED_FORMATS","validationSchema","Yup","shape","avatar","required","test","includes","type","Preview","lazy","AvatarForm","sharedClasses","submitAvatar","previewImg","useState","preview","setPreview","useEffect","Box","Container","Paper","sx","Typography","initialValues","onSubmit","values","setSubmitting","formData","FormData","append","setTimeout","handleSubmit","setFieldValue","errors","submitForm","fallback","SuspenseLoading","FormControl","fullWidth","error","InputLabel","htmlFor","shrink","Input","id","onChange","event","currentTarget","files","URL","createObjectURL","inputProps","accept","FormHelperText","Button","connect","state","auth","dispatch","onUpload","avatarData","history","actions","user","hasAvatar","undefined","rel","href","content","property"],"mappings":"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","file":"static/js/35.621b172c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonBox: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down('md')]: {\r\n      marginTop: theme.spacing(3.5)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  arrowIcon: {\r\n    fontSize: theme.spacing(2.2),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst BackButton = ({ link, text }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.buttonBox} elevation={0}>\r\n      <Link to={link} style={{ textDecoration: 'none' }}>\r\n        <Button color=\"primary\">\r\n          <ArrowBackRoundedIcon className={classes.arrowIcon} color=\"primary\" />\r\n          {text}\r\n        </Button>\r\n      </Link>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 11H7.83l4.88-4.88c.39-.39.39-1.03 0-1.42a.9959.9959 0 0 0-1.41 0l-6.59 6.59c-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L7.83 13H19c.55 0 1-.45 1-1s-.45-1-1-1z\"\n}), 'ArrowBackRounded');\n\nexports.default = _default;","import makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst globalStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 600,\r\n    margin: 'auto'\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(2.8, 3)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2.6, 2)\r\n    },\r\n    borderRadius: theme.spacing(0.75),\r\n    textAlign: 'center'\r\n  },\r\n  box: {\r\n    margin: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      margin: theme.spacing(2.8, 2.8)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: theme.spacing(2.6, 1.5)\r\n    }\r\n  },\r\n  headingText: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(4),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  headingIcon: {\r\n    fontSize: theme.spacing(6)\r\n  },\r\n  submitButton: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nexport default globalStyles;\r\n","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nconst SubmitButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    variant = 'contained',\r\n    createText,\r\n    creatingText,\r\n    updateText = '',\r\n    updatingText = '',\r\n    isSubmitting,\r\n    edit = false,\r\n    disabled,\r\n    onClick\r\n  } = props;\r\n\r\n  return (\r\n    <Button\r\n      size=\"large\"\r\n      variant={variant}\r\n      color=\"primary\"\r\n      aria-label=\"Submit\"\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      disableElevation\r\n    >\r\n      {isSubmitting ? (\r\n        <>\r\n          {edit ? updatingText : creatingText}\r\n          <CircularProgress size={16} className={classes.loadingIcon} />\r\n        </>\r\n      ) : edit ? (\r\n        updateText\r\n      ) : (\r\n        createText\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: theme.palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.9 13.98l2.1 2.53 3.1-3.99c.2-.26.6-.26.8.01l3.51 4.68c.25.33.01.8-.4.8H6.02c-.42 0-.65-.48-.39-.81L8.12 14c.19-.26.57-.27.78-.02z\"\n}), 'InsertPhotoRounded');\n\nexports.default = _default;","import * as Yup from 'yup';\r\n\r\nconst FILE_SIZE = 2000000;\r\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png'];\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  avatar: Yup.mixed()\r\n    .required('Required')\r\n    .test(\r\n      'fileFormat',\r\n      'Unsupported format! Please upload an image in jpg, jpeg or png format',\r\n      (value) => value && SUPPORTED_FORMATS.includes(value.type)\r\n    )\r\n    .test(\r\n      'fileSize',\r\n      'Image is too large! Please upload less than 2MB',\r\n      (value) => value && value.size <= FILE_SIZE\r\n    )\r\n});\r\n\r\nexport { validationSchema };\r\n","import React, { lazy, Suspense, useEffect, useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Input from '@mui/material/Input';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport InsertPhotoRoundedIcon from '@mui/icons-material/InsertPhotoRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport BackButton from '../../ui/BackButton/BackButton';\r\nimport SuspenseLoading from '../../ui/Loading/SuspenseLoading';\r\nimport SubmitButton from '../../ui/SubmitButton/SubmitButton';\r\nimport globalStyles from '../../ui/styles/globalStyles';\r\n\r\nimport { validationSchema } from './FormHelper/index';\r\nconst Preview = lazy(() => import('./FormHelper/Preview'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(2.8, 3)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2.6, 2)\r\n    },\r\n    borderRadius: theme.spacing(0.75),\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nconst AvatarForm = (props) => {\r\n  const classes = useStyles();\r\n  const sharedClasses = globalStyles();\r\n\r\n  const { edit, submitAvatar, previewImg } = props;\r\n\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  useEffect(() => {\r\n    edit && previewImg && setPreview(previewImg);\r\n  }, [edit, previewImg]);\r\n\r\n  return (\r\n    <Box className={sharedClasses.root}>\r\n      <Container>\r\n        {edit && <BackButton link=\"/dashboard\" text=\"Back To Dashboard\" />}\r\n\r\n        <Paper\r\n          className={classes.paper}\r\n          variant=\"outlined\"\r\n          sx={{ marginTop: edit ? 2 : 4 }}\r\n        >\r\n          <InsertPhotoRoundedIcon\r\n            color=\"primary\"\r\n            className={sharedClasses.headingIcon}\r\n          />\r\n\r\n          <Typography className={sharedClasses.headingText} variant=\"h5\">\r\n            <b>{edit ? 'Update Profile Picture' : 'Upload Profile Picture'}</b>\r\n          </Typography>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              avatar: null\r\n            }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              const formData = new FormData();\r\n              formData.append('avatar', values.avatar);\r\n\r\n              setTimeout(() => {\r\n                setSubmitting(false);\r\n                submitAvatar(formData);\r\n              }, 500);\r\n            }}\r\n          >\r\n            {({\r\n              isSubmitting,\r\n              values,\r\n              handleSubmit,\r\n              setFieldValue,\r\n              errors,\r\n              submitForm\r\n            }) => {\r\n              return (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Suspense fallback={<SuspenseLoading />}>\r\n                    <Preview\r\n                      preview={preview}\r\n                      values={values}\r\n                      errors={errors}\r\n                    />\r\n                  </Suspense>\r\n\r\n                  <Box className={sharedClasses.box}>\r\n                    <FormControl\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      error={errors.avatar ? true : false}\r\n                    >\r\n                      <InputLabel htmlFor=\"avatar\" shrink>\r\n                        Avatar\r\n                      </InputLabel>\r\n\r\n                      <Input\r\n                        id=\"avatar\"\r\n                        aria-describedby=\"avatar-helper-text\"\r\n                        name=\"avatar\"\r\n                        type=\"file\"\r\n                        onChange={(event) => {\r\n                          setFieldValue('avatar', event.currentTarget.files[0]);\r\n                          if (event.currentTarget.files[0]) {\r\n                            setPreview(\r\n                              URL.createObjectURL(event.currentTarget.files[0])\r\n                            );\r\n                          } else {\r\n                            setPreview(null);\r\n                          }\r\n                        }}\r\n                        inputProps={{\r\n                          accept: 'image/*'\r\n                        }}\r\n                      />\r\n\r\n                      <FormHelperText id=\"avatar-helper-text\">\r\n                        {errors.avatar}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                  </Box>\r\n\r\n                  <Box\r\n                    className={clsx(\r\n                      sharedClasses.box,\r\n                      sharedClasses.submitButton\r\n                    )}\r\n                  >\r\n                    <Link\r\n                      to=\"/dashboard\"\r\n                      style={{ textDecoration: 'none', marginRight: '10px' }}\r\n                    >\r\n                      <Button size=\"large\" color=\"primary\">\r\n                        {edit ? 'Cancel' : 'Skip'}\r\n                      </Button>\r\n                    </Link>\r\n\r\n                    <SubmitButton\r\n                      createText=\"Upload Avatar\"\r\n                      creatingText=\"Uploading... \"\r\n                      updateText=\"Update Avatar\"\r\n                      updatingText=\"Updating... \"\r\n                      isSubmitting={isSubmitting}\r\n                      edit={edit}\r\n                      disabled={isSubmitting || errors.avatar ? true : false}\r\n                      onClick={submitForm}\r\n                    />\r\n                  </Box>\r\n                </form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AvatarForm;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport AvatarForm from './AvatarForm';\r\n\r\nconst UploadAvatar = (props) => {\r\n  const {\r\n    history,\r\n    onUpload,\r\n    auth: { user }\r\n  } = props;\r\n\r\n  if (user && user.hasAvatar) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  const submitAvatar = (values) => {\r\n    onUpload(values, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Upload Avatar {user.name === undefined ? null : `- ${user.name}`} |\r\n          Bluezone\r\n        </title>\r\n        <link rel=\"canonical\" href=\"https://www.bluezone.fun/upload-avatar\" />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n        <meta property=\"og:locale\" content=\"en_US\" />\r\n        <meta property=\"og:type\" content=\"article\" />\r\n        <meta property=\"og:title\" content=\"Upload Avatar | Bluezone\" />\r\n        <meta\r\n          property=\"og:url\"\r\n          content=\"https://www.bluezone.fun/upload-avatar\"\r\n        />\r\n        <meta name=\"twitter:card\" content=\"summary\" />\r\n        <meta name=\"twitter:title\" content=\"Upload Avatar | Bluezone\" />\r\n      </Helmet>\r\n\r\n      <AvatarForm submitAvatar={submitAvatar} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onUpload: (avatarData, history) =>\r\n    dispatch(actions.uploadAvatar(avatarData, history))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadAvatar);\r\n"],"sourceRoot":""}