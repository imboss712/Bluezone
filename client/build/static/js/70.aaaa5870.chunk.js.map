{"version":3,"sources":["components/Landing/Feedback/FeedbackLists.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/Landing/Feedback/SingleFeedback.js","components/Landing/Feedback/Feedback.js"],"names":["FeedbackLists","_id","name","address","city","state","feedback","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","CardHeader","action","avatar","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","type","Typography","variant","display","color","content","alignItems","padding","flex","marginRight","alignSelf","marginTop","CardContent","paddingBottom","useStyles","makeStyles","theme","spacing","maxWidth","backgroundColor","SingleFeedback","Avatar","alt","charAt","toUpperCase","paddingTop","breakpoints","down","gridGrp","marginBottom","typography","fontWeight","textAlign","fontSize","Feedback","Box","Container","Grid","container","map","item","xs","sm","md"],"mappings":"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","file":"static/js/70.aaaa5870.chunk.js","sourcesContent":["const FeedbackLists = [\r\n  {\r\n    _id: 1,\r\n    name: 'Manas Panigrahi',\r\n    address: { city: 'Patna', state: 'Bihar' },\r\n    feedback:\r\n      'A very good platform for gamers either they want to experience tournaments or they want to practice, they can play daily online tournaments and earn money too. Playing tournaments on Bluezone is also great fun.'\r\n  },\r\n  {\r\n    _id: 2,\r\n    name: 'Alok Gupta',\r\n    address: { city: 'Rohtas', state: 'Bihar' },\r\n    feedback:\r\n      'The best part is that you can play solo, duo or squad tournaments at any time on your favorite map. They host a variety of paid tournaments, each with its own entry fee and prize money.'\r\n  },\r\n  {\r\n    _id: 3,\r\n    name: 'Dheeraj Patel',\r\n    address: { city: 'Jaunpur', state: 'Uttar Pradesh' },\r\n    feedback:\r\n      'Withdrawing money is very easy as you can withdraw your winnings to UPI, mobile wallet, or bank account without having to submit your bank details as they send your payments through the payout link.'\r\n  }\r\n];\r\n\r\nexport default FeedbackLists;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(0.8, 1.75),\r\n    maxWidth: 380\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#3f51b5'\r\n  }\r\n}));\r\n\r\nconst SingleFeedback = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    feedback: {\r\n      name,\r\n      address: { city, state },\r\n      feedback\r\n    }\r\n  } = props;\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"name\" alt={name} className={classes.avatar}>\r\n            {name.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        title={name}\r\n        subheader={`${city}, ${state}`}\r\n      />\r\n\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\">{feedback}</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SingleFeedback;\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport FeedbackLists from './FeedbackLists';\r\nimport SingleFeedback from './SingleFeedback';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(5),\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: theme.spacing(4.75)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      paddingTop: theme.spacing(4.5)\r\n    }\r\n  },\r\n  gridGrp: {\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(5)\r\n  },\r\n  typography: {\r\n    color: '#282828',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n    fontSize: theme.spacing(4),\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: theme.spacing(3.8)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: theme.spacing(3.6)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Feedback = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Container>\r\n        <Typography\r\n          variant=\"h2\"\r\n          className={classes.typography}\r\n          title=\"Bluezone User Feedback\"\r\n        >\r\n          WHAT OUR USERS SAY\r\n        </Typography>\r\n\r\n        <Box className={classes.gridGrp}>\r\n          <Grid container spacing={2}>\r\n            {FeedbackLists.map((feedback) => {\r\n              return (\r\n                <Grid item xs={12} sm={6} md={4} key={feedback._id}>\r\n                  <SingleFeedback feedback={feedback} />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n"],"sourceRoot":""}