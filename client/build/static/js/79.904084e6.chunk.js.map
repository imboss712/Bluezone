{"version":3,"sources":["containers/Wallet/WalletSection/AvatarPreview.js"],"names":["useStyles","makeStyles","theme","avatarBox","padding","spacing","display","justifyContent","avatar","width","height","noavatar","backgroundColor","avatarLoading","textAlign","margin","connect","state","profile","dispatch","onGetAvatar","userId","actions","props","classes","user","useEffect","_id","className","color","variant","src","alt","name","style","fontSize","charAt","toUpperCase"],"mappings":"mGAAA,2EASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,UAAW,CACTC,QAASF,EAAMG,QAAQ,KACvBC,QAAS,OACTC,eAAgB,UAElBC,OAAQ,CACNC,MAAOP,EAAMG,QAAQ,IACrBK,OAAQR,EAAMG,QAAQ,KAExBM,SAAU,CACRF,MAAOP,EAAMG,QAAQ,MACrBK,OAAQR,EAAMG,QAAQ,MACtBO,gBAAiB,UAEnBC,cAAe,CACbC,UAAW,SACXC,OAAQb,EAAMG,QAAQ,KAAM,QAsDjBW,uBARS,SAACC,GAAD,MAAY,CAClCT,OAAQS,EAAMC,YAGW,SAACC,GAAD,MAAe,CACxCC,YAAa,SAACC,GAAD,OAAYF,EAASG,IAAkBD,QAGvCL,EAlDO,SAACO,GACrB,IAAMC,EAAUxB,IAGdyB,EAGEF,EAHFE,KACAL,EAEEG,EAFFH,YAFF,EAIIG,EADFf,OAAUK,EAHZ,EAGYA,cAAeL,EAH3B,EAG2BA,OAO3B,OAJAkB,qBAAU,WACRN,EAAYK,EAAKE,OAChB,CAACP,EAAaK,EAAKE,MAGpB,mCACGd,EACC,cAAC,IAAD,CAAKe,UAAWJ,EAAQX,cAAxB,SACE,eAAC,IAAD,CAAYgB,MAAM,UAAUC,QAAQ,QAApC,+BACqB,SAIvB,cAAC,IAAD,CAAKF,UAAWJ,EAAQrB,UAAxB,SACc,OAAXK,EACC,cAAC,IAAD,CACEuB,IAAG,gCAA2BvB,GAC9BwB,IAAKP,EAAKQ,KACVL,UAAWJ,EAAQhB,SAGrB,cAAC,IAAD,CAAQwB,IAAKP,EAAKQ,KAAML,UAAWJ,EAAQb,SAA3C,SACE,sBAAMuB,MAAO,CAAEC,SAAU,QAAzB,SACGV,EAAKQ,KAAKG,OAAO,GAAGC","file":"static/js/79.904084e6.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatarBox: {\r\n    padding: theme.spacing(1.5),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25)\r\n  },\r\n  noavatar: {\r\n    width: theme.spacing(16.5),\r\n    height: theme.spacing(16.5),\r\n    backgroundColor: 'orange'\r\n  },\r\n  avatarLoading: {\r\n    textAlign: 'center',\r\n    margin: theme.spacing(1.75, 0)\r\n  }\r\n}));\r\n\r\nconst AvatarPreview = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    user,\r\n    onGetAvatar,\r\n    avatar: { avatarLoading, avatar }\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    onGetAvatar(user._id);\r\n  }, [onGetAvatar, user._id]);\r\n\r\n  return (\r\n    <>\r\n      {avatarLoading ? (\r\n        <Box className={classes.avatarLoading}>\r\n          <Typography color=\"primary\" variant=\"body2\">\r\n            Fetching Avatar...{' '}\r\n          </Typography>\r\n        </Box>\r\n      ) : (\r\n        <Box className={classes.avatarBox}>\r\n          {avatar !== null ? (\r\n            <Avatar\r\n              src={`data:image/png;base64,${avatar}`}\r\n              alt={user.name}\r\n              className={classes.avatar}\r\n            />\r\n          ) : (\r\n            <Avatar alt={user.name} className={classes.noavatar}>\r\n              <span style={{ fontSize: '80px' }}>\r\n                {user.name.charAt(0).toUpperCase()}\r\n              </span>\r\n            </Avatar>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  avatar: state.profile\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetAvatar: (userId) => dispatch(actions.getAvatar(userId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AvatarPreview);\r\n"],"sourceRoot":""}