{"version":3,"sources":["components/BackButton/BackButton.js","assets/loading.svg","components/Loading/Loading.js","containers/CreateProfile/FormHelpers/Items.js","containers/CreateProfile/FormHelpers/validationSchema.js","containers/CreateProfile/Profile.js","containers/CreateProfile/UpdateProfile.js"],"names":["useStyles","makeStyles","theme","backBox","marginTop","spacing","breakpoints","down","arrow","fontSize","marginRight","BackButton","props","classes","link","text","className","elevation","to","style","textDecoration","color","loadingBox","textAlign","margin","paper","padding","loadingIcon","marginLeft","verticalAlign","image","width","height","Loading","children","hideImage","Box","Paper","src","loading","alt","Typography","variant","CircularProgress","size","roleItems","label","value","favGunItems","favMapItems","perspectiveItems","teamTypeItems","tierItems","validationSchema","Yup","gameName","required","gameId","bio","max","role","oneOf","map","r","favoriteGun","of","shape","f","min","favoriteMap","m","server","season","perspective","p","teamType","tt","rpValue","kdValue","tierValue","t","city","district","state","pincode","matches","instagram","url","youtube","twitter","facebook","InfoForm","lazy","StatsForm","AddressForm","SocialForm","root","maxWidth","typography","marginBottom","palette","secondary","icon","profileIcon","stepper","stepperRoot","overflow","buttonGroup","display","button","Profile","activeStep","initialValues","handleSubmit","steps","setActiveStep","edit","currentValidationSchema","handleBack","prevActiveStep","Container","Stepper","alternativeLabel","Step","StepLabel","onSubmit","isSubmitting","errors","touched","err","_nodes","every","node","id","Grid","container","justifyContent","stepIndex","fallback","SuspenseLoading","disable","getStepContent","Button","disabled","onClick","type","disableElevation","length","Error","connect","auth","profile","dispatch","onGetProfile","actions","onUpdateProfile","profileData","history","user","profileError","useState","useEffect","isProfile","status","statusText","msg","undefined","name","rel","href","content","property","find","item","stats","address","social","values","newValues","setTimeout","setSubmitting","submitForm","setTouched"],"mappings":"iLAOMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,SAAO,GACLC,UAAWF,EAAMG,QAAQ,IADpB,cAEJH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BH,UAAWF,EAAMG,QAAQ,OAHtB,cAKJH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BH,UAAWF,EAAMG,QAAQ,KANtB,wBAQIH,EAAMG,QAAQ,EAAG,IARrB,GAUPG,MAAO,CACLC,SAAUP,EAAMG,QAAQ,KACxBK,YAAaR,EAAMG,QAAQ,QAqBhBM,IAjBI,SAACC,GAClB,IAAMC,EAAUb,IAERc,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KAEd,OACE,cAAC,IAAD,CAAOC,UAAWH,EAAQV,QAASc,UAAW,EAA9C,SACE,cAAC,IAAD,CAAMC,GAAIJ,EAAMK,MAAO,CAAEC,eAAgB,QAAzC,SACE,eAAC,IAAD,CAAQC,MAAM,UAAd,UACE,cAAC,IAAD,CAAsBL,UAAWH,EAAQL,MAAOa,MAAM,YACrDN,W,8FClCI,MAA0B,oC,OCSnCf,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCoB,WAAY,CACVC,UAAW,SACXC,OAAQ,QAEVC,MAAO,CACLC,QAASxB,EAAMG,QAAQ,IAEzBsB,YAAa,CACXC,WAAY1B,EAAMG,QAAQ,KAC1BwB,cAAe,YAEjBC,OAAK,GACHC,MAAO,IACPC,OAAQ,KAFL,cAGF9B,EAAMI,YAAYC,KAAK,MAAQ,CAC9BwB,MAAO,IACPC,OAAQ,MALP,cAOF9B,EAAMI,YAAYC,KAAK,MAAQ,CAC9BwB,MAAO,IACPC,OAAQ,MATP,cAWF9B,EAAMI,YAAYC,KAAK,KAAO,CAC7BwB,MAAO,IACPC,OAAQ,MAbP,OA2CQC,IAzBC,SAACrB,GACf,IAAMC,EAAUb,IAERkC,EAAwBtB,EAAxBsB,SAAUC,EAAcvB,EAAduB,UAElB,OACE,cAACC,EAAA,EAAD,CAAKpB,UAAWH,EAAQS,WAAxB,SACE,eAACe,EAAA,EAAD,CAAOrB,UAAWH,EAAQY,MAAOR,UAAW,EAA5C,UACGkB,IAA2B,IAAdA,EAAqB,KACjC,qBAAKG,IAAKC,EAASC,IAAI,aAAaxB,UAAWH,EAAQiB,QAGzD,eAACW,EAAA,EAAD,CAAYpB,MAAM,UAAUqB,QAAQ,KAApC,UACGR,EAAU,IACX,cAACS,EAAA,EAAD,CACEC,KAAM,GACNvB,MAAM,UACNL,UAAWH,EAAQc,wB,iCCxD/B,gNAAMkB,EAAY,CAChB,CACEC,MAAO,MACPC,MAAO,OAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,YACPC,MAAO,aAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,UACPC,MAAO,YAILC,EAAc,CAClB,CACEF,MAAO,MACPC,MAAO,OAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,QACPC,MAAO,UAILE,EAAc,CAClB,CACEH,MAAO,UACPC,MAAO,WAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,SACPC,MAAO,WAILG,EAAmB,CACvB,CACEJ,MAAO,MACPC,MAAO,OAET,CACED,MAAO,MACPC,MAAO,QAILI,EAAgB,CACpB,CACEL,MAAO,OACPC,MAAO,QAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,QACPC,MAAO,UAILK,EAAY,CAChB,CACEN,MAAO,SACPC,MAAO,UAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,gBACP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","file":"static/js/44.bfcc6f02.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backBox: {\r\n    marginTop: theme.spacing(4),\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(3.5)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginTop: theme.spacing(3)\r\n    },\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  arrow: {\r\n    fontSize: theme.spacing(2.2),\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst BackButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { link, text } = props;\r\n\r\n  return (\r\n    <Paper className={classes.backBox} elevation={0}>\r\n      <Link to={link} style={{ textDecoration: 'none' }}>\r\n        <Button color=\"primary\">\r\n          <ArrowBackRoundedIcon className={classes.arrow} color=\"primary\" />\r\n          {text}\r\n        </Button>\r\n      </Link>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n","export default __webpack_public_path__ + \"static/media/loading.46b68eb6.svg\";","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport loading from '../../assets/loading.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingBox: {\r\n    textAlign: 'center',\r\n    margin: 'auto'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5)\r\n  },\r\n  loadingIcon: {\r\n    marginLeft: theme.spacing(0.75),\r\n    verticalAlign: 'text-top'\r\n  },\r\n  image: {\r\n    width: 300,\r\n    height: 300,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 275,\r\n      height: 275\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 250,\r\n      height: 250\r\n    },\r\n    [theme.breakpoints.down(375)]: {\r\n      width: 200,\r\n      height: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst Loading = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { children, hideImage } = props;\r\n\r\n  return (\r\n    <Box className={classes.loadingBox}>\r\n      <Paper className={classes.paper} elevation={0}>\r\n        {hideImage || hideImage === true ? null : (\r\n          <img src={loading} alt=\"Loading...\" className={classes.image} />\r\n        )}\r\n\r\n        <Typography color=\"primary\" variant=\"h6\">\r\n          {children}{' '}\r\n          <CircularProgress\r\n            size={24}\r\n            color=\"primary\"\r\n            className={classes.loadingIcon}\r\n          />\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","const roleItems = [\r\n  {\r\n    label: 'IGL',\r\n    value: 'IGL'\r\n  },\r\n  {\r\n    label: 'Sniper',\r\n    value: 'Sniper'\r\n  },\r\n  {\r\n    label: 'Assaulter',\r\n    value: 'Assaulter'\r\n  },\r\n  {\r\n    label: 'Camper',\r\n    value: 'Camper'\r\n  },\r\n  {\r\n    label: 'Fragger',\r\n    value: 'Fragger'\r\n  },\r\n  {\r\n    label: 'Medic',\r\n    value: 'Medic'\r\n  },\r\n  {\r\n    label: 'Support',\r\n    value: 'Support'\r\n  }\r\n];\r\n\r\nconst favGunItems = [\r\n  {\r\n    label: 'AKM',\r\n    value: 'AKM'\r\n  },\r\n  {\r\n    label: 'M416',\r\n    value: 'M416'\r\n  },\r\n  {\r\n    label: 'GROZA',\r\n    value: 'GROZA'\r\n  },\r\n  {\r\n    label: 'AUG',\r\n    value: 'AUG'\r\n  },\r\n  {\r\n    label: 'M762',\r\n    value: 'M762'\r\n  },\r\n  {\r\n    label: 'Kar98K',\r\n    value: 'Kar98K'\r\n  },\r\n  {\r\n    label: 'M24',\r\n    value: 'M24'\r\n  },\r\n  {\r\n    label: 'AWM',\r\n    value: 'AWM'\r\n  },\r\n  {\r\n    label: 'Mk14',\r\n    value: 'Mk14'\r\n  },\r\n  {\r\n    label: 'UZI',\r\n    value: 'UZI'\r\n  },\r\n  {\r\n    label: 'Vector',\r\n    value: 'Vector'\r\n  },\r\n  {\r\n    label: 'M249',\r\n    value: 'M249'\r\n  },\r\n  {\r\n    label: 'DP-28',\r\n    value: 'DP-28'\r\n  }\r\n];\r\n\r\nconst favMapItems = [\r\n  {\r\n    label: 'Erangel',\r\n    value: 'Erangel'\r\n  },\r\n  {\r\n    label: 'Miramar',\r\n    value: 'Miramar'\r\n  },\r\n  {\r\n    label: 'Sanhok',\r\n    value: 'Sanhok'\r\n  }\r\n];\r\n\r\nconst perspectiveItems = [\r\n  {\r\n    label: 'TPP',\r\n    value: 'TPP'\r\n  },\r\n  {\r\n    label: 'FPP',\r\n    value: 'FPP'\r\n  }\r\n];\r\n\r\nconst teamTypeItems = [\r\n  {\r\n    label: 'Solo',\r\n    value: 'Solo'\r\n  },\r\n  {\r\n    label: 'Duo',\r\n    value: 'Duo'\r\n  },\r\n  {\r\n    label: 'Squad',\r\n    value: 'Squad'\r\n  }\r\n];\r\n\r\nconst tierItems = [\r\n  {\r\n    label: 'Bronze',\r\n    value: 'Bronze'\r\n  },\r\n  {\r\n    label: 'Silver',\r\n    value: 'Silver'\r\n  },\r\n  {\r\n    label: 'Gold',\r\n    value: 'Gold'\r\n  },\r\n  {\r\n    label: 'Platinum',\r\n    value: 'Platinum'\r\n  },\r\n  {\r\n    label: 'Diamond',\r\n    value: 'Diamond'\r\n  },\r\n  {\r\n    label: 'Crown',\r\n    value: 'Crown'\r\n  },\r\n  {\r\n    label: 'Ace',\r\n    value: 'Ace'\r\n  },\r\n  {\r\n    label: 'Ace Master',\r\n    value: 'Ace Master'\r\n  },\r\n  {\r\n    label: 'Ace Dominator',\r\n    value: 'Ace Dominator'\r\n  },\r\n  {\r\n    label: 'Conqueror',\r\n    value: 'Conqueror'\r\n  }\r\n];\r\n\r\nexport {\r\n  roleItems,\r\n  favGunItems,\r\n  favMapItems,\r\n  perspectiveItems,\r\n  teamTypeItems,\r\n  tierItems\r\n};\r\n","import * as Yup from 'yup';\r\n\r\nimport {\r\n  roleItems,\r\n  favGunItems,\r\n  favMapItems,\r\n  perspectiveItems,\r\n  teamTypeItems,\r\n  tierItems\r\n} from './Items';\r\n\r\nconst validationSchema = [\r\n  Yup.object({\r\n    gameName: Yup.string().required('Required'),\r\n    gameId: Yup.number('Must be a number type').required('Required'),\r\n    bio: Yup.string().required('Required').max(70),\r\n    role: Yup.string()\r\n      .required('Required')\r\n      .oneOf(roleItems.map((r) => r.value)),\r\n    favoriteGun: Yup.array()\r\n      .of(\r\n        Yup.object().shape({\r\n          label: Yup.string()\r\n            .required('Required')\r\n            .oneOf(favGunItems.map((f) => f.label)),\r\n          value: Yup.string()\r\n            .required('Required')\r\n            .oneOf(favGunItems.map((f) => f.value))\r\n        })\r\n      )\r\n      .min(1, 'Min of 1 Favorite Gun')\r\n      .max(3, 'Max of 3 Favorite Gun')\r\n  }),\r\n  Yup.object({\r\n    favoriteMap: Yup.string()\r\n      .required('Required')\r\n      .oneOf(favMapItems.map((m) => m.value)),\r\n    server: Yup.string().required('Required'),\r\n    season: Yup.number().required('Required').min(19).max(30),\r\n    perspective: Yup.string()\r\n      .required('Required')\r\n      .oneOf(perspectiveItems.map((p) => p.value)),\r\n    teamType: Yup.string()\r\n      .required('Required')\r\n      .oneOf(teamTypeItems.map((tt) => tt.value)),\r\n    rpValue: Yup.number().required('Required').min(0).max(100),\r\n    kdValue: Yup.number().required('Required').min(0).max(15),\r\n    tierValue: Yup.string()\r\n      .required('Required')\r\n      .oneOf(tierItems.map((t) => t.value))\r\n  }),\r\n  Yup.object({\r\n    city: Yup.string().required('Required'),\r\n    district: Yup.string().required('Required'),\r\n    state: Yup.string().required('Required'),\r\n    pincode: Yup.string()\r\n      .required('Required')\r\n      .matches(/^[1-9]{1}[0-9]{5}$/, 'Invalid Pin Code')\r\n  }),\r\n  Yup.object({\r\n    instagram: Yup.string().url(),\r\n    youtube: Yup.string().url(),\r\n    twitter: Yup.string().url(),\r\n    facebook: Yup.string().url()\r\n  })\r\n];\r\n\r\nexport default validationSchema;\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AccountBoxRoundedIcon from '@material-ui/icons/AccountBoxRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport BackButton from '../../components/BackButton/BackButton';\r\nimport SuspenseLoading from '../../components/Loading/SuspenseLoading';\r\n\r\nimport validationSchema from './FormHelpers/validationSchema';\r\n\r\nconst InfoForm = lazy(() => import('./ProfileForms/InfoForm'));\r\nconst StatsForm = lazy(() => import('./ProfileForms/StatsForm'));\r\nconst AddressForm = lazy(() => import('./ProfileForms/AddressForm'));\r\nconst SocialForm = lazy(() => import('./ProfileForms/SocialForm'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 960,\r\n    margin: 'auto'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(2.8, 3.75)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(2.6, 3.5)\r\n    },\r\n    borderRadius: theme.spacing(0.75),\r\n    textAlign: 'center'\r\n  },\r\n  typography: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  profileIcon: {\r\n    fontSize: theme.spacing(6),\r\n    color: '#3F51B5'\r\n  },\r\n  stepper: {\r\n    width: '100%'\r\n  },\r\n  stepperRoot: {\r\n    padding: theme.spacing(3),\r\n    overflow: 'auto',\r\n    marginBottom: theme.spacing(2),\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(3, 1.5)\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: theme.spacing(3, 0)\r\n    }\r\n  },\r\n  buttonGroup: {\r\n    display: 'inline-block',\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    activeStep,\r\n    initialValues,\r\n    handleSubmit,\r\n    steps,\r\n    setActiveStep,\r\n    edit\r\n  } = props;\r\n\r\n  const currentValidationSchema = validationSchema[activeStep];\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Container>\r\n        {edit && <BackButton link=\"/dashboard\" text=\"Back To Dashboard\" />}\r\n\r\n        <Paper\r\n          className={classes.paper}\r\n          variant=\"outlined\"\r\n          style={{ marginTop: edit ? '16px' : '32px' }}\r\n        >\r\n          <AccountBoxRoundedIcon className={classes.profileIcon} />\r\n\r\n          <Typography className={classes.typography} variant=\"h5\">\r\n            <b>{edit ? 'Update Your Profile' : 'Create Your Profile'}</b>\r\n          </Typography>\r\n\r\n          <Box className={classes.stepper}>\r\n            <Stepper\r\n              activeStep={activeStep}\r\n              alternativeLabel\r\n              className={classes.stepperRoot}\r\n            >\r\n              {steps.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel>{label}</StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={currentValidationSchema}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              {({ isSubmitting, errors, touched }) => {\r\n                const err = !currentValidationSchema._nodes.every(\r\n                  (node) => typeof errors[node] === 'undefined'\r\n                );\r\n\r\n                const getStepContent = (stepIndex) => {\r\n                  switch (stepIndex) {\r\n                    case 0:\r\n                      return (\r\n                        <Suspense fallback={<SuspenseLoading />}>\r\n                          <InfoForm\r\n                            errors={errors}\r\n                            touched={touched}\r\n                            disable={isSubmitting ? true : false}\r\n                          />\r\n                        </Suspense>\r\n                      );\r\n                    case 1:\r\n                      return (\r\n                        <Suspense fallback={<SuspenseLoading />}>\r\n                          <StatsForm\r\n                            errors={errors}\r\n                            touched={touched}\r\n                            disable={isSubmitting ? true : false}\r\n                          />\r\n                        </Suspense>\r\n                      );\r\n                    case 2:\r\n                      return (\r\n                        <Suspense fallback={<SuspenseLoading />}>\r\n                          <AddressForm />\r\n                        </Suspense>\r\n                      );\r\n                    case 3:\r\n                      return (\r\n                        <Suspense fallback={<SuspenseLoading />}>\r\n                          <SocialForm />\r\n                        </Suspense>\r\n                      );\r\n                    default:\r\n                      return 'Unknown stepIndex';\r\n                  }\r\n                };\r\n\r\n                return (\r\n                  <Form id=\"profile-form\">\r\n                    <Grid\r\n                      container\r\n                      spacing={3}\r\n                      style={{ justifyContent: 'space-around' }}\r\n                    >\r\n                      {getStepContent(activeStep)}\r\n                    </Grid>\r\n\r\n                    <Box className={classes.buttonGroup}>\r\n                      {activeStep > 0 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          size=\"large\"\r\n                          disabled={\r\n                            activeStep === 0 || (isSubmitting ? true : false)\r\n                          }\r\n                          onClick={handleBack}\r\n                          className={classes.button}\r\n                        >\r\n                          Back\r\n                        </Button>\r\n                      )}\r\n\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        disabled={isSubmitting || err ? true : false}\r\n                        className={classes.button}\r\n                        disableElevation\r\n                      >\r\n                        {activeStep === steps.length - 1 ? (\r\n                          isSubmitting ? (\r\n                            <>\r\n                              {edit ? 'Updating... ' : 'Completing... '}\r\n                              <CircularProgress\r\n                                size={16}\r\n                                className={classes.icon}\r\n                              />\r\n                            </>\r\n                          ) : edit ? (\r\n                            'Update Profile'\r\n                          ) : (\r\n                            'Complete Profile'\r\n                          )\r\n                        ) : (\r\n                          'Next'\r\n                        )}\r\n                      </Button>\r\n                    </Box>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          </Box>\r\n        </Paper>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { lazy, Suspense, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport { favGunItems } from './FormHelpers/Items';\r\nimport Profile from './Profile';\r\n\r\nimport Loading from '../../components/Loading/Loading';\r\nconst Error = lazy(() => import('../../components/Error/Error'));\r\n\r\nconst getSteps = () => {\r\n  return ['General Information', 'Game Statistics', 'Address', 'Social Links'];\r\n};\r\n\r\nconst UpdateProfile = (props) => {\r\n  const {\r\n    history,\r\n    auth: { user },\r\n    profile: { loading, profile, profileError },\r\n    onGetProfile,\r\n    onUpdateProfile\r\n  } = props;\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const steps = getSteps();\r\n\r\n  useEffect(() => {\r\n    onGetProfile();\r\n  }, [onGetProfile]);\r\n\r\n  if (user && !user.isProfile) {\r\n    return <Redirect to=\"/create-dashboard\" />;\r\n  }\r\n\r\n  const submitForm = (values, actions) => {\r\n    const newValues = {\r\n      gameName: values.gameName,\r\n      gameId: values.gameId,\r\n      bio: values.bio,\r\n      role: values.role,\r\n      favoriteGun: values.favoriteGun.map((f) => f.value),\r\n      stats: {\r\n        favoriteMap: values.favoriteMap,\r\n        server: values.server,\r\n        season: values.season,\r\n        perspective: values.perspective,\r\n        teamType: values.teamType,\r\n        rpValue: values.rpValue,\r\n        kdValue: values.kdValue,\r\n        tierValue: values.tierValue\r\n      },\r\n      address: {\r\n        city: values.city,\r\n        district: values.district,\r\n        state: values.state,\r\n        pincode: values.pincode\r\n      },\r\n      social: {\r\n        instagram: values.instagram,\r\n        youtube: values.youtube,\r\n        twitter: values.twitter,\r\n        facebook: values.facebook\r\n      }\r\n    };\r\n\r\n    setTimeout(() => {\r\n      actions.setSubmitting(false);\r\n      onUpdateProfile(newValues, history);\r\n    }, 500);\r\n  };\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    if (activeStep === steps.length - 1) {\r\n      submitForm(values, actions);\r\n    } else {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n      actions.setTouched({});\r\n      actions.setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading || profile === null) {\r\n    return <Loading>Fetching Profile Data...</Loading>;\r\n  }\r\n\r\n  if (profile == null && profileError && profileError.status) {\r\n    return (\r\n      <Suspense>\r\n        <Error status={profileError.status} statusText={profileError.msg} />\r\n      </Suspense>\r\n    );\r\n  }\r\n\r\n  if (profile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <title>\r\n            Update Dashboard {user.name === undefined ? null : `- ${user.name}`}{' '}\r\n            | Bluezone\r\n          </title>\r\n          <link\r\n            rel=\"canonical\"\r\n            href=\"https://www.bluezone.fun/edit-dashboard\"\r\n          />\r\n          <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n          <meta property=\"og:locale\" content=\"en_US\" />\r\n          <meta property=\"og:type\" content=\"article\" />\r\n          <meta property=\"og:title\" content=\"Update Dashboard | Bluezone\" />\r\n          <meta\r\n            property=\"og:url\"\r\n            content=\"https://www.bluezone.fun/edit-dashboard\"\r\n          />\r\n          <meta name=\"twitter:card\" content=\"summary\" />\r\n          <meta name=\"twitter:title\" content=\"Update Dashboard | Bluezone\" />\r\n        </Helmet>\r\n\r\n        <Profile\r\n          initialValues={{\r\n            gameName: profile.gameName,\r\n            gameId: profile.gameId,\r\n            bio: profile.bio,\r\n            role: profile.role,\r\n            favoriteGun: profile.favoriteGun.map((f) => {\r\n              return favGunItems.find((item) => item.value === f);\r\n            }),\r\n            favoriteMap: profile.stats.favoriteMap,\r\n            server: profile.stats.server,\r\n            season: profile.stats.season,\r\n            perspective: profile.stats.perspective,\r\n            teamType: profile.stats.teamType,\r\n            rpValue: profile.stats.rpValue,\r\n            kdValue: profile.stats.kdValue,\r\n            tierValue: profile.stats.tierValue,\r\n            city: profile.address.city,\r\n            district: profile.address.district,\r\n            state: profile.address.state,\r\n            pincode: profile.address.pincode,\r\n            instagram: profile.social.instagram,\r\n            youtube: profile.social.youtube,\r\n            twitter: profile.social.twitter,\r\n            facebook: profile.social.facebook\r\n          }}\r\n          handleSubmit={handleSubmit}\r\n          activeStep={activeStep}\r\n          steps={steps}\r\n          setActiveStep={setActiveStep}\r\n          edit\r\n        />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetProfile: () => dispatch(actions.getMyProfile()),\r\n  onUpdateProfile: (profileData, history) =>\r\n    dispatch(actions.updateProfile(profileData, history))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfile);\r\n"],"sourceRoot":""}