{"version":3,"sources":["containers/CreateMatch/FormHelper/FormikSelect.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js","../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","../../src/Autocomplete.tsx","containers/CreateProfile/ProfileForms/InfoForm.js"],"names":["MaterialUISelectField","errorString","label","children","value","name","onChange","onBlur","required","error","disabled","fullWidth","variant","native","FormikSelect","items","autoOk","as","map","item","createSvgIcon","React","d","isDeleteKeyboardEvent","keyboardEvent","key","Chip","props","ref","avatarProp","avatar","classes","className","clickableProp","clickable","_props$color","color","ComponentProp","component","deleteIconProp","deleteIcon","_props$disabled","iconProp","icon","onClick","onDelete","onKeyDown","onKeyUp","_props$size","size","_props$variant","other","_objectWithoutProperties","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","clsx","concat","capitalize","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","_extends","role","undefined","root","outlined","outlinedPrimary","outlinedSecondary","sizeSmall","deletable","tabIndex","currentTarget","target","preventDefault","current","blur","labelSmall","withStyles","theme","backgroundColor","palette","type","grey","deleteIconColor","alpha","text","primary","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","getContrastText","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","pointerEvents","marginLeft","marginRight","width","contrastText","dark","secondary","colorPrimary","main","colorSecondary","userSelect","WebkitTapHighlightColor","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","margin","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","ListSubheader","_props$component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","sticky","gutters","lineHeight","listStyle","fontWeight","fontWeightMedium","colorInherit","position","top","zIndex","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","arguments","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_props$getOptionSelec","getOptionSelected","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","valueProp","useId","ignoreFocus","firstFocus","inputRef","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValue","_useControlled3","state","_useControlled4","setInputValue","_React$useState3","focused","setFocused","resetInputValue","useEventCallback","newValue","newInputValue","optionLabel","_useControlled5","_useControlled6","setOpenState","inputValueIsSelectedValue","popupOpen","some","value2","focusTag","tagToFocus","focus","querySelector","setHighlightedIndex","_ref2","index","_ref2$reason","reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","_ref3$direction","direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","which","handleFocus","handleBlur","document","activeElement","handleInputChange","handleOptionMouseOver","Number","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","onFocus","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","_ref4","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart","DisablePortal","CloseIcon","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","x","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_useAutocomplete","getCustomizedTagProps","params","tag","tagSizeSmall","groupLabel","groupUl","renderListOption","optionProps","hasClearIcon","hasPopupIcon","InputLabelProps","InputProps","inputRoot","endAdornment","IconButton","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","style","clientWidth","paper","noOptions","listbox","option2","index2","_option","visibility","maxWidth","flexWrap","minWidth","paddingBottom","right","paddingTop","flexGrow","transform","modal","body1","maxHeight","minHeight","_defineProperty","breakpoints","up","hover","disabledOpacity","background","isValueSelected","ToggleButtonGroup","_props$exclusive","exclusive","_props$orientation","orientation","handleChange","buttonValue","handleExclusiveChange","vertical","child","grouped","shape","flexDirection","groupedHorizontal","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","React.createElement","field","form","isSubmitting","setFieldValue","fieldSubselection","_event","fieldToAutocomplete","displayName","InfoForm","errors","touched","disable","Grid","xs","sm","TextField","multiline","minRows","maxRows","placeholder","roleItems","favGunItems","favoriteGun","helperText"],"mappings":"mGAAA,6DAOMA,EAAwB,SAAC,GAWxB,IAVLC,EAUI,EAVJA,YACAC,EASI,EATJA,MACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,eAAC,IAAD,CAAaC,WAAS,EAACC,QAAQ,WAAWH,MAAOA,EAAOC,SAAUA,EAAlE,UACE,cAAC,IAAD,CAAYF,SAAUA,EAAtB,SAAiCN,IAEjC,cAAC,IAAD,CACEW,QAAM,EACNR,KAAMA,EACNH,MAAOA,EACPI,SAAUA,EACVC,OAAQA,EACRH,MAAOA,EANT,SAQGD,IAGH,cAAC,IAAD,CAAgBM,OAAK,EAArB,SAAuBR,QAiCda,IA5BM,SAAC,GAOf,IANLT,EAMI,EANJA,KACAU,EAKI,EALJA,MACAb,EAII,EAJJA,MAII,IAHJM,gBAGI,SAFJC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEA,OACE,cAAC,IAAD,CACEM,QAAM,EACNX,KAAMA,EACNY,GAAIjB,EACJE,MAAOA,EACPD,YAAa,cAAC,IAAD,CAAcI,KAAMA,IACjCG,SAAUA,EACVC,MAAOA,EACPC,SAAUA,EARZ,SAUGK,EAAMG,KAAI,SAACC,GAAD,OACT,wBAAyBf,MAAOe,EAAKf,MAArC,SACGe,EAAKjB,OADKiB,EAAKf,c,iCC3D1B,mBAMegB,gBAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,0GACD,U,gFCFWF,cAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,oLACD,U,uCC0RJ,SAASC,EAAsBC,GAC7B,MAA6B,cAAtBA,EAAcC,KAA6C,WAAtBD,EAAcC,IAO5D,IAAIC,EAAoBL,cAAiB,SAAcM,EAAOC,GAC5D,IAAIC,EAAaF,EAAMG,OACnBC,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,EAAgBN,EAAMO,UACtBC,EAAeR,EAAMS,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAgBV,EAAMW,UACtBC,EAAiBZ,EAAMa,WACvBC,EAAkBd,EAAMjB,SACxBA,OAA+B,IAApB+B,GAAqCA,EAChDC,EAAWf,EAAMgB,KACjBzC,EAAQyB,EAAMzB,MACd0C,EAAUjB,EAAMiB,QAChBC,EAAWlB,EAAMkB,SACjBC,EAAYnB,EAAMmB,UAClBC,EAAUpB,EAAMoB,QAChBC,EAAcrB,EAAMsB,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAiBvB,EAAMf,QACvBA,OAA6B,IAAnBsC,EAA4B,UAAYA,EAClDC,EAAQC,YAAyBzB,EAAO,CAAC,SAAU,UAAW,YAAa,YAAa,QAAS,YAAa,aAAc,WAAY,OAAQ,QAAS,UAAW,WAAY,YAAa,UAAW,OAAQ,YAEhN0B,EAAUhC,SAAa,MACvBiC,EAAYC,YAAWF,EAASzB,GAEhC4B,EAAwB,SAA+BC,GAEzDA,EAAMC,kBAEFb,GACFA,EAASY,IAgCTvB,KAA8B,IAAlBD,IAA2BW,IAAiBX,EACxD0B,EAAiB,UAATV,EACRW,EAAYvB,IAAkBH,EAAY2B,IAAa,OACvDC,EAAYF,IAAcC,IAAa,CACzCvB,UAAW,OACT,GACAE,EAAa,KAEjB,GAAIK,EAAU,CACZ,IAAIkB,EAAgBC,YAAe,YAAV5B,IAAoC,YAAZxB,EAAwBmB,EAAQ,kBAAkBkC,OAAOC,YAAW9B,KAAWL,EAAQ,0BAA0BkC,OAAOC,YAAW9B,MAAWuB,GAAS5B,EAAQoC,iBAChN3B,EAAaD,GAA+BlB,iBAAqBkB,GAA+BlB,eAAmBkB,EAAgB,CACjIP,UAAWgC,YAAKzB,EAAeZ,MAAMK,UAAWD,EAAQS,WAAYuB,GACpEnB,QAASY,IACOnC,gBAAoB+C,EAAY,CAChDpC,UAAWgC,YAAKjC,EAAQS,WAAYuB,GACpCnB,QAASY,IAIb,IAAI1B,EAAS,KAETD,GAA2BR,iBAAqBQ,KAClDC,EAAsBT,eAAmBQ,EAAY,CACnDG,UAAWgC,YAAKjC,EAAQD,OAAQD,EAAWF,MAAMK,UAAW2B,GAAS5B,EAAQsC,YAAuB,YAAVjC,GAAuBL,EAAQ,cAAckC,OAAOC,YAAW9B,SAI7J,IAAIO,EAAO,KAcX,OAZID,GAAyBrB,iBAAqBqB,KAChDC,EAAoBtB,eAAmBqB,EAAU,CAC/CV,UAAWgC,YAAKjC,EAAQY,KAAMD,EAASf,MAAMK,UAAW2B,GAAS5B,EAAQuC,UAAqB,YAAVlC,GAAuBL,EAAQ,YAAYkC,OAAOC,YAAW9B,SAUjIf,gBAAoBuC,EAAWW,YAAS,CAC1DC,KAAMtC,GAAaW,EAAW,cAAW4B,EACzCzC,UAAWgC,YAAKjC,EAAQ2C,KAAM1C,EAAqB,YAAVI,GAAuB,CAACL,EAAQ,QAAQkC,OAAOC,YAAW9B,KAAUF,GAAaH,EAAQ,iBAAiBkC,OAAOC,YAAW9B,KAAUS,GAAYd,EAAQ,iBAAiBkC,OAAOC,YAAW9B,MAAuB,YAAZxB,GAAyB,CAACmB,EAAQ4C,SAAU,CAC3R,QAAW5C,EAAQ6C,gBACnB,UAAa7C,EAAQ8C,mBACrBzC,IAAS1B,GAAYqB,EAAQrB,SAAUiD,GAAS5B,EAAQ+C,UAAW5C,GAAaH,EAAQG,UAAWW,GAAYd,EAAQgD,WACzH,kBAAiBrE,QAAkB+D,EACnCO,SAAU9C,GAAaW,EAAW,OAAI4B,EACtC7B,QAASA,EACTE,UA9EkB,SAAuBW,GAErCA,EAAMwB,gBAAkBxB,EAAMyB,QAAU3D,EAAsBkC,IAGhEA,EAAM0B,iBAGJrC,GACFA,EAAUW,IAsEZV,QAlEgB,SAAqBU,GAEjCA,EAAMwB,gBAAkBxB,EAAMyB,SAC5BrC,GAAYtB,EAAsBkC,GACpCZ,EAASY,GACc,WAAdA,EAAMhC,KAAoB4B,EAAQ+B,SAC3C/B,EAAQ+B,QAAQC,QAIhBtC,GACFA,EAAQU,IAwDV7B,IAAK0B,GACJQ,EAAWX,GAAQrB,GAAUa,EAAmBtB,gBAAoB,OAAQ,CAC7EW,UAAWgC,YAAKjC,EAAQ7B,MAAOyD,GAAS5B,EAAQuD,aAC/CpF,GAAQsC,MAuGE+C,iBA3fK,SAAgBC,GAClC,IAAIC,EAAyC,UAAvBD,EAAME,QAAQC,KAAmBH,EAAME,QAAQE,KAAK,KAAOJ,EAAME,QAAQE,KAAK,KAChGC,EAAkBC,YAAMN,EAAME,QAAQK,KAAKC,QAAS,KACxD,MAAO,CAELtB,KAAM,CACJuB,WAAYT,EAAMU,WAAWD,WAC7BE,SAAUX,EAAMU,WAAWE,QAAQ,IACnCC,QAAS,cACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,GACRpE,MAAOoD,EAAME,QAAQe,gBAAgBhB,GACrCA,gBAAiBA,EACjBiB,aAAc,GACdC,WAAY,SACZC,WAAYpB,EAAMqB,YAAYC,OAAO,CAAC,mBAAoB,eAE1DC,OAAQ,UAERC,QAAS,EACTC,eAAgB,OAChBC,OAAQ,OAERC,QAAS,EAETC,cAAe,SACfC,UAAW,aACX,aAAc,CACZC,QAAS,GACTC,cAAe,QAEjB,YAAa,CACXC,WAAY,EACZC,aAAc,EACdC,MAAO,GACPlB,OAAQ,GACRpE,MAA8B,UAAvBoD,EAAME,QAAQC,KAAmBH,EAAME,QAAQE,KAAK,KAAOJ,EAAME,QAAQE,KAAK,KACrFO,SAAUX,EAAMU,WAAWE,QAAQ,KAErC,wBAAyB,CACvBhE,MAAOoD,EAAME,QAAQM,QAAQ2B,aAC7BlC,gBAAiBD,EAAME,QAAQM,QAAQ4B,MAEzC,0BAA2B,CACzBxF,MAAOoD,EAAME,QAAQmC,UAAUF,aAC/BlC,gBAAiBD,EAAME,QAAQmC,UAAUD,MAE3C,iBAAkB,CAChBJ,WAAY,EACZC,aAAc,EACdC,MAAO,GACPlB,OAAQ,GACRL,SAAUX,EAAMU,WAAWE,QAAQ,MAKvCtB,UAAW,CACT0B,OAAQ,IAIVsB,aAAc,CACZrC,gBAAiBD,EAAME,QAAQM,QAAQ+B,KACvC3F,MAAOoD,EAAME,QAAQM,QAAQ2B,cAI/BK,eAAgB,CACdvC,gBAAiBD,EAAME,QAAQmC,UAAUE,KACzC3F,MAAOoD,EAAME,QAAQmC,UAAUF,cAIjCjH,SAAU,GAGVwB,UAAW,CACT+F,WAAY,OACZC,wBAAyB,cACzBnB,OAAQ,UACR,mBAAoB,CAClBtB,gBAAiB0C,YAAU1C,EAAiB,MAE9C,WAAY,CACV2C,UAAW5C,EAAM6C,QAAQ,KAK7BC,sBAAuB,CACrB,mBAAoB,CAClB7C,gBAAiB0C,YAAU3C,EAAME,QAAQM,QAAQ+B,KAAM,OAK3DQ,wBAAyB,CACvB,mBAAoB,CAClB9C,gBAAiB0C,YAAU3C,EAAME,QAAQmC,UAAUE,KAAM,OAK7DhD,UAAW,CACT,UAAW,CACTU,gBAAiB0C,YAAU1C,EAAiB,OAKhD+C,sBAAuB,CACrB,UAAW,CACT/C,gBAAiB0C,YAAU3C,EAAME,QAAQM,QAAQ+B,KAAM,MAK3DU,wBAAyB,CACvB,UAAW,CACThD,gBAAiB0C,YAAU3C,EAAME,QAAQmC,UAAUE,KAAM,MAK7DpD,SAAU,CACRc,gBAAiB,cACjByB,OAAQ,aAAajD,OAA8B,UAAvBuB,EAAME,QAAQC,KAAmB,sBAAwB,6BACrF,0DAA2D,CACzDF,gBAAiBK,YAAMN,EAAME,QAAQK,KAAKC,QAASR,EAAME,QAAQgD,OAAOC,eAE1E,YAAa,CACXnB,WAAY,GAEd,iBAAkB,CAChBA,WAAY,GAEd,UAAW,CACTA,WAAY,GAEd,eAAgB,CACdA,WAAY,GAEd,gBAAiB,CACfC,YAAa,GAEf,qBAAsB,CACpBA,YAAa,IAKjB7C,gBAAiB,CACfxC,MAAOoD,EAAME,QAAQM,QAAQ+B,KAC7Bb,OAAQ,aAAajD,OAAOuB,EAAME,QAAQM,QAAQ+B,MAClD,0DAA2D,CACzDtC,gBAAiBK,YAAMN,EAAME,QAAQM,QAAQ+B,KAAMvC,EAAME,QAAQgD,OAAOC,gBAK5E9D,kBAAmB,CACjBzC,MAAOoD,EAAME,QAAQmC,UAAUE,KAC/Bb,OAAQ,aAAajD,OAAOuB,EAAME,QAAQmC,UAAUE,MACpD,0DAA2D,CACzDtC,gBAAiBK,YAAMN,EAAME,QAAQmC,UAAUE,KAAMvC,EAAME,QAAQgD,OAAOC,gBAM9E7G,OAAQ,GAGRuC,YAAa,GAGbuE,mBAAoB,GAGpBC,qBAAsB,GAGtBlG,KAAM,CACJP,MAA8B,UAAvBoD,EAAME,QAAQC,KAAmBH,EAAME,QAAQE,KAAK,KAAOJ,EAAME,QAAQE,KAAK,KACrF4B,WAAY,EACZC,aAAc,GAIhBnD,UAAW,CACToD,MAAO,GACPlB,OAAQ,GACRgB,WAAY,EACZC,aAAc,GAIhBqB,iBAAkB,CAChB1G,MAAO,WAIT2G,mBAAoB,CAClB3G,MAAO,WAITlC,MAAO,CACL8I,SAAU,SACVC,aAAc,WACdC,YAAa,GACbC,aAAc,GACdxC,WAAY,UAIdrB,WAAY,CACV4D,YAAa,EACbC,aAAc,GAIhB3G,WAAY,CACV0F,wBAAyB,cACzB9F,MAAOyD,EACPW,OAAQ,GACRkB,MAAO,GACPX,OAAQ,UACRqC,OAAQ,eACR,UAAW,CACThH,MAAO0D,YAAMD,EAAiB,MAKlC1B,gBAAiB,CACfqC,OAAQ,GACRkB,MAAO,GACPD,YAAa,EACbD,YAAa,GAIf6B,uBAAwB,CACtBjH,MAAO0D,YAAMN,EAAME,QAAQM,QAAQ2B,aAAc,IACjD,oBAAqB,CACnBvF,MAAOoD,EAAME,QAAQM,QAAQ2B,eAKjC2B,yBAA0B,CACxBlH,MAAO0D,YAAMN,EAAME,QAAQmC,UAAUF,aAAc,IACnD,oBAAqB,CACnBvF,MAAOoD,EAAME,QAAQmC,UAAUF,eAKnC4B,+BAAgC,CAC9BnH,MAAO0D,YAAMN,EAAME,QAAQM,QAAQ+B,KAAM,IACzC,oBAAqB,CACnB3F,MAAOoD,EAAME,QAAQM,QAAQ+B,OAKjCyB,iCAAkC,CAChCpH,MAAO0D,YAAMN,EAAME,QAAQmC,UAAUE,KAAM,IAC3C,oBAAqB,CACnB3F,MAAOoD,EAAME,QAAQmC,UAAUE,UA2OL,CAChC1H,KAAM,WADOkF,CAEZ7D,I,wICvdC+H,EAA6BpI,cAAiB,SAAuBM,EAAOC,GAC9E,IAAIG,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBG,EAAeR,EAAMS,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CuH,EAAmB/H,EAAMW,UACzBsB,OAAiC,IAArB8F,EAA8B,KAAOA,EACjDC,EAAwBhI,EAAMiI,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAuBlI,EAAMmI,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAepI,EAAMqI,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1C5G,EAAQC,YAAyBzB,EAAO,CAAC,UAAW,YAAa,QAAS,YAAa,iBAAkB,gBAAiB,UAE9H,OAAoBN,gBAAoBuC,EAAWW,YAAS,CAC1DvC,UAAWgC,YAAKjC,EAAQ2C,KAAM1C,EAAqB,YAAVI,GAAuBL,EAAQ,QAAQkC,OAAOC,YAAW9B,KAAU4H,GAASjI,EAAQiI,OAAQF,GAAiB/H,EAAQkI,QAASL,GAAkB7H,EAAQmI,SACjMtI,IAAKA,GACJuB,OA+CUoC,eA5GK,SAAgBC,GAClC,MAAO,CAELd,KAAM,CACJ2C,UAAW,aACX8C,WAAY,OACZC,UAAW,OACXhI,MAAOoD,EAAME,QAAQK,KAAK8B,UAC1B5B,WAAYT,EAAMU,WAAWD,WAC7BoE,WAAY7E,EAAMU,WAAWoE,iBAC7BnE,SAAUX,EAAMU,WAAWE,QAAQ,KAIrC0B,aAAc,CACZ1F,MAAOoD,EAAME,QAAQM,QAAQ+B,MAI/BwC,aAAc,CACZnI,MAAO,WAIT8H,QAAS,CACPhB,YAAa,GACbC,aAAc,IAIhBa,MAAO,CACLd,YAAa,IAIfe,OAAQ,CACNO,SAAU,SACVC,IAAK,EACLC,OAAQ,EACRjF,gBAAiB,cAqEW,CAChCpF,KAAM,oBADOkF,CAEZkE,G,2CC/GYrI,cAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,mBACD,iB,gDCCJ,SAASqJ,EAAgBC,GACvB,MAAmC,qBAArBA,EAAOC,UAA4BD,EAAOC,UAAU,OAAOC,QAAQ,mBAAoB,IAAMF,EA6C7G,SAASG,EAAUC,EAAOC,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,GAAK,EACrC,GAAID,EAAKD,EAAME,IACb,OAAOA,EAIX,OAAQ,EAGV,IAAIE,EApDG,WACL,IAAIC,EAASC,UAAUH,OAAS,QAAsB1G,IAAjB6G,UAAU,GAAmBA,UAAU,GAAK,GAC7EC,EAAwBF,EAAOG,cAC/BA,OAA0C,IAA1BD,GAA0CA,EAC1DE,EAAqBJ,EAAOK,WAC5BA,OAAoC,IAAvBD,GAAuCA,EACpDE,EAAQN,EAAOM,MACfC,EAAoBP,EAAOQ,UAC3BA,OAAkC,IAAtBD,EAA+B,MAAQA,EACnDE,EAAYT,EAAOS,UACnBC,EAAeV,EAAOW,KACtBA,OAAwB,IAAjBD,GAAkCA,EAC7C,OAAO,SAAUE,EAASC,GACxB,IAAIC,EAAaD,EAAKC,WAClBC,EAAiBF,EAAKE,eACtBC,EAAQL,EAAOG,EAAWH,OAASG,EAEnCT,IACFW,EAAQA,EAAMC,eAGZd,IACFa,EAAQ1B,EAAgB0B,IAG1B,IAAIE,EAAkBN,EAAQO,QAAO,SAAUC,GAC7C,IAAIC,GAAaZ,GAAaM,GAAgBK,GAU9C,OARIf,IACFgB,EAAYA,EAAUJ,eAGpBd,IACFkB,EAAY/B,EAAgB+B,IAGT,UAAdb,EAAqD,IAA7Ba,EAAUC,QAAQN,GAAeK,EAAUC,QAAQN,IAAU,KAE9F,MAAwB,kBAAVV,EAAqBY,EAAgBK,MAAM,EAAGjB,GAASY,GAc9CM,GAGZ,SAASC,EAAgBnL,GACtC,IAAIoL,EAAsBpL,EAAMqL,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAuBtL,EAAMuL,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAoBxL,EAAMyL,WAC1BA,OAAmC,IAAtBD,GAAuCA,EACpDE,EAAsB1L,EAAM2L,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAqB5L,EAAM6L,YAC3BA,OAAqC,IAAvBD,GAAiC5L,EAAM8L,SAAWF,EAChEG,EAAuB/L,EAAMgM,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAuBjM,EAAMkM,cAC7BA,OAAyC,IAAzBD,EAAkC,kBAAoBA,EACtEE,EAAenM,EAAMoM,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAsBrM,EAAMsM,aAC5BA,OAAuC,IAAxBD,EAAiCrM,EAAMuM,SAAW,GAAK,KAAOF,EAC7EG,EAAwBxM,EAAMyM,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAC9DE,EAAwB1M,EAAM2M,qBAC9BA,OAAiD,IAA1BD,GAA2CA,EAClEE,EAAwB5M,EAAM6M,uBAC9BA,OAAmD,IAA1BD,GAA2CA,EACpEE,EAAwB9M,EAAM+M,gBAC9BA,OAA4C,IAA1BD,GAA2CA,EAC7DE,EAAuBhN,EAAMiN,cAC7BA,OAAyC,IAAzBD,EAAkCvD,EAAuBuD,EACzEE,EAAwBlN,EAAMmN,sBAC9BA,OAAkD,IAA1BD,GAA2CA,EACnEE,EAAkBpN,EAAM8L,SACxBA,OAA+B,IAApBsB,GAAqCA,EAChDC,EAAoBrN,EAAMqN,kBAC1BC,EAAwBtN,EAAMyK,eAC9B8C,OAA+C,IAA1BD,EAAmC,SAAUxC,GACpE,OAAOA,GACLwC,EACAE,EAAwBxN,EAAMyN,kBAC9BA,OAA8C,IAA1BD,EAAmC,SAAU1C,EAAQrM,GAC3E,OAAOqM,IAAWrM,GAChB+O,EACAE,EAAU1N,EAAM0N,QAChBC,EAAwB3N,EAAM4N,kBAC9BA,OAA8C,IAA1BD,GAAoC3N,EAAM8L,SAAW6B,EACzEE,EAAS7N,EAAM8N,GACfC,EAAwB/N,EAAMgO,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAiBjO,EAAMwK,WACvB0D,GAAkBlO,EAAMuM,SACxBA,QAA+B,IAApB2B,IAAqCA,GAChDvP,GAAWqB,EAAMrB,SACjBwP,GAAUnO,EAAMmO,QAChBC,GAAoBpO,EAAMoO,kBAC1BC,GAAgBrO,EAAMqO,cACtBC,GAAStO,EAAMsO,OACfC,GAAWvO,EAAMwO,KACjBC,GAAqBzO,EAAM0O,YAC3BA,QAAqC,IAAvBD,IAAwCA,GACtDnE,GAAUtK,EAAMsK,QAChBqE,GAAuB3O,EAAM4O,cAC7BA,QAAyC,IAAzBD,IAAmC3O,EAAM8L,SAAW6C,GACpEE,GAAY7O,EAAMvB,MAClBqP,GAAKgB,YAAMjB,GACXpD,GAAiB8C,EAerB,IAAIwB,GAAcrP,UAAa,GAC3BsP,GAAatP,UAAa,GAC1BuP,GAAWvP,SAAa,MACxBwP,GAAaxP,SAAa,MAE1ByP,GAAkBzP,WAAe,MACjC0P,GAAWD,GAAgB,GAC3BE,GAAcF,GAAgB,GAE9BG,GAAmB5P,YAAgB,GACnC6P,GAAaD,GAAiB,GAC9BE,GAAgBF,GAAiB,GAEjCG,GAAqBlE,EAAgB,GAAK,EAC1CmE,GAAsBhQ,SAAa+P,IAEnCE,GAAiBC,YAAc,CACjCC,WAAYhB,GACZiB,QAASxD,EACT5N,KAAMwN,IAEJ6D,GAAkBC,YAAeL,GAAgB,GACjDlR,GAAQsR,GAAgB,GACxBE,GAAWF,GAAgB,GAE3BG,GAAkBN,YAAc,CAClCC,WAAY5B,EACZ6B,QAAS,GACTpR,KAAMwN,EACNiE,MAAO,eAELC,GAAkBJ,YAAeE,GAAiB,GAClD1F,GAAa4F,GAAgB,GAC7BC,GAAgBD,GAAgB,GAEhCE,GAAmB5Q,YAAe,GAClC6Q,GAAUD,GAAiB,GAC3BE,GAAaF,GAAiB,GAE9BG,GAAkBC,aAAiB,SAAU5O,EAAO6O,GACtD,IAAIC,EAEJ,GAAIrE,GACFqE,EAAgB,QACX,GAAgB,MAAZD,EACTC,EAAgB,OACX,CACL,IAAIC,EAAcpG,GAAekG,GACjCC,EAAuC,kBAAhBC,EAA2BA,EAAc,GAG9DrG,KAAeoG,IAInBP,GAAcO,GAEVvC,IACFA,GAAcvM,EAAO8O,EAAe,aAGxClR,aAAgB,WACd+Q,GAAgB,KAAMhS,MACrB,CAACA,GAAOgS,KAEX,IAAIK,GAAkBlB,YAAc,CAClCC,WAAYtB,GACZuB,SAAS,EACTpR,KAAMwN,EACNiE,MAAO,SAELY,GAAkBf,YAAec,GAAiB,GAClDtC,GAAOuC,GAAgB,GACvBC,GAAeD,GAAgB,GAE/BE,IAA6B1E,IAAqB,MAAT9N,IAAiB+L,KAAeC,GAAehM,IACxFyS,GAAY1C,GACZ5D,GAAkBsG,GAAYjE,EAAc3C,GAAQO,QAAO,SAAUC,GACvE,OAAIqC,KAA0BZ,GAAW9N,GAAQ,CAACA,KAAQ0S,MAAK,SAAUC,GACvE,OAAkB,OAAXA,GAAmB3D,EAAkB3C,EAAQsG,SAQxD,CACE5G,WAAYyG,GAA4B,GAAKzG,GAC7CC,eAAgBA,KACb,GAgBD4G,GAAWX,aAAiB,SAAUY,IACpB,IAAhBA,EACFrC,GAASxL,QAAQ8N,QAEjBnC,GAASoC,cAAc,oBAAqBlP,OAAOgP,EAAY,OAAQC,WAI3E7R,aAAgB,WACV6M,IAAYgD,GAAa9Q,GAAM+K,OAAS,IAC1CgG,IAAe,GACf6B,IAAU,MAEX,CAAC5S,GAAO8N,GAAUgD,GAAY8B,KA4BjC,IAAII,GAAsBf,aAAiB,SAAUgB,GACnD,IAAI5P,EAAQ4P,EAAM5P,MACd6P,EAAQD,EAAMC,MACdC,EAAeF,EAAMG,OACrBA,OAA0B,IAAjBD,EAA0B,OAASA,EAahD,GAZAlC,GAAoBjM,QAAUkO,GAEf,IAAXA,EACF1C,GAASxL,QAAQqO,gBAAgB,yBAEjC7C,GAASxL,QAAQsO,aAAa,wBAAyB,GAAGzP,OAAOwL,GAAI,YAAYxL,OAAOqP,IAGtFvD,IACFA,GAAkBtM,GAAkB,IAAX6P,EAAe,KAAO/G,GAAgB+G,GAAQE,GAGpE3C,GAAWzL,QAAhB,CAIA,IAAIuO,EAAO9C,GAAWzL,QAAQ+N,cAAc,gBAExCQ,GACFA,EAAKF,gBAAgB,cAGvB,IAAIG,EAAc/C,GAAWzL,QAAQyO,cAAcV,cAAc,oBAEjE,GAAKS,EAIL,IAAe,IAAXN,EAAJ,CAKA,IAAI7G,EAASoE,GAAWzL,QAAQ+N,cAAc,uBAAwBlP,OAAOqP,EAAO,OAEpF,GAAK7G,IAILA,EAAOiH,aAAa,aAAc,QAM9BE,EAAYE,aAAeF,EAAYG,cAA2B,UAAXP,GAAoB,CAC7E,IAAIQ,EAAUvH,EACVwH,EAAeL,EAAYG,aAAeH,EAAYM,UACtDC,EAAgBH,EAAQI,UAAYJ,EAAQK,aAE5CF,EAAgBF,EAClBL,EAAYM,UAAYC,EAAgBP,EAAYG,aAC3CC,EAAQI,UAAYJ,EAAQK,cAAgBhF,EAAU,IAAM,GAAKuE,EAAYM,YACtFN,EAAYM,UAAYF,EAAQI,UAAYJ,EAAQK,cAAgBhF,EAAU,IAAM,UAxBtFuE,EAAYM,UAAY,MA4BxBI,GAAyBjC,aAAiB,SAAUkC,GACtD,IAAI9Q,EAAQ8Q,EAAM9Q,MACd+Q,EAAOD,EAAMC,KACbC,EAAkBF,EAAMG,UACxBA,OAAgC,IAApBD,EAA6B,OAASA,EAClDE,EAAeJ,EAAMf,OACrBA,OAA0B,IAAjBmB,EAA0B,OAASA,EAEhD,GAAK9B,GAAL,CAIA,IA4CI+B,EAhJN,SAA0BtB,EAAOoB,GAC/B,IAAK7D,GAAWzL,UAAsB,IAAXkO,EACzB,OAAQ,EAKV,IAFA,IAAIuB,EAAYvB,IAEH,CAEX,GAAkB,SAAdoB,GAAwBG,IAActI,GAAgBpB,QAAwB,aAAduJ,IAA2C,IAAfG,EAC9F,OAAQ,EAGV,IAAIpI,EAASoE,GAAWzL,QAAQ+N,cAAc,uBAAwBlP,OAAO4Q,EAAW,OAEpFC,GAAoBtG,GAAiC/B,IAAWA,EAAO/L,UAAqD,SAAzC+L,EAAOsI,aAAa,kBAE3G,KAAItI,IAAWA,EAAOuI,aAAa,aAAeF,GAIhD,OAAOD,EAFPA,GAA2B,SAAdH,EAAuB,GAAK,GA6H7BO,CA5CG,WACjB,IAAIC,EAAW3I,GAAgBpB,OAAS,EAExC,GAAa,UAATqJ,EACF,OAAOpD,GAGT,GAAa,UAAToD,EACF,OAAO,EAGT,GAAa,QAATA,EACF,OAAOU,EAGT,IAAIC,EAAW9D,GAAoBjM,QAAUoP,EAE7C,OAAIW,EAAW,GACK,IAAdA,GAAmBxF,GACb,EAGNjB,IAAoD,IAAjC2C,GAAoBjM,SAAkBgQ,KAAKC,IAAIb,GAAQ,EACrE,EAGFU,EAGLC,EAAWD,EACTC,IAAaD,EAAW,GAAKvF,GACvB,EAGNjB,GAAmB0G,KAAKC,IAAIb,GAAQ,EAC/BU,EAGF,EAGFC,EAGwBG,GAAgBZ,GAOjD,GANAtB,GAAoB,CAClBE,MAAOsB,EACPpB,OAAQA,EACR/P,MAAOA,IAGLuJ,GAAyB,UAATwH,EAClB,IAAmB,IAAfI,EACFhE,GAASxL,QAAQhF,MAAQ+L,OACpB,CACL,IAAIM,EAASL,GAAeG,GAAgBqI,IAC5ChE,GAASxL,QAAQhF,MAAQqM,EAKX,IAFFA,EAAOH,cAAcK,QAAQR,GAAWG,gBAEjCH,GAAWhB,OAAS,GACrCyF,GAASxL,QAAQmQ,kBAAkBpJ,GAAWhB,OAAQsB,EAAOtB,aAKjEqK,GAAuBnU,eAAkB,WAC3C,GAAKwR,GAAL,CAIA,IAAI4C,EAAYvH,GAAW9N,GAAM,GAAKA,GAEtC,GAA+B,IAA3BmM,GAAgBpB,QAA6B,MAAbsK,GAOpC,GAAK5E,GAAWzL,QAKhB,GAAK0J,GAAsC,MAAb2G,EA2B1BpE,GAAoBjM,SAAWmH,GAAgBpB,OAAS,EAC1DiI,GAAoB,CAClBE,MAAO/G,GAAgBpB,OAAS,IAMpCiI,GAAoB,CAClBE,MAAOjC,GAAoBjM,cApC7B,CACE,IAAIsQ,EAAgBnJ,GAAgB8E,GAAoBjM,SAExD,GAAI8I,IAAYwH,IAER,IAFyB3K,EAAU3K,IAAO,SAAUuV,GAC1D,OAAOvG,EAAkBsG,EAAeC,MAExC,OAGF,IAAIC,EAAY7K,EAAUwB,IAAiB,SAAUsJ,GACnD,OAAOzG,EAAkByG,EAAYJ,OAGpB,IAAfG,EACFtB,GAAuB,CACrBE,KAAM,UAGRpB,GAAoB,CAClBE,MAAOsC,UA9BXtB,GAAuB,CACrBE,KAAM,aAiDT,CAEwB,IAA3BjI,GAAgBpB,QAEhB+C,IAAmB9N,GAAO0O,EAAuBwF,GAAwBlB,GAAqBP,GAAW1G,GAAY+B,KACjH4H,GAAmBzD,aAAiB,SAAU0D,GAChDC,YAAOnF,GAAYkF,GAEdA,GAILP,QAEFnU,aAAgB,WACdmU,OACC,CAACA,KAEJ,IAAIS,GAAa,SAAoBxS,GAC/B0M,KAIJwC,IAAa,GAET1C,IACFA,GAAOxM,KAIPyS,GAAc,SAAqBzS,EAAO+P,GACvCrD,KAILwC,IAAa,GAET7C,IACFA,GAAQrM,EAAO+P,KAIf2C,GAAc,SAAqB1S,EAAO6O,EAAUkB,EAAQ4C,GAC1DhW,KAAUkS,IAIVhS,IACFA,GAASmD,EAAO6O,EAAUkB,EAAQ4C,GAGpCxE,GAASU,KAGP+D,GAAUhV,UAAa,GAEvBiV,GAAiB,SAAwB7S,EAAOgJ,GAClD,IAAI8J,EAAajL,UAAUH,OAAS,QAAsB1G,IAAjB6G,UAAU,GAAmBA,UAAU,GAAK,gBACjFkL,EAASlL,UAAUH,OAAS,QAAsB1G,IAAjB6G,UAAU,GAAmBA,UAAU,GAAK,UAC7EkI,EAAS+C,EACTjE,EAAW7F,EAEf,GAAIyB,GAAU,CAG+B,IAUvC0H,EAAY7K,EAZhBuH,EAAWmE,MAAMC,QAAQtW,IAASA,GAAMwM,QAAU,IAYd,SAAU6I,GAC5C,OAAOrG,EAAkB3C,EAAQgJ,OAGhB,IAAfG,EACFtD,EAASqE,KAAKlK,GACM,aAAX+J,IACTlE,EAASsE,OAAOhB,EAAW,GAC3BpC,EAAS,iBAIbpB,GAAgB3O,EAAO6O,GACvB6D,GAAY1S,EAAO6O,EAAUkB,EAAQ,CACnC/G,OAAQA,IAGL6B,GACH4H,GAAYzS,EAAO+P,KAGA,IAAjBlG,GAA0C,UAAjBA,GAA4B+I,GAAQjR,SAA4B,UAAjBkI,IAA6B+I,GAAQjR,UAC/GwL,GAASxL,QAAQC,QA2BrB,IAAIwR,GAAiB,SAAwBpT,EAAOiR,GAClD,GAAKxG,GAAL,CAIAgI,GAAYzS,EAAO,eACnB,IAAIqT,EAAU5F,IAEM,IAAhBA,GACiB,KAAf/E,IAAmC,aAAduI,IACvBoC,EAAU1W,GAAM+K,OAAS,KAG3B2L,GAAyB,SAAdpC,EAAuB,GAAK,GAEzB,IACZoC,EAAU,GAGRA,IAAY1W,GAAM+K,SACpB2L,GAAW,IAIfA,EA/CF,SAAuBxD,EAAOoB,GAC5B,IAAe,IAAXpB,EACF,OAAQ,EAKV,IAFA,IAAIuB,EAAYvB,IAEH,CAEX,GAAkB,SAAdoB,GAAwBG,IAAczU,GAAM+K,QAAwB,aAAduJ,IAA2C,IAAfG,EACpF,OAAQ,EAGV,IAAIpI,EAASsE,GAASoC,cAAc,oBAAqBlP,OAAO4Q,EAAW,OAE3E,IAAIpI,GAAYA,EAAOuI,aAAa,cAAevI,EAAO/L,UAAqD,SAAzC+L,EAAOsI,aAAa,iBAGxF,OAAOF,EAFPA,GAA2B,SAAdH,EAAuB,GAAK,GA+BnCqC,CAAcD,EAASpC,GACjCvD,GAAc2F,GACd9D,GAAS8D,KAGPE,GAAc,SAAqBvT,GACrCiN,GAAYtL,SAAU,EACtB4M,GAAc,IAEVhC,IACFA,GAAcvM,EAAO,GAAI,SAG3B0S,GAAY1S,EAAOyK,GAAW,GAAK,KAAM,UAGvC+I,GAAgB,SAAuB9T,GACzC,OAAO,SAAUM,GAMf,QALoB,IAAhByN,KAAyE,IAApD,CAAC,YAAa,cAAcvE,QAAQlJ,EAAMhC,OACjE0P,IAAe,GACf6B,IAAU,IAGJvP,EAAMhC,KACZ,IAAK,OACCoR,IAAatD,IAEf9L,EAAM0B,iBACNmP,GAAuB,CACrBE,KAAM,QACNE,UAAW,OACXlB,OAAQ,WACR/P,MAAOA,KAIX,MAEF,IAAK,MACCoP,IAAatD,IAEf9L,EAAM0B,iBACNmP,GAAuB,CACrBE,KAAM,MACNE,UAAW,WACXlB,OAAQ,WACR/P,MAAOA,KAIX,MAEF,IAAK,SAEHA,EAAM0B,iBACNmP,GAAuB,CACrBE,MAtnBG,EAunBHE,UAAW,WACXlB,OAAQ,WACR/P,MAAOA,IAETwS,GAAWxS,GACX,MAEF,IAAK,WAEHA,EAAM0B,iBACNmP,GAAuB,CACrBE,KAloBG,EAmoBHE,UAAW,OACXlB,OAAQ,WACR/P,MAAOA,IAETwS,GAAWxS,GACX,MAEF,IAAK,YAEHA,EAAM0B,iBACNmP,GAAuB,CACrBE,KAAM,EACNE,UAAW,OACXlB,OAAQ,WACR/P,MAAOA,IAETwS,GAAWxS,GACX,MAEF,IAAK,UAEHA,EAAM0B,iBACNmP,GAAuB,CACrBE,MAAO,EACPE,UAAW,WACXlB,OAAQ,WACR/P,MAAOA,IAETwS,GAAWxS,GACX,MAEF,IAAK,YACHoT,GAAepT,EAAO,YACtB,MAEF,IAAK,aACHoT,GAAepT,EAAO,QACtB,MAEF,IAAK,QAEH,GAAoB,MAAhBA,EAAMyT,MACR,MAGF,IAAqC,IAAjC7F,GAAoBjM,SAAkByN,GAAW,CACnD,IAAIpG,EAASF,GAAgB8E,GAAoBjM,SAC7C1E,IAAWsO,GAAoBA,EAAkBvC,GAIrD,GAFAhJ,EAAM0B,iBAEFzE,EACF,OAGF4V,GAAe7S,EAAOgJ,EAAQ,iBAE1BO,GACF4D,GAASxL,QAAQmQ,kBAAkB3E,GAASxL,QAAQhF,MAAM+K,OAAQyF,GAASxL,QAAQhF,MAAM+K,aAElFsC,GAA2B,KAAftB,KAAmD,IAA9ByG,KACtC1E,IAEFzK,EAAM0B,iBAGRmR,GAAe7S,EAAO0I,GAAY,gBAAiB,aAGrD,MAEF,IAAK,SACC0G,IAEFpP,EAAM0B,iBAEN1B,EAAMC,kBACNwS,GAAYzS,EAAO,WACVkK,IAAiC,KAAfxB,IAAqB+B,IAAY9N,GAAM+K,OAAS,KAE3E1H,EAAM0B,iBAEN1B,EAAMC,kBACNsT,GAAYvT,IAGd,MAEF,IAAK,YACH,GAAIyK,IAA2B,KAAf/B,IAAqB/L,GAAM+K,OAAS,EAAG,CACrD,IAAImI,GAAwB,IAAhBpC,GAAoB9Q,GAAM+K,OAAS,EAAI+F,GAC/CoB,EAAWlS,GAAMwM,QACrB0F,EAASsE,OAAOtD,EAAO,GACvB6C,GAAY1S,EAAO6O,EAAU,gBAAiB,CAC5C7F,OAAQrM,GAAMkT,MASlBnQ,EAAML,WACRK,EAAML,UAAUW,KAKlB0T,GAAc,SAAqB1T,GACrC0O,IAAW,GAEP9B,KAAgBK,GAAYtL,SAC9B6Q,GAAWxS,IAIX2T,GAAa,SAAoB3T,GAER,OAAvBoN,GAAWzL,SAAoBiS,SAASC,gBAAkBzG,GAAWzL,QAAQyO,eAKjF1B,IAAW,GACXxB,GAAWvL,SAAU,EACrBsL,GAAYtL,SAAU,EAElB2I,GAAwB,KAAf5B,KAITiB,IAA+C,IAAjCiE,GAAoBjM,SAAkByN,GACtDyD,GAAe7S,EAAO8I,GAAgB8E,GAAoBjM,SAAU,QAC3DgI,GAAcK,GAA2B,KAAftB,GACnCmK,GAAe7S,EAAO0I,GAAY,OAAQ,YACjCqB,GACT4E,GAAgB3O,EAAOrD,IAGzB8V,GAAYzS,EAAO,UApBjBmN,GAASxL,QAAQ8N,SAuBjBqE,GAAoB,SAA2B9T,GACjD,IAAI6O,EAAW7O,EAAMyB,OAAO9E,MAExB+L,KAAemG,IACjBN,GAAcM,GAEVtC,IACFA,GAAcvM,EAAO6O,EAAU,UAIlB,KAAbA,EACGlE,GAAqBF,IACxBiI,GAAY1S,EAAO,KAAM,SAG3BwS,GAAWxS,IAIX+T,GAAwB,SAA+B/T,GACzD2P,GAAoB,CAClB3P,MAAOA,EACP6P,MAAOmE,OAAOhU,EAAMwB,cAAc8P,aAAa,sBAC/CvB,OAAQ,WAIRkE,GAAyB,WAC3BrB,GAAQjR,SAAU,GAGhBuS,GAAoB,SAA2BlU,GACjD,IAAI6P,EAAQmE,OAAOhU,EAAMwB,cAAc8P,aAAa,sBACpDuB,GAAe7S,EAAO8I,GAAgB+G,GAAQ,iBAC9C+C,GAAQjR,SAAU,GAGhBwS,GAAkB,SAAyBtE,GAC7C,OAAO,SAAU7P,GACf,IAAI6O,EAAWlS,GAAMwM,QACrB0F,EAASsE,OAAOtD,EAAO,GACvB6C,GAAY1S,EAAO6O,EAAU,gBAAiB,CAC5C7F,OAAQrM,GAAMkT,OAKhBuE,GAAuB,SAA8BpU,GACnD0M,GACF+F,GAAYzS,EAAO,eAEnBwS,GAAWxS,IAKXqU,GAAkB,SAAyBrU,GACzCA,EAAMyB,OAAO6P,aAAa,QAAUtF,IACtChM,EAAM0B,kBAKN4S,GAAc,WAChBnH,GAASxL,QAAQ8N,QAEb3C,IAAiBI,GAAWvL,SAAWwL,GAASxL,QAAQ4S,aAAepH,GAASxL,QAAQ6S,iBAAmB,GAC7GrH,GAASxL,QAAQ8S,SAGnBvH,GAAWvL,SAAU,GAGnB+S,GAAuB,SAA8B1U,GACpC,KAAf0I,IAAsBgE,IACxB0H,GAAqBpU,IAIrB2U,GAAQ3K,GAAYtB,GAAWhB,OAAS,EAC5CiN,GAAQA,KAAUlK,GAAW9N,GAAM+K,OAAS,EAAc,OAAV/K,IAChD,IAAIiY,GAAiB9L,GAErB,GAAI8C,EAAS,CAEG,IAAIiJ,IAElBD,GAAiB9L,GAAgBgM,QAAO,SAAUC,EAAK/L,EAAQ6G,GAC7D,IAAImF,EAAQpJ,EAAQ5C,GAsBpB,OApBI+L,EAAIrN,OAAS,GAAKqN,EAAIA,EAAIrN,OAAS,GAAGsN,QAAUA,EAClDD,EAAIA,EAAIrN,OAAS,GAAGc,QAAQ0K,KAAKlK,GAWjC+L,EAAI7B,KAAK,CACPlV,IAAK6R,EACLA,MAAOA,EACPmF,MAAOA,EACPxM,QAAS,CAACQ,KAIP+L,IACN,IAGL,MAAO,CACLE,aAAc,WACZ,IAAIvV,EAAQmI,UAAUH,OAAS,QAAsB1G,IAAjB6G,UAAU,GAAmBA,UAAU,GAAK,GAChF,OAAO/G,YAAS,CACd,YAAasO,GAAY,GAAG5O,OAAOwL,GAAI,UAAY,KACnDjL,KAAM,WACN,gBAAiBqO,IAChB1P,EAAO,CACRL,UAAWmU,GAAc9T,GACzBwV,YAAab,GACblV,QAASmV,MAGba,mBAAoB,WAClB,MAAO,CACLnJ,GAAI,GAAGxL,OAAOwL,GAAI,UAClBoJ,QAASpJ,KAGbqJ,cAAe,WACb,MAAO,CACLrJ,GAAIA,GACJrP,MAAO+L,GACP5L,OAAQ6W,GACR2B,QAAS5B,GACT7W,SAAUiX,GACVoB,YAAaR,GAGb,wBAAyBtF,GAAY,GAAK,KAC1C,oBAAqB7F,EAAe,OAAS,OAC7C,gBAAiB6F,GAAY,GAAG5O,OAAOwL,GAAI,UAAY,KAGvDzC,aAAc,MACdpL,IAAKgP,GACLoI,eAAgB,OAChBC,WAAY,UAGhBC,cAAe,WACb,MAAO,CACLlU,UAAW,EACXpC,QAASoU,KAGbmC,uBAAwB,WACtB,MAAO,CACLnU,UAAW,EACXpC,QAASiV,KAGbuB,YAAa,SAAqBC,GAChC,IAAI/F,EAAQ+F,EAAM/F,MAClB,MAAO,CACL7R,IAAK6R,EACL,iBAAkBA,EAClBtO,UAAW,EACXnC,SAAU+U,GAAgBtE,KAG9BgG,gBAAiB,WACf,MAAO,CACL9U,KAAM,UACNiL,GAAI,GAAGxL,OAAOwL,GAAI,UAClB,kBAAmB,GAAGxL,OAAOwL,GAAI,UACjC7N,IAAKkU,GACL6C,YAAa,SAAqBlV,GAEhCA,EAAM0B,oBAIZoU,eAAgB,SAAwBC,GACtC,IAAIlG,EAAQkG,EAAMlG,MACd7G,EAAS+M,EAAM/M,OACfgN,GAAYvL,GAAW9N,GAAQ,CAACA,KAAQ0S,MAAK,SAAUC,GACzD,OAAiB,MAAVA,GAAkB3D,EAAkB3C,EAAQsG,MAEjDrS,IAAWsO,GAAoBA,EAAkBvC,GACrD,MAAO,CACLhL,IAAK6R,EACLtO,UAAW,EACXR,KAAM,SACNiL,GAAI,GAAGxL,OAAOwL,GAAI,YAAYxL,OAAOqP,GACrCoG,YAAalC,GACb5U,QAAS+U,GACTgC,aAAcjC,GACd,oBAAqBpE,EACrB,gBAAiB5S,EACjB,gBAAiB+Y,IAGrBhK,GAAIA,GACJtD,WAAYA,GACZ/L,MAAOA,GACPgY,MAAOA,GACPvF,UAAWA,GACXX,QAASA,KAA2B,IAAhBhB,GACpBH,SAAUA,GACVC,YAAaA,GACbE,WAAYA,GACZmH,eAAgBA,IC1yBpB,SAASuB,EAAcjY,GAENA,EAAMoP,SACVpP,EAAMwO,KADjB,IAEIhN,EAAQC,YAAyBzB,EAAO,CAAC,WAAY,SAEzD,OAAoBN,gBAAoB,MAAO8B,GAGjD,IAAI+I,EAAoB7K,gBAAoBwY,IAAW,CACrD1T,SAAU,UAGRkN,EAAqBhS,gBAAoByY,EAAmB,MAE5DC,EAA4B1Y,cAAiB,SAAsBM,EAAOC,GAElDD,EAAMqL,aAELrL,EAAMuL,cAETvL,EAAMyL,WAEJzL,EAAM2L,aANhC,IAkII0M,EA1HAC,EAAYtY,EAAMsY,UAClBlY,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBuL,EAAqB5L,EAAM6L,YAI3B0M,QAHqC,IAAvB3M,GAAiC5L,EAAM8L,SAC9B9L,EAAMgM,cAEVhM,EAAMwY,WACzBA,OAAiC,IAArBD,EAA8B,QAAUA,EACpDE,EAAmBzY,EAAM0Y,UACzBA,OAAiC,IAArBD,EAA8BlO,EAAOkO,EACjDE,EAAmB3Y,EAAM4Y,UACzBA,OAAiC,IAArBD,EAA8B,QAAUA,EAGpDtM,GAFerM,EAAMoM,MAECpM,EAAMsM,cAE5BE,QADuC,IAAxBH,GAAiCrM,EAAMuM,SAC9BvM,EAAMyM,kBAC9BA,OAA6C,IAA1BD,GAA2CA,EAG9D1L,GAFwBd,EAAM2M,qBAEZ3M,EAAMjB,UACxBA,OAA+B,IAApB+B,GAAqCA,EAKhD+X,GAJwB7Y,EAAM6M,uBAEN7M,EAAM+M,gBAEP/M,EAAM8Y,eAC7BA,OAAyC,IAAzBD,GAA0CA,EAI1DE,GAHgB/Y,EAAMiN,cACEjN,EAAMmN,sBAENnN,EAAMgZ,gBAC9BA,OAA2C,IAA1BD,EAAmC,OAASA,EAC7D3L,EAAkBpN,EAAM8L,SACxBA,OAA+B,IAApBsB,GAAqCA,EAChD6L,EAAmBjZ,EAAMhB,UACzBA,OAAiC,IAArBia,GAAsCA,EAClDC,EAAwBlZ,EAAMmZ,iBAC9BA,OAA6C,IAA1BD,EAAmC,SAAUE,GAClE,MAAO,IAAI9W,OAAO8W,IAChBF,EAEA5L,GADoBtN,EAAMqN,kBACFrN,EAAMyK,gBAC9BA,OAA2C,IAA1B6C,EAAmC,SAAU+L,GAChE,OAAOA,GACL/L,EAEAI,GADoB1N,EAAMyN,kBAChBzN,EAAM0N,SAChBC,EAAwB3N,EAAM4N,kBAM9B0L,QAL8C,IAA1B3L,GAAoC3N,EAAM8L,SACrD9L,EAAM8N,GACS9N,EAAMgO,mBAEbhO,EAAMwK,WACJxK,EAAMuZ,WACzBA,OAAiC,IAArBD,GAA+B,EAAIA,EAC/CE,EAAwBxZ,EAAMyZ,iBAC9BA,OAA6C,IAA1BD,EAAmC,KAAOA,EAC7DE,EAAe1Z,EAAM0Z,aACrBC,EAAiB3Z,EAAM4Z,QACvBA,OAA6B,IAAnBD,GAAoCA,EAC9CE,EAAqB7Z,EAAM8Z,YAC3BA,OAAqC,IAAvBD,EAAgC,gBAAaA,EAC3D3L,GAAkBlO,EAAMuM,SACxBA,QAA+B,IAApB2B,IAAqCA,GAChD6L,GAAuB/Z,EAAMga,cAC7BA,QAAyC,IAAzBD,GAAkC,aAAeA,GASjEE,IARWja,EAAMrB,SACPqB,EAAMmO,QACInO,EAAMoO,kBACVpO,EAAMqO,cACbrO,EAAMsO,OACRtO,EAAMwO,KACQxO,EAAM0O,YAET1O,EAAMka,UACxBA,QAA+B,IAApBD,GAA6B,OAASA,GAEjDE,IADUna,EAAMsK,QACQtK,EAAMoa,gBAC9BA,QAA2C,IAA1BD,GAAmCE,IAAQF,GAC5DG,GAAwBta,EAAMua,gBAC9BC,QAAgD,IAA1BF,GAAmCG,IAASH,GAClEI,GAAmB1a,EAAM2a,UACzBA,QAAiC,IAArBD,GAA8BhJ,EAAQgJ,GAClDE,GAAkB5a,EAAM6a,YACxBC,GAAc9a,EAAM8a,YACpBC,GAAmB/a,EAAMgb,aACzBC,GAAajb,EAAMib,WACnBtM,GAAuB3O,EAAM4O,cAE7BvN,SADyC,IAAzBsN,IAAmC3O,EAAM8L,SAC3C9L,EAAMsB,MACpBA,QAAuB,IAAhBD,GAAyB,SAAWA,GAE3CG,IADYxB,EAAMvB,MACVgD,YAAyBzB,EAAO,CAAC,eAAgB,gBAAiB,aAAc,eAAgB,YAAa,UAAW,YAAa,cAAe,gBAAiB,YAAa,YAAa,YAAa,QAAS,eAAgB,mBAAoB,uBAAwB,WAAY,yBAA0B,kBAAmB,gBAAiB,gBAAiB,wBAAyB,iBAAkB,WAAY,YAAa,mBAAoB,oBAAqB,iBAAkB,oBAAqB,UAAW,oBAAqB,KAAM,qBAAsB,aAAc,YAAa,mBAAoB,eAAgB,UAAW,cAAe,WAAY,gBAAiB,WAAY,UAAW,oBAAqB,gBAAiB,SAAU,OAAQ,cAAe,WAAY,UAAW,iBAAkB,kBAAmB,YAAa,cAAe,cAAe,eAAgB,aAAc,gBAAiB,OAAQ,WAIt7Bua,GAAkBzB,EAAgBb,EAAgBuC,GAElDU,GAAmB/P,EAAgBvI,YAAS,GAAI5C,EAAO,CACzDkM,cAAe,kBAEb6K,GAAemE,GAAiBnE,aAChCI,GAAgB+D,GAAiB/D,cACjCF,GAAqBiE,GAAiBjE,mBACtCO,GAAyB0D,GAAiB1D,uBAC1CD,GAAgB2D,GAAiB3D,cACjCE,GAAcyD,GAAiBzD,YAC/BE,GAAkBuD,GAAiBvD,gBACnCC,GAAiBsD,GAAiBtD,eAClCnZ,GAAQyc,GAAiBzc,MACzBgY,GAAQyE,GAAiBzE,MACzB3I,GAAKoN,GAAiBpN,GACtBoD,GAAYgK,GAAiBhK,UAC7BX,GAAU2K,GAAiB3K,QAC3BhB,GAAa2L,GAAiB3L,WAC9BH,GAAW8L,GAAiB9L,SAC5BC,GAAc6L,GAAiB7L,YAC/B7E,GAAa0Q,GAAiB1Q,WAC9BkM,GAAiBwE,GAAiBxE,eAItC,GAAInK,IAAY9N,GAAM+K,OAAS,EAAG,CAChC,IAAI2R,GAAwB,SAA+BC,GACzD,OAAOxY,YAAS,CACdvC,UAAWgC,YAAKjC,EAAQib,IAAc,UAAT/Z,IAAoBlB,EAAQkb,cACzDvc,SAAUA,GACT0Y,GAAY2D,KAIf/C,EADE4C,GACeA,GAAWxc,GAAO0c,IAElB1c,GAAMc,KAAI,SAAUuL,EAAQ6G,GAC3C,OAAoBjS,gBAAoBK,IAAM6C,YAAS,CACrDrE,MAAOkM,EAAeK,GACtBxJ,KAAMA,IACL6Z,GAAsB,CACvBxJ,MAAOA,IACL2G,OAKV,GAAIiB,GAAa,GAAKzE,MAAMC,QAAQsD,GAAiB,CACnD,IAAIe,GAAOf,EAAe7O,OAAS+P,GAE9BhJ,IAAW6I,GAAO,IACrBf,EAAiBA,EAAepD,OAAO,EAAGsE,IAC3BvE,KAAmBtV,gBAAoB,OAAQ,CAC5DW,UAAWD,EAAQib,IACnBvb,IAAKuY,EAAe7O,QACnB2P,EAAiBC,MAIxB,IAWIyB,GAAcD,IAXO,SAA4BQ,GACnD,OAAoB1b,gBAAoB,KAAM,CAC5CI,IAAKsb,EAAOtb,KACEJ,gBAAoBoI,EAAe,CACjDzH,UAAWD,EAAQmb,WACnB5a,UAAW,OACVya,EAAOtE,OAAqBpX,gBAAoB,KAAM,CACvDW,UAAWD,EAAQob,SAClBJ,EAAO5c,YAIRwc,GAAeD,IAAoBtQ,EAEnCgR,GAAmB,SAA0B3Q,EAAQ6G,GACvD,IAAI+J,EAAc9D,GAAe,CAC/B9M,OAAQA,EACR6G,MAAOA,IAET,OAAoBjS,gBAAoB,KAAMkD,YAAS,GAAI8Y,EAAa,CACtErb,UAAWD,EAAQ0K,SACjBkQ,GAAalQ,EAAQ,CACvBgN,SAAU4D,EAAY,iBACtBlR,WAAYA,OAIZmR,IAAgBlP,IAAqB1N,EACrC6c,KAAiB9P,IAA+B,IAAnBkN,KAA+C,IAAnBA,EAC7D,OAAoBtZ,gBAAoBA,WAAgB,KAAmBA,gBAAoB,MAAOkD,YAAS,CAC7G3C,IAAKA,EACLI,UAAWgC,YAAKjC,EAAQ2C,KAAM1C,EAAWkQ,IAAWnQ,EAAQmQ,QAASvR,GAAaoB,EAAQpB,UAAW2c,IAAgBvb,EAAQub,aAAcC,IAAgBxb,EAAQwb,eAClK7E,GAAavV,KAASsZ,GAAY,CACnChN,GAAIA,GACJ/O,SAAUA,EACVC,WAAW,EACXsC,KAAe,UAATA,GAAmB,aAAUwB,EACnC+Y,gBAAiB5E,KACjB6E,WAAY,CACV7b,IAAKoP,GACLhP,UAAWD,EAAQ2b,UACnB1D,eAAgBA,EAChB2D,aAA2Btc,gBAAoB,MAAO,CACpDW,UAAWD,EAAQ4b,cAClBL,GAA4Bjc,gBAAoBuc,IAAYrZ,YAAS,GAAI2U,KAAiB,CAC3F,aAAciB,EACd0D,MAAO1D,EACPnY,UAAWgC,YAAKjC,EAAQ+b,eAAgB1F,IAASrW,EAAQgc,uBACvD1D,GAAa,KAAMkD,GAA4Blc,gBAAoBuc,IAAYrZ,YAAS,GAAI4U,KAA0B,CACxHzY,SAAUA,EACV,aAAcmS,GAAY0H,EAAYsB,GACtCgC,MAAOhL,GAAY0H,EAAYsB,GAC/B7Z,UAAWgC,YAAKjC,EAAQic,eAAgBnL,IAAa9Q,EAAQkc,sBAC3D3B,IAAa,OAEnB4B,WAAY3Z,YAAS,CACnBvC,UAAWgC,YAAKjC,EAAQsK,OAAuB,IAAhB6E,IAAqBnP,EAAQoc,cAC5Dzd,SAAUA,GACToY,SACAjG,IAAa9B,GAAwB1P,gBAAoB6a,GAAiB,CAC7Ela,UAAWgC,YAAKjC,EAAQqc,OAAQ3D,GAAiB1Y,EAAQsc,qBACzDC,MAAO,CACL5W,MAAOqJ,GAAWA,GAASwN,YAAc,MAE3C/Z,KAAM,eACNuM,SAAUA,GACVZ,MAAM,GACQ9O,gBAAoB0a,GAAgB,CAClD/Z,UAAWD,EAAQyc,OAClBjD,GAAqC,IAA1BlD,GAAelN,OAA4B9J,gBAAoB,MAAO,CAClFW,UAAWD,EAAQwZ,SAClBE,GAAe,KAAgC,IAA1BpD,GAAelN,QAAiBsC,GAAa8N,EAEjD,KAFwEla,gBAAoB,MAAO,CACrHW,UAAWD,EAAQ0c,WAClB9C,IAAuBtD,GAAelN,OAAS,EAAiB9J,gBAAoB+Z,EAAkB7W,YAAS,CAChHvC,UAAWD,EAAQ2c,SAClBpF,KAAmB+B,GAAehD,GAAenX,KAAI,SAAUuL,EAAQ6G,GACxE,OAAIjE,EACKmN,GAAY,CACjB/a,IAAKgL,EAAOhL,IACZgX,MAAOhM,EAAOgM,MACdtY,SAAUsM,EAAOR,QAAQ/K,KAAI,SAAUyd,EAASC,GAC9C,OAAOxB,GAAiBuB,EAASlS,EAAO6G,MAAQsL,QAK/CxB,GAAiB3Q,EAAQ6G,OAC5B,OAAS,SAmZF/N,eAr5BK,SAAgBC,GAClC,IAAIqZ,EAEJ,MAAO,CAELna,KAAM,CACJ,iCAAkC,CAChCoa,WAAY,WAId,yBAA0B,CACxB,+BAAgC,CAC9BA,WAAY,aAMlBne,UAAW,CACT+G,MAAO,QAITwK,QAAS,GAGT8K,IAAK,CACH5T,OAAQ,EACR2V,SAAU,oBAIZ9B,aAAc,CACZ7T,OAAQ,EACR2V,SAAU,oBAIZxB,aAAc,GAGdD,aAAc,GAGdI,UAAW,CACTsB,SAAU,OACV,mCAAoC,CAClC7V,aAAc,IAEhB,+BAAgC,CAC9BA,aAAc,IAEhB,WAAY,CACVzB,MAAO,EACPuX,SAAU,IAEZ,4BAA6B,CAC3BC,cAAe,EACf,WAAY,CACV/X,QAAS,GAEX,uBAAwB,CACtBA,QAAS,UAGb,2DAA4D,CAC1D,WAAY,CACVA,QAAS,eAEX,uBAAwB,CACtBA,QAAS,cAGb,oCAAqC,CACnCA,QAAS,EACT,mCAAoC,CAClCgC,aAAc,IAEhB,+BAAgC,CAC9BA,aAAc,IAEhB,WAAY,CACVhC,QAAS,aAEX,uBAAwB,CACtB+B,YAAa,GAEf,kBAAmB,CACjBiW,MAAO,IAGX,2EAA4E,CAC1EhY,QAAS,EACT,WAAY,CACVA,QAAS,cAGb,kCAAmC,CACjCiY,WAAY,GACZlW,YAAa,EACb,mCAAoC,CAClCC,aAAc,IAEhB,+BAAgC,CAC9BA,aAAc,IAEhB,WAAY,CACVhC,QAAS,WAEX,kBAAmB,CACjBgY,MAAO,IAGX,uEAAwE,CACtED,cAAe,EACf,WAAY,CACV/X,QAAS,eAMfkF,MAAO,CACLgT,SAAU,EACVpW,aAAc,WACd3B,QAAS,GAIX6W,aAAc,CACZ7W,QAAS,GAIXqW,aAAc,CAEZnT,SAAU,WACV2U,MAAO,EACP1U,IAAK,oBAKPqT,eAAgB,CACdrW,aAAc,EACdN,QAAS,EACT2X,WAAY,UAIdf,oBAAqB,GAGrBC,eAAgB,CACd7W,QAAS,EACTM,aAAc,GAIhBwW,mBAAoB,CAClBqB,UAAW,kBAIblB,OAAQ,CACN1T,OAAQlF,EAAMkF,OAAO6U,OAIvBlB,oBAAqB,CACnB7T,SAAU,YAIZgU,MAAOja,YAAS,GAAIiB,EAAMU,WAAWsZ,MAAO,CAC1CxW,SAAU,SACVI,OAAQ,UAIVsV,QAAS,CACPtU,UAAW,OACXhB,OAAQ,EACRjC,QAAS,QACTsY,UAAW,OACXzW,SAAU,QAIZuS,QAAS,CACPnZ,MAAOoD,EAAME,QAAQK,KAAK8B,UAC1BV,QAAS,aAIXsX,UAAW,CACTrc,MAAOoD,EAAME,QAAQK,KAAK8B,UAC1BV,QAAS,aAIXsF,QAASoS,EAAU,CACjBa,UAAW,GACXrZ,QAAS,OACTE,eAAgB,aAChBD,WAAY,SACZS,OAAQ,UACRqY,WAAY,EACZ/X,UAAW,aACXL,QAAS,IACTkB,wBAAyB,cACzBgX,cAAe,EACfhW,YAAa,GACbC,aAAc,IACbwW,YAAgBd,EAASrZ,EAAMoa,YAAYC,GAAG,MAAO,CACtDH,UAAW,SACTC,YAAgBd,EAAS,0BAA2B,CACtDpZ,gBAAiBD,EAAME,QAAQgD,OAAO+Q,WACpCkG,YAAgBd,EAAS,uBAAwB,CACnDpZ,gBAAiBD,EAAME,QAAQgD,OAAOoX,QACpCH,YAAgBd,EAAS,WAAY,CACvCpZ,gBAAiBD,EAAME,QAAQgD,OAAO+Q,WACpCkG,YAAgBd,EAAS,0BAA2B,CACtDvX,QAAS9B,EAAME,QAAQgD,OAAOqX,gBAC9BxY,cAAe,SACbsX,GAGJ3B,WAAY,CACVzX,gBAAiBD,EAAME,QAAQsa,WAAWxB,MAC1C/T,KAAM,GAIR0S,QAAS,CACPhW,QAAS,EACT,YAAa,CACX+B,YAAa,QAuqBa,CAChC7I,KAAM,mBADOkF,CAEZwU,G,MCr6BY,SAASkG,EAAgB7f,EAAOsM,GAC7C,YAAkBjI,IAAdiI,QAAqCjI,IAAVrE,IAI3BqW,MAAMC,QAAQhK,GACTA,EAAUC,QAAQvM,IAAU,EAG9BA,IAAUsM,GCFZ,IA6CHwT,EAAiC7e,cAAiB,SAAsBM,EAAOC,GACjF,IAAIzB,EAAWwB,EAAMxB,SACjB4B,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBme,EAAmBxe,EAAMye,UACzBA,OAAiC,IAArBD,GAAsCA,EAClD7f,EAAWqB,EAAMrB,SACjB+f,EAAqB1e,EAAM2e,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7Drd,EAAcrB,EAAMsB,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3C5C,EAAQuB,EAAMvB,MACd+C,EAAQC,YAAyBzB,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,cAAe,OAAQ,UAE7H4e,EAAe,SAAsB9c,EAAO+c,GAC9C,GAAKlgB,EAAL,CAIA,IACIgS,EADAgB,EAAQlT,GAASA,EAAMuM,QAAQ6T,GAG/BpgB,GAASkT,GAAS,GACpBhB,EAAWlS,EAAMwM,SACRgK,OAAOtD,EAAO,GAEvBhB,EAAWlS,EAAQA,EAAM6D,OAAOuc,GAAe,CAACA,GAGlDlgB,EAASmD,EAAO6O,KAGdmO,EAAwB,SAA+Bhd,EAAO+c,GAC3DlgB,GAILA,EAASmD,EAAOrD,IAAUogB,EAAc,KAAOA,IAGjD,OAAoBnf,gBAAoB,MAAOkD,YAAS,CACtDC,KAAM,QACNxC,UAAWgC,YAAKjC,EAAQ2C,KAAM1C,EAA2B,aAAhBse,GAA8Bve,EAAQ2e,UAC/E9e,IAAKA,GACJuB,GAAQ9B,WAAeH,IAAIf,GAAU,SAAUwgB,GAChD,OAAmBtf,iBAAqBsf,GAUpBtf,eAAmBsf,EAAO,CAC5C3e,UAAWgC,YAAKjC,EAAQ6e,QAAS7e,EAAQ,UAAUkC,OAAOC,YAAWoc,KAAgBK,EAAMhf,MAAMK,WACjG1B,SAAU8f,EAAYK,EAAwBF,EAC9C9G,cAAmChV,IAAzBkc,EAAMhf,MAAM8X,SAAyBwG,EAAgBU,EAAMhf,MAAMvB,MAAOA,GAASugB,EAAMhf,MAAM8X,SACvGxW,KAAM0d,EAAMhf,MAAMsB,MAAQA,IAbnB,Y,GAwEEsC,aAnKK,SAAgBC,GAClC,MAAO,CAELd,KAAM,CACJ2B,QAAS,cACTK,aAAclB,EAAMqb,MAAMna,cAI5Bga,SAAU,CACRI,cAAe,UAIjBF,QAAS,GAGTG,kBAAmB,CACjB,sBAAuB,CACrBvZ,YAAa,EACbwZ,WAAY,wBACZC,oBAAqB,EACrBC,uBAAwB,GAE1B,qBAAsB,CACpBC,qBAAsB,EACtBC,wBAAyB,IAK7BC,gBAAiB,CACf,sBAAuB,CACrBC,WAAY,EACZC,UAAW,wBACXN,oBAAqB,EACrBE,qBAAsB,GAExB,qBAAsB,CACpBD,uBAAwB,EACxBE,wBAAyB,OA2HC,CAChC/gB,KAAM,wBADOkF,CAEZ2a,G,seChGH,SAAgB,EAKdve,GACA,OAAO6f,wBAAC,EAAe,K,SAxDvB,GACA,IAAA9gB,EAAQ,WACR+gB,EAAK,QACL,IAAAC,KAAQC,EAAY,eAAEC,EAAa,gBAEnCthB,GADI,OACI,YACRC,EAAM,SACNkN,EAAQ,WACL9L,EAAK,IARR,mEA6BI8f,EAJiB,SAIjBA,EAHa,OAGbA,EAFiB,SAFnB,IAGGI,EAAiB,EAClBJ,EALE,kCAON,YACEhU,SAAQ,EACRlN,OACQ,OAANA,QAAM,IAANA,IACA,SAAUkD,GACRge,EAAMlhB,OAAY,OAALkD,QAAK,IAALA,IAASge,EAAMphB,OAEhCC,SACU,OAARA,QAAQ,IAARA,IACA,SAAUwhB,EAAQ1hB,GAChBwhB,EAAcH,EAAMphB,KAAMD,IAE9BM,SAAkB,OAARA,QAAQ,IAARA,IAAYihB,EACtBpG,QAASoG,GACNE,GACAlgB,GAUuBogB,CAAoBpgB,KAGlD,EAAaqgB,YAAc,+B,+CCOZC,UApFE,SAACtgB,GAChB,IAAQugB,EAA6BvgB,EAA7BugB,OAAQC,EAAqBxgB,EAArBwgB,QAASC,EAAYzgB,EAAZygB,QAEzB,OACE,qCACE,cAACC,EAAA,EAAD,CAAMlhB,MAAI,EAACmhB,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEjgB,UAAWkgB,IACX5hB,QAAQ,WACRP,KAAK,WACLsF,KAAK,OACLzF,MAAM,eACN8M,aAAa,MACbrM,WAAS,MAIb,cAAC0hB,EAAA,EAAD,CAAMlhB,MAAI,EAACmhB,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEjgB,UAAWkgB,IACX5hB,QAAQ,WACRP,KAAK,SACLsF,KAAK,SACLzF,MAAM,UACN8M,aAAa,MACbrM,WAAS,MAIb,cAAC0hB,EAAA,EAAD,CAAMlhB,MAAI,EAACmhB,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEE,WAAS,EACTC,QAAS,EACTC,QAAS,EACTrgB,UAAWkgB,IACX5hB,QAAQ,WACRP,KAAK,MACLsF,KAAK,OACLzF,MAAM,MACN0iB,YAAY,2BACZ5V,aAAa,MACbrM,WAAS,MAIb,cAAC0hB,EAAA,EAAD,CAAMlhB,MAAI,EAACmhB,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACzhB,EAAA,EAAD,CACET,KAAK,OACLU,MAAO8hB,IACP3iB,MAAM,eACNO,SAAOyhB,EAAO1d,OAAQ2d,EAAQ3d,MAC9B9D,SAAU0hB,MAId,cAACC,EAAA,EAAD,CAAMlhB,MAAI,EAACmhB,GAAI,GAAf,SACE,cAAC,IAAD,CACEhgB,UAAWyX,EACX7L,UAAQ,EACRvN,WAAS,EACTD,SAAU0hB,EACVlH,UAAW,EACX7a,KAAK,cACL4L,QAAS6W,IACThU,uBAAqB,EACrB1C,eAAgB,SAACK,GAAD,OAAYA,EAAOvM,OACnCuc,YAAa,SAACM,GAAD,OACX,cAAC,IAAD,2BACMA,GADN,IAEEuB,MAAO,CAAE5W,MAAO,QAChB9G,QAAQ,WACRP,KAAK,cACLI,MAAO0hB,EAAQY,eAAgBb,EAAOa,YACtCC,WAAYb,EAAQY,aAAeb,EAAOa,YAC1C7iB,MAAM,gBACN0iB,YAAY","file":"static/js/58.f958eece.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, ErrorMessage } from 'formik';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst MaterialUISelectField = ({\r\n  errorString,\r\n  label,\r\n  children,\r\n  value,\r\n  name,\r\n  onChange,\r\n  onBlur,\r\n  required,\r\n  error,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\" error={error} disabled={disabled}>\r\n      <InputLabel required={required}>{label}</InputLabel>\r\n\r\n      <Select\r\n        native\r\n        name={name}\r\n        label={label}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={value}\r\n      >\r\n        {children}\r\n      </Select>\r\n\r\n      <FormHelperText error>{errorString}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst FormikSelect = ({\r\n  name,\r\n  items,\r\n  label,\r\n  required = false,\r\n  error,\r\n  disabled\r\n}) => {\r\n  return (\r\n    <Field\r\n      autoOk\r\n      name={name}\r\n      as={MaterialUISelectField}\r\n      label={label}\r\n      errorString={<ErrorMessage name={name} />}\r\n      required={required}\r\n      error={error}\r\n      disabled={disabled}\r\n    >\r\n      {items.map((item) => (\r\n        <option key={item.value} value={item.value}>\r\n          {item.label}\r\n        </option>\r\n      ))}\r\n    </Field>\r\n  );\r\n};\r\n\r\nexport default FormikSelect;\r\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, alpha } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: alpha(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: alpha(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: alpha(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: alpha(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: alpha(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\r\n * @ignore - internal component.\r\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabelProp = _props$getOptionLabel === void 0 ? function (option) {\n    return option;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = function getOptionLabel(option) {\n      var optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n        console.error(\"Material-UI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n\n      return optionLabel;\n    };\n  }\n\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValue = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var setHighlightedIndex = useEventCallback(function (_ref2) {\n    var event = _ref2.event,\n        index = _ref2.index,\n        _ref2$reason = _ref2.reason,\n        reason = _ref2$reason === void 0 ? 'auto' : _ref2$reason;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  var changeHighlightedIndex = useEventCallback(function (_ref3) {\n    var event = _ref3.event,\n        diff = _ref3.diff,\n        _ref3$direction = _ref3.direction,\n        direction = _ref3$direction === void 0 ? 'next' : _ref3$direction,\n        _ref3$reason = _ref3.reason,\n        reason = _ref3$reason === void 0 ? 'auto' : _ref3$reason;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason: reason,\n      event: event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  var syncHighlightedIndex = React.useCallback(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(function () {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: The `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            var newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    setHighlightedIndex({\n      event: event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = value.slice();\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref4) {\n      var index = _ref4.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref5) {\n      var index = _ref5.index,\n          option = _ref5.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\r\n   * known as the completion string, appears inline after the input cursor in the textbox.\r\n   * The inline completion string is visually highlighted and has a selected state.\r\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\r\n   * If `true`, the first option is automatically highlighted.\r\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\r\n   * If `true`, the selected option becomes the value of the input\r\n   * when the Autocomplete loses focus unless the user chooses\r\n   * a different option or changes the character string in the input.\r\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\r\n   * Control if the input should be blurred when an option is selected:\r\n   *\r\n   * - `false` the input is not blurred.\r\n   * - `true` the input is always blurred.\r\n   * - `touch` the input is blurred after a touch event.\r\n   * - `mouse` the input is blurred after a mouse event.\r\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\r\n   * Props applied to the [`Chip`](/api/chip/) element.\r\n   */\n  ChipProps: PropTypes.object,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the input's text will be cleared on blur if no value is selected.\r\n   *\r\n   * Set to `true` if you want to help the user enter a new value.\r\n   * Set to `false` if you want to help the user resume his search.\r\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\r\n   * If `true`, clear all values when the user presses escape and the popup is closed.\r\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\r\n   * Override the default text for the *clear* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  clearText: PropTypes.string,\n\n  /**\r\n   * The icon to display in place of the default close icon.\r\n   */\n  closeIcon: PropTypes.node,\n\n  /**\r\n   * Override the default text for the *close popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  closeText: PropTypes.string,\n\n  /**\r\n   * If `true`, the popup will ignore the blur event if the input is filled.\r\n   * You can inspect the popup markup with your browser tools.\r\n   * Consider this option when you need to customize the component.\r\n   */\n  debug: PropTypes.bool,\n\n  /**\r\n   * The default input value. Use when the component is not controlled.\r\n   */\n  defaultValue: PropTypes.any,\n\n  /**\r\n   * If `true`, the input can't be cleared.\r\n   */\n  disableClearable: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\r\n   * If `true`, the popup won't close when a value is selected.\r\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\r\n   * If `true`, the input will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, will allow focus on disabled items.\r\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\r\n   * If `true`, the list box in the popup will not wrap focus.\r\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\r\n   * Disable the portal behavior.\r\n   * The children stay within it's parent DOM hierarchy.\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * A filter function that determines the options that are eligible.\r\n   *\r\n   * @param {T[]} options The options to render.\r\n   * @param {object} state The state of the component.\r\n   * @returns {T[]}\r\n   */\n  filterOptions: PropTypes.func,\n\n  /**\r\n   * If `true`, hide the selected options from the list box.\r\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\r\n   * Force the visibility display of the popup icon.\r\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\r\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\r\n   */\n  freeSolo: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\r\n   * If `true`, the input will take up the full width of its container.\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * The label to display when the tags are truncated (`limitTags`).\r\n   *\r\n   * @param {number} more The number of truncated tags.\r\n   * @returns {ReactNode}\r\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\r\n   * Used to determine the disabled state for a given option.\r\n   *\r\n   * @param {T} option The option to test.\r\n   * @returns {boolean}\r\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\r\n   * Used to determine the string value for a given option.\r\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\r\n   *\r\n   * @param {T} option\r\n   * @returns {string}\r\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\r\n   * Used to determine if an option is selected, considering the current value.\r\n   * Uses strict equality by default.\r\n   *\r\n   * @param {T} option The option to test.\r\n   * @param {T} value The value to test against.\r\n   * @returns {boolean}\r\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\r\n   * If provided, the options will be grouped under the returned string.\r\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\r\n   *\r\n   * @param {T} options The options to group.\r\n   * @returns {string}\r\n   */\n  groupBy: PropTypes.func,\n\n  /**\r\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\r\n   * It should move focus to the first option and last option, respectively.\r\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\r\n   * This prop is used to help implement the accessibility logic.\r\n   * If you don't provide this prop. It falls back to a randomly generated id.\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * If `true`, the highlight can move to the input.\r\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\r\n   * The input value.\r\n   */\n  inputValue: PropTypes.string,\n\n  /**\r\n   * The maximum number of tags that will be visible when not focused.\r\n   * Set `-1` to disable the limit.\r\n   */\n  limitTags: PropTypes.number,\n\n  /**\r\n   * The component used to render the listbox.\r\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the Listbox element.\r\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\r\n   * If `true`, the component is in a loading state.\r\n   */\n  loading: PropTypes.bool,\n\n  /**\r\n   * Text to display when in a loading state.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  loadingText: PropTypes.node,\n\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   */\n  multiple: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\r\n   * Text to display when there are no options.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {T|T[]} value The new value of the component.\r\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the popup requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired when the highlight option changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {T} option The highlighted option.\r\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\r\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the input value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} value The new value of the text input.\r\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\r\n   */\n  onInputChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the popup requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onOpen: PropTypes.func,\n\n  /**\r\n   * Control the popup` open state.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * If `true`, the popup will open on input focus.\r\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\r\n   * Override the default text for the *open popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   */\n  openText: PropTypes.string,\n\n  /**\r\n   * Array of options.\r\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\r\n   * The component used to render the body of the popup.\r\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\r\n   * The component used to position the popup.\r\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\r\n   * The icon to display in place of the default popup icon.\r\n   */\n  popupIcon: PropTypes.node,\n\n  /**\r\n   * Render the group.\r\n   *\r\n   * @param {any} option The group to render.\r\n   * @returns {ReactNode}\r\n   */\n  renderGroup: PropTypes.func,\n\n  /**\r\n   * Render the input.\r\n   *\r\n   * @param {object} params\r\n   * @returns {ReactNode}\r\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\r\n   * Render the option, use `getOptionLabel` by default.\r\n   *\r\n   * @param {T} option The option to render.\r\n   * @param {object} state The state of the component.\r\n   * @returns {ReactNode}\r\n   */\n  renderOption: PropTypes.func,\n\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {T[]} value The `value` provided to the component.\r\n   * @param {function} getTagProps A tag props getter.\r\n   * @returns {ReactNode}\r\n   */\n  renderTags: PropTypes.func,\n\n  /**\r\n   * If `true`, the input's text will be selected on focus.\r\n   * It helps the user clear the selected value.\r\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\r\n   * The size of the autocomplete.\r\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\r\n   * The value of the autocomplete.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   * You can customize the equality behavior with the `getOptionSelected` prop.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the button.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, only allow one of the child ToggleButton values to be selected.\r\n   */\n  exclusive: PropTypes.bool,\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {any} value of the selected buttons. When `exclusive` is true\r\n   * this is a single value; when false an array of selected values. If no value\r\n   * is selected and `exclusive` is true the value is null; when false an empty array.\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * The group orientation (layout flow direction).\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\r\n   * The size of the buttons.\r\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\r\n   * The currently selected value within the group or an array of selected\r\n   * values when `exclusive` is false.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import * as React from 'react';\nimport MuiAutocomplete, {\n  AutocompleteProps as MuiAutocompleteProps,\n} from '@material-ui/lab/Autocomplete';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport { AutocompleteRenderInputParams } from '@material-ui/lab/Autocomplete';\n\nexport interface AutocompleteProps<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>\n  extends FieldProps,\n    Omit<\n      MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo>,\n      'name' | 'value' | 'defaultValue'\n    > {\n  type?: string;\n}\n\nexport function fieldToAutocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>({\n  disabled,\n  field,\n  form: { isSubmitting, setFieldValue },\n  type,\n  onChange,\n  onBlur,\n  freeSolo,\n  ...props\n}: AutocompleteProps<\n  T,\n  Multiple,\n  DisableClearable,\n  FreeSolo\n>): MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.multiple) {\n      invariant(\n        Array.isArray(field.value),\n        `value for ${field.name} is not an array, this can caused unexpected behaviour`\n      );\n    }\n  }\n\n  const {\n    onChange: _onChange,\n    onBlur: _onBlur,\n    multiple: _multiple,\n    ...fieldSubselection\n  } = field;\n\n  return {\n    freeSolo,\n    onBlur:\n      onBlur ??\n      function (event) {\n        field.onBlur(event ?? field.name);\n      },\n    onChange:\n      onChange ??\n      function (_event, value) {\n        setFieldValue(field.name, value);\n      },\n    disabled: disabled ?? isSubmitting,\n    loading: isSubmitting,\n    ...fieldSubselection,\n    ...props,\n  };\n}\n\nexport function Autocomplete<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined\n>(props: AutocompleteProps<T, Multiple, DisableClearable, FreeSolo>) {\n  return <MuiAutocomplete {...fieldToAutocomplete(props)} />;\n}\n\nAutocomplete.displayName = 'FormikMaterialUIAutocomplete';\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiTextField from '@material-ui/core/TextField';\r\nimport { Autocomplete } from 'formik-material-ui-lab';\r\nimport { Field } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\n\r\nimport FormikSelect from '../../CreateMatch/FormHelper/FormikSelect';\r\nimport { favGunItems, roleItems } from '../FormHelpers/Items';\r\n\r\nconst InfoForm = (props) => {\r\n  const { errors, touched, disable } = props;\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={6}>\r\n        <Field\r\n          component={TextField}\r\n          variant=\"outlined\"\r\n          name=\"gameName\"\r\n          type=\"text\"\r\n          label=\"In Game Name\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <Field\r\n          component={TextField}\r\n          variant=\"outlined\"\r\n          name=\"gameId\"\r\n          type=\"number\"\r\n          label=\"Game Id\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <Field\r\n          multiline\r\n          minRows={1}\r\n          maxRows={3}\r\n          component={TextField}\r\n          variant=\"outlined\"\r\n          name=\"bio\"\r\n          type=\"text\"\r\n          label=\"Bio\"\r\n          placeholder=\"Something about yourself\"\r\n          autoComplete=\"off\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={6}>\r\n        <FormikSelect\r\n          name=\"role\"\r\n          items={roleItems}\r\n          label=\"In Game Role\"\r\n          error={errors.role && touched.role ? true : false}\r\n          disabled={disable}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Field\r\n          component={Autocomplete}\r\n          multiple\r\n          fullWidth\r\n          disabled={disable}\r\n          limitTags={4}\r\n          name=\"favoriteGun\"\r\n          options={favGunItems}\r\n          filterSelectedOptions\r\n          getOptionLabel={(option) => option.label}\r\n          renderInput={(params) => (\r\n            <MuiTextField\r\n              {...params}\r\n              style={{ width: '100%' }}\r\n              variant=\"outlined\"\r\n              name=\"favoriteGun\"\r\n              error={touched.favoriteGun && (errors.favoriteGun ? true : false)}\r\n              helperText={touched.favoriteGun && errors.favoriteGun}\r\n              label=\"Favorite Guns\"\r\n              placeholder=\"Guns\"\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoForm;\r\n"],"sourceRoot":""}