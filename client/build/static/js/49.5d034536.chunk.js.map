{"version":3,"sources":["ui/SubmitButton/SubmitButton.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","containers/SingleMatch/ComponentHelper/Participants/Team/Player/Player.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/TeamResult/PositionHelper/PositionValue.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/PlayerResult/KillHelper/KillValue.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/PlayerResult/PlayerResult.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/TeamResult/TeamResult.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/TeamResult/PositionHelper/PositionForm.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/PlayerResult/KillHelper/KillForm.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/PlayerResult/PlayerForm.js","containers/SingleMatch/ComponentHelper/Result/ResultHelper/TeamResult/TeamForm.js","containers/SingleMatch/ComponentHelper/Result/Result.js"],"names":["useStyles","makeStyles","theme","loadingIcon","marginLeft","spacing","color","palette","text","secondary","SubmitButton","props","classes","variant","createText","creatingText","updateText","updatingText","isSubmitting","edit","disabled","onClick","size","disableElevation","className","getTextFieldUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextFieldRoot","styled","FormControl","name","overridesResolver","styles","root","TextField","React","inProps","ref","useThemeProps","autoComplete","autoFocus","children","defaultValue","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","maxRows","minRows","multiline","onBlur","onChange","onFocus","placeholder","required","rows","select","SelectProps","type","value","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","_jsxs","native","undefined","helperTextId","inputLabelId","InputComponent","InputElement","_jsx","clsx","InputLabel","htmlFor","Select","labelId","input","FormHelperText","avatar","width","height","Player","profile","gameName","info","src","alt","sx","backgroundColor","style","fontSize","charAt","toUpperCase","primary","getListItemAvatarUtilityClass","ListItemAvatarRoot","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","ListItemAvatar","context","ListContext","slots","padding","PositionValue","position","Typography","KillValue","kills","display","justifyContent","PlayerResult","Box","kill","marginBottom","teamResult","breakpoints","down","playerResult","TeamResult","team","index","Paper","_id","players","map","player","playerId","PositionForm","as","min","max","KillForm","PlayerForm","margin","paddingTop","TeamForm","teamId","Error","lazy","box","flexGrow","maxWidth","flexBasis","connect","state","user","auth","dispatch","onGetTeams","matchId","actions","onPostResult","resultData","loadingTeams","teams","matchStatus","tournamentId","useEffect","initialValues","length","forEach","role","Loading","hideImage","onSubmit","values","setSubmitting","setTimeout","submitForm","status","statusText"],"mappings":"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","file":"static/js/49.5d034536.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nconst SubmitButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    variant = 'contained',\r\n    createText,\r\n    creatingText,\r\n    updateText = '',\r\n    updatingText = '',\r\n    isSubmitting,\r\n    edit = false,\r\n    disabled,\r\n    onClick\r\n  } = props;\r\n\r\n  return (\r\n    <Button\r\n      size=\"large\"\r\n      variant={variant}\r\n      color=\"primary\"\r\n      aria-label=\"Submit\"\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      disableElevation\r\n    >\r\n      {isSubmitting ? (\r\n        <>\r\n          {edit ? updatingText : creatingText}\r\n          <CircularProgress size={16} className={classes.loadingIcon} />\r\n        </>\r\n      ) : edit ? (\r\n        updateText\r\n      ) : (\r\n        createText\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { refType } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps == null ? void 0 : InputLabelProps.required) != null ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [label, displayRequired && '\\u00a0*']\n      });\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst Player = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    profile: {\r\n      profile: { avatar, gameName },\r\n      info: { name }\r\n    }\r\n  } = props;\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemAvatar>\r\n        {avatar !== null ? (\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={`data:image/png;base64,${avatar}`}\r\n            alt={name}\r\n          />\r\n        ) : (\r\n          <Avatar\r\n            alt={name}\r\n            className={classes.avatar}\r\n            sx={{ backgroundColor: 'orange' }}\r\n          >\r\n            <span style={{ fontSize: '28px' }}>\r\n              {name.charAt(0).toUpperCase()}\r\n            </span>\r\n          </Avatar>\r\n        )}\r\n      </ListItemAvatar>\r\n\r\n      <ListItemText\r\n        sx={{ marginLeft: 2.5 }}\r\n        primary={gameName}\r\n        secondary={name}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemAvatar;","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\nconst PositionValue = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { position } = props;\r\n\r\n  return (\r\n    <Typography\r\n      variant=\"h6\"\r\n      className={classes.root}\r\n      sx={{ color: 'secondary' }}\r\n    >\r\n      {position && <b># {position}</b>}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default PositionValue;\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\nconst KillValue = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { kills } = props;\r\n\r\n  return (\r\n    <Typography sx={{ color: 'secondary' }} className={classes.root}>\r\n      <b>{kills} Kills</b>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default KillValue;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport Player from '../../../Participants/Team/Player/Player';\r\nimport KillValue from './KillHelper/KillValue';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '0 16px 0 8px'\r\n  }\r\n}));\r\n\r\nconst PlayerResult = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { profile } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Player profile={profile} />\r\n\r\n      <KillValue kills={profile.kill} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PlayerResult;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport PositionValue from './PositionHelper/PositionValue';\r\nimport PlayerResult from '../PlayerResult/PlayerResult';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  teamResult: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(1.75, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(1.5, 3.25)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(1.4, 3)\r\n    }\r\n  },\r\n  playerResult: {\r\n    padding: theme.spacing(0.75, 1.5),\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: theme.spacing(0.5, 1.25)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(0.4, 1.2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst TeamResult = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { team, index } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Paper variant=\"outlined\">\r\n        <Box className={classes.teamResult}>\r\n          <Typography variant=\"h6\" color=\"primary\">\r\n            <b>Team {index + 1}</b>\r\n          </Typography>\r\n\r\n          <PositionValue position={team._id.position} />\r\n        </Box>\r\n\r\n        <Box className={classes.playerResult}>\r\n          {team.players.map((player) => {\r\n            return <PlayerResult key={player.playerId} profile={player} />;\r\n          })}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TeamResult;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Field } from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\nconst PositionForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { name } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Field\r\n        as={TextField}\r\n        type=\"number\"\r\n        id={name}\r\n        label=\"Position\"\r\n        name={name}\r\n        size=\"small\"\r\n        autoComplete=\"off\"\r\n        inputProps={{\r\n          min: 0,\r\n          max: 100\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PositionForm;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { Field } from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1, 0)\r\n  }\r\n}));\r\n\r\nconst KillForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { name } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Field\r\n        as={TextField}\r\n        type=\"number\"\r\n        id={name}\r\n        label=\"Kills\"\r\n        name={name}\r\n        size=\"small\"\r\n        autoComplete=\"off\"\r\n        inputProps={{\r\n          min: 0,\r\n          max: 20\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default KillForm;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport Player from '../../../Participants/Team/Player/Player';\r\nimport KillForm from './KillHelper/KillForm';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '0 16px 0 8px'\r\n  }\r\n}));\r\n\r\nconst PlayerForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { profile } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Player profile={profile} />\r\n\r\n      <KillForm name={profile.playerId} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PlayerForm;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport PositionForm from './PositionHelper/PositionForm';\r\nimport PlayerForm from '../PlayerResult/PlayerForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  teamResult: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '4px 24px 8px 32px'\r\n  },\r\n  playerResult: {\r\n    padding: theme.spacing(1.5),\r\n    paddingTop: theme.spacing(0)\r\n  }\r\n}));\r\n\r\nconst TeamForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { team, index } = props;\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Paper variant=\"outlined\">\r\n        <Box className={classes.teamResult}>\r\n          <Typography variant=\"h6\" color=\"primary\">\r\n            <b>Team {index + 1}</b>\r\n          </Typography>\r\n\r\n          <PositionForm name={team._id.teamId} />\r\n        </Box>\r\n\r\n        <Box className={classes.playerResult}>\r\n          {team.players.map((player) => {\r\n            return <PlayerForm key={player.playerId} profile={player} />;\r\n          })}\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TeamForm;\r\n","import React, { useEffect, lazy, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport { Formik, Form } from 'formik';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport TeamResult from './ResultHelper/TeamResult/TeamResult';\r\nimport TeamForm from './ResultHelper/TeamResult/TeamForm';\r\n\r\nimport * as actions from '../../../../store/actions/index';\r\nimport Loading from '../../../../ui/Loading/Loading';\r\nimport SubmitButton from '../../../../ui/SubmitButton/SubmitButton';\r\nconst Error = lazy(() => import('../../../../ui/Error/Error'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    margin: theme.spacing(2.25, 0),\r\n    flexGrow: 1,\r\n    maxWidth: '100%',\r\n    flexBasis: '44%'\r\n  }\r\n}));\r\n\r\nconst Result = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    user,\r\n    team: { loadingTeams, teams },\r\n    matchStatus,\r\n    onGetTeams,\r\n    onPostResult,\r\n    tournamentId\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    onGetTeams(tournamentId);\r\n  }, [onGetTeams, tournamentId]);\r\n\r\n  let initialValues = {};\r\n\r\n  if (!loadingTeams && teams.length > 0) {\r\n    teams.forEach((team) => {\r\n      initialValues[team._id.teamId] = team._id.position;\r\n      team.players.forEach((player) => {\r\n        initialValues[player.playerId] = player.kill;\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {matchStatus !== 'Result' ? (\r\n        user.role === 'admin' ? (\r\n          loadingTeams ? (\r\n            <Loading hideImage>Fetching Teams and data...</Loading>\r\n          ) : teams.length > 0 ? (\r\n            <Formik\r\n              initialValues={initialValues}\r\n              onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                  setSubmitting(false);\r\n                  onPostResult(tournamentId, values);\r\n                }, 500);\r\n              }}\r\n            >\r\n              {({ submitForm, isSubmitting }) => {\r\n                return (\r\n                  <Form>\r\n                    {teams.map((team, index) => (\r\n                      <TeamForm\r\n                        key={team._id.teamId}\r\n                        team={team}\r\n                        index={index}\r\n                      />\r\n                    ))}\r\n                    <Box\r\n                      className={classes.box}\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center'\r\n                      }}\r\n                    >\r\n                      <SubmitButton\r\n                        createText=\"Post Result\"\r\n                        creatingText=\"Posting...\"\r\n                        isSubmitting={isSubmitting}\r\n                        disabled={isSubmitting ? true : false}\r\n                        onClick={submitForm}\r\n                      />\r\n                    </Box>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          ) : (\r\n            <Suspense>\r\n              <Error\r\n                hideImage\r\n                status=\"204\"\r\n                statusText=\"No participants yet. Let some players join.\"\r\n              />\r\n            </Suspense>\r\n          )\r\n        ) : (\r\n          <Suspense>\r\n            <Error\r\n              hideImage\r\n              status=\"204\"\r\n              statusText=\"Result is not generated yet.\"\r\n            />\r\n          </Suspense>\r\n        )\r\n      ) : loadingTeams ? (\r\n        <Loading hideImage>Fetching Result...</Loading>\r\n      ) : teams.length > 0 ? (\r\n        teams.map((team, index) => (\r\n          <TeamResult key={team._id.teamId} team={team} index={index} />\r\n        ))\r\n      ) : (\r\n        <Suspense>\r\n          <Error hideImage status=\"204\" statusText=\"Something went wrong.\" />\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  team: state.team,\r\n  user: state.auth.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetTeams: (matchId) => dispatch(actions.getAllTeams(matchId)),\r\n  onPostResult: (matchId, resultData) =>\r\n    dispatch(actions.postResult(matchId, resultData))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\r\n"],"sourceRoot":""}