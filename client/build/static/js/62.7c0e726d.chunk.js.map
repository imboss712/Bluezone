{"version":3,"sources":["ui/SubmitButton/SubmitButton.js","ui/FormComponents/FormikField.js","containers/SingleMatch/ComponentHelper/Participants/ParticipantsHelper/WalletModal.js","containers/SingleMatch/ComponentHelper/Participants/ParticipantsHelper/NotJoined.js"],"names":["useStyles","makeStyles","theme","loadingIcon","marginLeft","spacing","color","palette","text","secondary","SubmitButton","props","classes","variant","createText","creatingText","updateText","updatingText","isSubmitting","edit","disabled","onClick","size","disableElevation","className","FormikField","name","label","type","placeholder","error","as","TextField","id","fullWidth","autoComplete","helperText","amountBox","display","fontWeight","margin","info","textAlign","fontSize","connect","state","user","auth","dispatch","onGetUser","actions","entryFees","discountPercent","useEffect","Box","Typography","sx","amount","Divider","Stack","direction","alignSelf","to","onCreateTeam","matchId","onJoinTeam","joinTeamdata","sharedClasses","globalStyles","modalRef","useRef","tournamentId","participantStatus","useState","title","noAction","noActionText","confirmText","onConfirmClick","console","log","modalProps","setModalProps","box","Button","current","openModal","setTimeout","closeModal","initialValues","teamCode","validationSchema","Yup","required","length","onSubmit","values","setSubmitting","handleJoinTeam","submitForm","touched","errors","Modal","ref"],"mappings":"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","file":"static/js/62.7c0e726d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingIcon: {\r\n    marginLeft: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nconst SubmitButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    variant = 'contained',\r\n    createText,\r\n    creatingText,\r\n    updateText = '',\r\n    updatingText = '',\r\n    isSubmitting,\r\n    edit = false,\r\n    disabled,\r\n    onClick\r\n  } = props;\r\n\r\n  return (\r\n    <Button\r\n      size=\"large\"\r\n      variant={variant}\r\n      color=\"primary\"\r\n      aria-label=\"Submit\"\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      disableElevation\r\n    >\r\n      {isSubmitting ? (\r\n        <>\r\n          {edit ? updatingText : creatingText}\r\n          <CircularProgress size={16} className={classes.loadingIcon} />\r\n        </>\r\n      ) : edit ? (\r\n        updateText\r\n      ) : (\r\n        createText\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from 'react';\r\nimport { ErrorMessage, Field } from 'formik';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst FormikField = ({\r\n  name,\r\n  label,\r\n  type = 'text',\r\n  placeholder = '',\r\n  error,\r\n  disabled = false\r\n}) => {\r\n  return (\r\n    <Field\r\n      as={TextField}\r\n      type={type}\r\n      id={name}\r\n      label={label}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      error={error}\r\n      disabled={disabled}\r\n      fullWidth\r\n      autoComplete=\"off\"\r\n      helperText={<ErrorMessage name={name} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormikField;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  amountBox: {\r\n    display: 'flex',\r\n    fontWeight: 'bold',\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  info: {\r\n    margin: theme.spacing(2, 1, 4, 1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    fontSize: theme.spacing(1.75)\r\n  }\r\n}));\r\n\r\nconst WalletModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { entryFees, discountPercent, onGetUser, user } = props;\r\n\r\n  useEffect(() => {\r\n    onGetUser();\r\n  }, [onGetUser]);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.amountBox}>\r\n        <Typography color=\"secondary\">\r\n          <b>Current Balance:</b>\r\n        </Typography>\r\n\r\n        <Typography color=\"secondary\" sx={{ marginLeft: 'auto' }}>\r\n          <b>₹{user.amount}</b>\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <Box className={classes.amountBox}>\r\n        <Typography>\r\n          <b>Joining Amount:</b>\r\n        </Typography>\r\n\r\n        <Stack sx={{ marginLeft: 'auto' }} direction=\"row\" spacing={1}>\r\n          <Typography>\r\n            <b>₹{entryFees - (entryFees * discountPercent) / 100}</b>\r\n          </Typography>\r\n\r\n          {entryFees === 0 || discountPercent === 0 ? null : (\r\n            <Typography variant=\"body2\" sx={{ alignSelf: 'flex-end' }}>\r\n              <del>₹{entryFees}</del>\r\n            </Typography>\r\n          )}\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <Typography className={classes.info}>\r\n        By joining this tournament, you agree to our{' '}\r\n        <Link to=\"/terms-of-service\">Terms of Service</Link> and{' '}\r\n        <Link to=\"/privacy-policy\">Privacy Policy</Link>\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetUser: () => dispatch(actions.getUser())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletModal);\r\n","import React, { useRef, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\nimport globalStyles from '../../../../../ui/styles/globalStyles';\r\nimport FormikField from '../../../../../ui/FormComponents/FormikField';\r\nimport SubmitButton from '../../../../../ui/SubmitButton/SubmitButton';\r\nimport Modal from '../../../../../ui/Modal/Modal';\r\n\r\nimport WalletModal from './WalletModal';\r\n\r\nconst NotJoined = (props) => {\r\n  const sharedClasses = globalStyles();\r\n\r\n  const modalRef = useRef();\r\n\r\n  const {\r\n    user,\r\n    tournamentId,\r\n    entryFees,\r\n    discountPercent,\r\n    participantStatus,\r\n    onCreateTeam,\r\n    onJoinTeam\r\n  } = props;\r\n\r\n  const [modalProps, setModalProps] = useState({\r\n    title: '',\r\n    noAction: false,\r\n    noActionText: '',\r\n    confirmText: '',\r\n    onConfirmClick: () => console.log('Confirm button clicked!')\r\n  });\r\n\r\n  const handleCreateTeam = () => {\r\n    modalRef.current.openModal();\r\n\r\n    setModalProps({\r\n      title: 'Create Team',\r\n      noAction:\r\n        (user && user.amount) < entryFees - (entryFees * discountPercent) / 100,\r\n      noActionText:\r\n        'Insufficient balance! Please go to wallet, add cash and then create/join team.',\r\n      confirmText: 'Pay and Create Team',\r\n      onConfirmClick: () => {\r\n        onCreateTeam(tournamentId);\r\n        setTimeout(() => {\r\n          modalRef.current && modalRef.current.closeModal();\r\n        }, 1500);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleJoinTeam = (values) => {\r\n    modalRef.current.openModal();\r\n\r\n    setModalProps({\r\n      title: 'Join Team',\r\n      noAction:\r\n        (user && user.amount) < entryFees - (entryFees * discountPercent) / 100,\r\n      noActionText:\r\n        'Insufficient balance! Please go to wallet, add cash and then create/join team.',\r\n      confirmText: 'Pay and Join Team',\r\n      onConfirmClick: () => {\r\n        onJoinTeam(tournamentId, values);\r\n        setTimeout(() => {\r\n          modalRef.current && modalRef.current.closeModal();\r\n        }, 1500);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ margin: 'auto' }}>\r\n        <Box className={sharedClasses.box}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            disableElevation\r\n            disabled={participantStatus === 'Closed' ? true : false}\r\n            onClick={handleCreateTeam}\r\n          >\r\n            Create Team\r\n          </Button>\r\n        </Box>\r\n\r\n        <Typography\r\n          sx={{ color: 'text.secondary' }}\r\n          className={sharedClasses.box}\r\n        >\r\n          OR\r\n        </Typography>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            teamCode: ''\r\n          }}\r\n          validationSchema={Yup.object({\r\n            teamCode: Yup.string()\r\n              .required('Required')\r\n              .length(8, 'Teamcode must be 8 digit long')\r\n          })}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              setSubmitting(false);\r\n              handleJoinTeam(values);\r\n            }, 500);\r\n          }}\r\n        >\r\n          {({ submitForm, isSubmitting, touched, errors }) => (\r\n            <Form>\r\n              <Box className={sharedClasses.box}>\r\n                <FormikField\r\n                  name=\"teamCode\"\r\n                  label=\"Teamcode\"\r\n                  placeholder=\"Eg. 7oet_d9Z\"\r\n                  error={touched.teamCode && errors.teamCode ? true : false}\r\n                  disabled={\r\n                    isSubmitting || participantStatus === 'Closed'\r\n                      ? true\r\n                      : false\r\n                  }\r\n                />\r\n              </Box>\r\n\r\n              <Box className={sharedClasses.box}>\r\n                <SubmitButton\r\n                  createText=\"Join Team\"\r\n                  creatingText=\"Joining...\"\r\n                  isSubmitting={isSubmitting}\r\n                  disabled={\r\n                    isSubmitting ||\r\n                    errors.teamCode ||\r\n                    participantStatus === 'Closed'\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  onClick={submitForm}\r\n                />\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      <Modal\r\n        ref={modalRef}\r\n        title={modalProps.title}\r\n        noAction={modalProps.noAction}\r\n        noActionText={modalProps.noActionText}\r\n        confirmText={modalProps.confirmText}\r\n        onConfirmClick={modalProps.onConfirmClick}\r\n      >\r\n        <WalletModal entryFees={entryFees} discountPercent={discountPercent} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onCreateTeam: (matchId) => dispatch(actions.createTeam(matchId)),\r\n  onJoinTeam: (matchId, joinTeamdata) =>\r\n    dispatch(actions.joinTeam(matchId, joinTeamdata))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotJoined);\r\n"],"sourceRoot":""}