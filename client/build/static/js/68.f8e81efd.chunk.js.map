{"version":3,"sources":["containers/SingleMatch/ComponentHelper/Participants/Team/Player/Player.js","containers/SingleMatch/ComponentHelper/Participants/MyTeam/Teamcode.js","containers/SingleMatch/ComponentHelper/Participants/MyTeam/ExitModal.js","containers/SingleMatch/ComponentHelper/Participants/MyTeam/PlayerAction.js","containers/SingleMatch/ComponentHelper/Participants/MyTeam/MyTeam.js"],"names":["useStyles","makeStyles","theme","avatar","width","spacing","height","Player","props","classes","profile","gameName","name","info","className","src","alt","sx","backgroundColor","style","fontSize","charAt","toUpperCase","marginLeft","primary","secondary","box","alignItems","textAlign","margin","breakpoints","down","Teamcode","teamCode","useState","copySuccess","setCopySuccess","Box","Typography","color","TextField","variant","type","label","value","readOnly","fullWidth","InputProps","endAdornment","InputAdornment","position","Tooltip","title","enterDelay","TransitionComponent","Zoom","placement","arrow","IconButton","edge","onClick","el","document","createElement","window","location","href","setAttribute","left","body","appendChild","select","execCommand","removeChild","setTimeout","marginRight","size","amountBox","display","fontWeight","palette","text","connect","state","user","auth","dispatch","onGetUser","actions","entryFees","useEffect","amount","Divider","root","justifyContent","boxIcon","leaderIcon","cursor","onRemoveMember","matchId","memberId","modalRef","useRef","participantStatus","AmILeader","noAction","noActionText","confirmText","onConfirmClick","console","log","modalProps","setModalProps","disableRipple","disableFocusRipple","disabled","current","openModal","closeModal","handleRemoveMember","playerId","Modal","ref","NotJoined","lazy","marginBottom","player","padding","teamAction","paddingTop","actionButton","MyTeam","memo","tournamentId","team","loadingTeam","onGetTeam","onLeaveTeam","onRemoveTeam","length","players","find","_id","Loading","hideImage","Paper","elevation","paddingBottom","List","map","match","Button","teamId"],"mappings":"mGAAA,6DAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,MAAOF,EAAMG,QAAQ,GACrBC,OAAQJ,EAAMG,QAAQ,QA6CXE,IAzCA,SAACC,GACd,IAAMC,EAAUT,IAEhB,EAKIQ,EAJFE,QADF,IAEIA,QAAWP,EAFf,EAEeA,OAAQQ,EAFvB,EAEuBA,SACXC,EAHZ,EAGIC,KAAQD,KAIZ,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACc,OAAXT,EACC,cAAC,IAAD,CACEW,UAAWL,EAAQN,OACnBY,IAAG,gCAA2BZ,GAC9Ba,IAAKJ,IAGP,cAAC,IAAD,CACEI,IAAKJ,EACLE,UAAWL,EAAQN,OACnBc,GAAI,CAAEC,gBAAiB,UAHzB,SAKE,sBAAMC,MAAO,CAAEC,SAAU,QAAzB,SACGR,EAAKS,OAAO,GAAGC,oBAMxB,cAAC,IAAD,CACEL,GAAI,CAAEM,WAAY,KAClBC,QAASb,EACTc,UAAWb,S,yOCtCbZ,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCwB,KAAG,GACDC,WAAY,SACZC,UAAW,SACXC,OAAQ3B,EAAMG,QAAQ,EAAG,IAHxB,cAIAH,EAAM4B,YAAYC,KAAK,MAAQ,CAC9BF,OAAQ3B,EAAMG,QAAQ,IAAK,OAL5B,cAOAH,EAAM4B,YAAYC,KAAK,MAAQ,CAC9BF,OAAQ3B,EAAMG,QAAQ,IAAK,OAR5B,OAgFU2B,EAnEE,SAACxB,GAChB,IAAMC,EAAUT,IAERiC,EAAazB,EAAbyB,SAER,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAkBA,OAAO,mCACL,eAACC,EAAA,EAAD,CAAKvB,UAAWL,EAAQiB,IAAxB,UACGS,GACC,cAACG,EAAA,EAAD,CAAYnB,MAAO,CAAEoB,MAAO,QAASV,OAAQ,cAA7C,kCAKF,cAACW,EAAA,EAAD,CACEC,QAAQ,WACR7B,KAAK,WACL8B,KAAK,OACLC,MAAM,WACNC,MAAOX,EACPY,UAAQ,EACRC,WAAS,EACTC,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,iBACNC,WAAY,IACZC,oBAAqBC,IACrBC,UAAU,MACVC,OAAK,EALP,SAOE,cAACC,EAAA,EAAD,CACE,aAAW,iBACXnB,MAAM,UACNoB,KAAK,MACLC,QA9CK,WACnB,IAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGjB,MAAH,oGAAwGoB,OAAOC,SAASC,KAAxH,oCAAwJjC,EAAxJ,oBACA4B,EAAGM,aAAa,WAAY,IAC5BN,EAAG1C,MAAM+B,SAAW,WACpBW,EAAG1C,MAAMiD,KAAO,UAChBN,SAASO,KAAKC,YAAYT,GAC1BA,EAAGU,SACHT,SAASU,YAAY,QACrBV,SAASO,KAAKI,YAAYZ,GAC1BzB,GAAe,GACfsC,YAAW,WACTtC,GAAe,KACd,OAkCWjB,MAAO,CAAEwD,YAAa,KACtBC,KAAK,QANP,SAOE,cAAC,IAAD,mBCxEZ5E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2E,UAAW,CACTC,QAAS,OACTC,WAAY,OACZlD,OAAQ3B,EAAMG,QAAQ,EAAG,IAE3BQ,KAAM,CACJgB,OAAQ3B,EAAMG,QAAQ,EAAG,EAAG,EAAG,GAC/BuB,UAAW,SACXW,MAAOrC,EAAM8E,QAAQC,KAAKxD,UAC1BL,SAAUlB,EAAMG,QAAQ,WA2Db6E,eARS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,KAAKD,SAGQ,SAACE,GAAD,MAAe,CACxCC,UAAW,kBAAMD,EAASE,WAGbN,EAvDG,SAAC1E,GACjB,IAAMC,EAAUT,IAERyF,EAAsCjF,EAAtCiF,UAAWF,EAA2B/E,EAA3B+E,UAAWH,EAAgB5E,EAAhB4E,KAAMhC,EAAU5C,EAAV4C,MAMpC,OAJAsC,qBAAU,WACRH,MACC,CAACA,IAGF,qCACa,oBAAVnC,EACC,qCACE,eAACf,EAAA,EAAD,CAAKvB,UAAWL,EAAQoE,UAAxB,UACE,cAACvC,EAAA,EAAD,CAAYC,MAAM,YAAlB,SACE,mDAGF,cAACD,EAAA,EAAD,CAAYC,MAAM,YAAYpB,MAAO,CAAEI,WAAY,QAAnD,SACE,qCAAQ6D,EAAKO,eAIjB,cAACC,EAAA,EAAD,OAEA,KAEJ,eAACvD,EAAA,EAAD,CAAKvB,UAAWL,EAAQoE,UAAxB,UACE,cAACvC,EAAA,EAAD,UACE,iDAGF,cAACA,EAAA,EAAD,CAAYnB,MAAO,CAAEI,WAAY,QAAjC,SACE,qCAAoB,GAAZkE,UAIZ,cAACG,EAAA,EAAD,IAEA,cAACtD,EAAA,EAAD,CAAYxB,UAAWL,EAAQI,KAA/B,sG,6CC7CAb,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2F,KAAM,CACJf,QAAS,OACTnD,WAAY,SACZmE,eAAgB,iBAElBC,QAAS,CACPjB,QAAS,OACTnD,WAAY,UAEdqE,WAAY,CACVC,OAAQ,UACR,UAAW,CACT/E,gBAAiB,oBAgHRgE,cAAQ,MALI,SAACI,GAAD,MAAe,CACxCY,eAAgB,SAACC,EAASC,GAAV,OACdd,EAASE,IAAqBW,EAASC,QAG5BlB,EA3GM,SAAC1E,GACpB,IAAMC,EAAUT,IAEVqG,EAAWC,mBAGfH,EAOE3F,EAPF2F,QACAI,EAME/F,EANF+F,kBACA7F,EAKEF,EALFE,QACAiC,EAIEnC,EAJFmC,MACA8C,EAGEjF,EAHFiF,UACAe,EAEEhG,EAFFgG,UACAN,EACE1F,EADF0F,eAGF,EAAoChE,mBAAS,CAC3CkB,MAAO,GACPqD,UAAU,EACVC,aAAc,GACdC,YAAa,GACbC,eAAgB,kBAAMC,QAAQC,IAAI,8BALpC,mBAAOC,EAAP,KAAmBC,EAAnB,KAwBA,OACE,qCACE,eAAC3E,EAAA,EAAD,CAAKvB,UAAWL,EAAQoF,KAAxB,UACE,cAACxD,EAAA,EAAD,UACE,cAAC9B,EAAA,EAAD,CAAQG,QAASA,MAER,WAAViC,EACC,cAACN,EAAA,EAAD,CAAKvB,UAAWL,EAAQsF,QAAxB,SACE,cAAC5C,EAAA,EAAD,CACEC,MAAM,SACNC,WAAY,IACZC,oBAAqBC,IACrBC,UAAU,MACVC,OAAK,EALP,SAOE,cAACC,EAAA,EAAD,CACE,aAAW,SACX5C,UAAWL,EAAQuF,WACnBiB,eAAa,EACbC,oBAAkB,EAClBtC,KAAK,QALP,SAOE,cAAC,IAAD,UAIJ4B,EACF,cAACnE,EAAA,EAAD,CAAKvB,UAAWL,EAAQsF,QAAxB,SACE,cAAC5C,EAAA,EAAD,CACEC,MAAM,gBACNC,WAAY,IACZC,oBAAqBC,IACrBC,UAAU,MACVC,OAAK,EALP,SAOE,cAACC,EAAA,EAAD,CACE,aAAW,gBACXnB,MAAM,YACN4E,SAAgC,WAAtBZ,EACV3C,QAAS,kBAvDI,SAACuC,EAASC,GACnCC,EAASe,QAAQC,YACjBL,EAAc,CACZ5D,MAAO,kBACPuD,YAAa,gBACbF,SAAgC,SAAtBF,EACVG,aAAa,oBAAD,OAAsBH,GAClCK,eAAgB,WACdV,EAAeC,EAASC,GACxB1B,YAAW,WACT2B,EAASe,QAAQE,eAChB,SA4CoBC,CAAmBpB,EAASzF,EAAQ8G,WACnD5C,KAAK,QALP,SAOE,cAAC,IAAD,UAIJ,QAGN,cAAC6C,EAAA,EAAD,CACEC,IAAKrB,EACLjD,MAAO2D,EAAW3D,MAClBqD,SAAUM,EAAWN,SACrBC,aAAcK,EAAWL,aACzBC,YAAaI,EAAWJ,YACxBC,eAAgBG,EAAWH,eAN7B,SAQE,cAAC,EAAD,CAAWxD,MAAO2D,EAAW3D,MAAOqC,UAAWA,YCzGjDkC,EAAYC,gBAAK,kBAAM,+DAEvB5H,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2F,KAAM,CACJhE,OAAQ,OACRgG,aAAc3H,EAAMG,QAAQ,MAE9ByH,OAAQ,CACNC,QAAS7H,EAAMG,QAAQ,KAAM,IAE/B2H,WAAY,CACVpG,UAAW,SACXqG,WAAY/H,EAAMG,QAAQ,IAE5B6H,aAAc,CACZpD,QAAS,eACTjD,OAAQ3B,EAAMG,QAAQ,QAIpB8H,EAASC,gBAAK,SAAC5H,GACnB,IAAMC,EAAUT,IAEVqG,EAAWC,mBAGf+B,EAQE7H,EARF6H,aACA9B,EAOE/F,EAPF+F,kBACAd,EAMEjF,EANFiF,UACAL,EAKE5E,EALF4E,KAJF,EASI5E,EAJF8H,KAAQC,EALV,EAKUA,YAAaD,EALvB,EAKuBA,KACrBE,EAGEhI,EAHFgI,UACAC,EAEEjI,EAFFiI,YACAC,EACElI,EADFkI,aAGF,EAAoCxG,mBAAS,CAC3CkB,MAAO,GACPqD,UAAU,EACVC,aAAc,GACdC,YAAa,GACbC,eAAgB,kBAAMC,QAAQC,IAAI,8BALpC,mBAAOC,EAAP,KAAmBC,EAAnB,KAQAtB,qBAAU,WACR8C,EAAUH,KACT,CAACG,EAAWH,IAEf,IAAM7B,EACK,OAAT8B,GACgB,IAAhBA,EAAKK,QAEH,WADFL,EAAK,GAAGM,QAAQC,MAAK,SAACf,GAAD,OAAYA,EAAON,WAAapC,EAAK0D,OAAKnG,MAqCjE,OACE,qCACG4F,GAAwB,OAATD,EACd,qCACE,cAACS,EAAA,EAAD,CAASC,WAAS,EAAlB,kCAEA,cAAC1G,EAAA,EAAD,CAAYG,QAAQ,QAAQF,MAAM,gBAAlC,wGAKgB,IAAhB+F,EAAKK,QAAgBL,IAAS,GAChC,cAAC,WAAD,UACE,cAACX,EAAD,CACEU,aAAcA,EACd5C,UAAWA,EACXc,kBAAmBA,MAIvB,cAAClE,EAAA,EAAD,CAAKvB,UAAWL,EAAQoF,KAAxB,SACE,eAACoD,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,cAAC7G,EAAA,EAAD,CAAKpB,GAAI,CAAEgH,WAAY,IAAKkB,cAAe,MAA3C,SACE,cAAC7G,EAAA,EAAD,CAAYC,MAAM,UAAlB,SACE,4CAIJ,cAAC,EAAD,CAAUN,SAAUqG,EAAK,GAAGQ,IAAI7G,WAEhC,cAACI,EAAA,EAAD,CAAKvB,UAAWL,EAAQqH,OAAxB,SACE,cAACsB,EAAA,EAAD,UACGd,EAAK,GAAGM,QAAQS,KAAI,SAACvB,GACpB,OACE,cAAC,EAAD,CAEE3B,QAASmC,EAAK,GAAGQ,IAAIQ,MACrB5I,QAASoH,EACTnF,MAAOmF,EAAOnF,MACd6D,UAAWA,EACXD,kBAAmBA,EACnBd,UAAWA,GANNqC,EAAON,iBAatB,cAAC5B,EAAA,EAAD,IAEA,eAACvD,EAAA,EAAD,CAAKvB,UAAWL,EAAQuH,WAAxB,UACE,cAACuB,EAAA,EAAD,CACE9G,QAAQ,WACRF,MAAM,UACN4E,SAAgC,WAAtBZ,EACVzF,UAAWL,EAAQyH,aACnBtE,QAAS,kBAxFEuC,EAyFOkC,EAzFEmB,EAyFYlB,EAAK,GAAGQ,IAAIU,OAxFxDnD,EAASe,QAAQC,iBACjBL,EAAc,CACZ5D,MAAO,aACPuD,YAAa,aACbF,SAAgC,SAAtBF,EACVG,aAAa,oBAAD,OAAsBH,GAClCK,eAAgB,WACd6B,EAAYtC,EAASqD,GACrB9E,YAAW,WACT2B,EAASe,QAAQE,eAChB,SAXe,IAACnB,EAASqD,GAmFtB,yBAYe,IAAdhD,EACC,cAAC+C,EAAA,EAAD,CACE9G,QAAQ,WACRF,MAAM,YACN4E,SAAgC,WAAtBZ,EACVzF,UAAWL,EAAQyH,aACnBtE,QAAS,kBArFCuC,EAqFsBkC,EApF9ChC,EAASe,QAAQC,iBACjBL,EAAc,CACZ5D,MAAO,cACPuD,YAAa,cACbF,SAAgC,SAAtBF,EACVG,aAAa,oBAAD,OAAsBH,GAClCK,eAAgB,WACd8B,EAAavC,GACbzB,YAAW,WACT2B,EAASe,QAAQE,eAChB,SAXgB,IAACnB,GAgFZ,yBASE,aAMZ,cAACsB,EAAA,EAAD,CACEC,IAAKrB,EACLjD,MAAO2D,EAAW3D,MAClBqD,SAAUM,EAAWN,SACrBC,aAAcK,EAAWL,aACzBC,YAAaI,EAAWJ,YACxBC,eAAgBG,EAAWH,eAN7B,SAQE,cAAC,EAAD,CAAWxD,MAAO2D,EAAW3D,MAAOqC,UAAWA,YAkBxCP,uBAZS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,KAAKD,KACjBkD,KAAMnD,EAAMmD,SAGa,SAAChD,GAAD,MAAe,CACxCkD,UAAW,SAACrC,GAAD,OAAab,EAASE,IAAkBW,KACnDsC,YAAa,SAACtC,EAASqD,GAAV,OACXlE,EAASE,IAAkBW,EAASqD,KACtCd,aAAc,SAACvC,GAAD,OAAab,EAASE,IAAmBW,QAG1CjB,CAA6CiD","file":"static/js/68.f8e81efd.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    width: theme.spacing(6),\r\n    height: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst Player = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    profile: {\r\n      profile: { avatar, gameName },\r\n      info: { name }\r\n    }\r\n  } = props;\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemAvatar>\r\n        {avatar !== null ? (\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={`data:image/png;base64,${avatar}`}\r\n            alt={name}\r\n          />\r\n        ) : (\r\n          <Avatar\r\n            alt={name}\r\n            className={classes.avatar}\r\n            sx={{ backgroundColor: 'orange' }}\r\n          >\r\n            <span style={{ fontSize: '28px' }}>\r\n              {name.charAt(0).toUpperCase()}\r\n            </span>\r\n          </Avatar>\r\n        )}\r\n      </ListItemAvatar>\r\n\r\n      <ListItemText\r\n        sx={{ marginLeft: 2.5 }}\r\n        primary={gameName}\r\n        secondary={name}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport ShareRoundedIcon from '@mui/icons-material/ShareRounded';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  box: {\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    margin: theme.spacing(3, 4),\r\n    [theme.breakpoints.down('md')]: {\r\n      margin: theme.spacing(2.8, 2.8)\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: theme.spacing(2.6, 1.5)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Teamcode = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { teamCode } = props;\r\n\r\n  const [copySuccess, setCopySuccess] = useState(false);\r\n\r\n  const copyTeamcode = () => {\r\n    const el = document.createElement('textarea');\r\n    el.value = `Hello friend, Join my team to play Battlegrounds Mobile India tournament. Visit this link ${window.location.href} and enter the teamcode: ${teamCode} to participate.`;\r\n    el.setAttribute('readonly', '');\r\n    el.style.position = 'absolute';\r\n    el.style.left = '-9999px';\r\n    document.body.appendChild(el);\r\n    el.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n    setCopySuccess(true);\r\n    setTimeout(() => {\r\n      setCopySuccess(false);\r\n    }, 1250);\r\n  };\r\n\r\n  return <>\r\n    <Box className={classes.box}>\r\n      {copySuccess && (\r\n        <Typography style={{ color: 'green', margin: '0 0 12px 0' }}>\r\n          Copied to Clipboard!\r\n        </Typography>\r\n      )}\r\n\r\n      <TextField\r\n        variant=\"outlined\"\r\n        name=\"teamCode\"\r\n        type=\"text\"\r\n        label=\"Teamcode\"\r\n        value={teamCode}\r\n        readOnly\r\n        fullWidth\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <Tooltip\r\n                title=\"Share TeamCode\"\r\n                enterDelay={500}\r\n                TransitionComponent={Zoom}\r\n                placement=\"top\"\r\n                arrow\r\n              >\r\n                <IconButton\r\n                  aria-label=\"share-teamcode\"\r\n                  color=\"primary\"\r\n                  edge=\"end\"\r\n                  onClick={copyTeamcode}\r\n                  style={{ marginRight: '0' }}\r\n                  size=\"large\">\r\n                  <ShareRoundedIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n      />\r\n    </Box>\r\n  </>;\r\n};\r\n\r\nexport default Teamcode;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  amountBox: {\r\n    display: 'flex',\r\n    fontWeight: 'bold',\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  info: {\r\n    margin: theme.spacing(2, 1, 4, 1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    fontSize: theme.spacing(1.75)\r\n  }\r\n}));\r\n\r\nconst ExitModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { entryFees, onGetUser, user, title } = props;\r\n\r\n  useEffect(() => {\r\n    onGetUser();\r\n  }, [onGetUser]);\r\n\r\n  return (\r\n    <>\r\n      {title !== 'Remove Teammate' ? (\r\n        <>\r\n          <Box className={classes.amountBox}>\r\n            <Typography color=\"secondary\">\r\n              <b>Current Balance:</b>\r\n            </Typography>\r\n\r\n            <Typography color=\"secondary\" style={{ marginLeft: 'auto' }}>\r\n              <b>Rs. {user.amount}</b>\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Divider />\r\n        </>\r\n      ) : null}\r\n\r\n      <Box className={classes.amountBox}>\r\n        <Typography>\r\n          <b>Refund Amount:</b>\r\n        </Typography>\r\n\r\n        <Typography style={{ marginLeft: 'auto' }}>\r\n          <b>Rs. {entryFees * 0.9}</b>\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <Typography className={classes.info}>\r\n        Only 90% of the joining money will refund to wallet as we will charge\r\n        10% as fine.\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetUser: () => dispatch(actions.getUser())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExitModal);\r\n","import React, { useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport StarsRoundedIcon from '@mui/icons-material/StarsRounded';\r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nimport Modal from '../../../../../ui/Modal/Modal';\r\n\r\nimport ExitModal from './ExitModal';\r\nimport Player from '../Team/Player/Player';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  boxIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  leaderIcon: {\r\n    cursor: 'default',\r\n    '&:hover': {\r\n      backgroundColor: 'transparent'\r\n    }\r\n  }\r\n}));\r\n\r\nconst PlayerAction = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const modalRef = useRef();\r\n\r\n  const {\r\n    matchId,\r\n    participantStatus,\r\n    profile,\r\n    label,\r\n    entryFees,\r\n    AmILeader,\r\n    onRemoveMember\r\n  } = props;\r\n\r\n  const [modalProps, setModalProps] = useState({\r\n    title: '',\r\n    noAction: false,\r\n    noActionText: '',\r\n    confirmText: '',\r\n    onConfirmClick: () => console.log('Confirm button clicked!')\r\n  });\r\n\r\n  const handleRemoveMember = (matchId, memberId) => {\r\n    modalRef.current.openModal();\r\n    setModalProps({\r\n      title: 'Remove Teammate',\r\n      confirmText: 'Kick Teammate',\r\n      noAction: participantStatus !== 'Open',\r\n      noActionText: `Participation is ${participantStatus}`,\r\n      onConfirmClick: () => {\r\n        onRemoveMember(matchId, memberId);\r\n        setTimeout(() => {\r\n          modalRef.current.closeModal();\r\n        }, 1500);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.root}>\r\n        <Box>\r\n          <Player profile={profile} />\r\n        </Box>\r\n        {label === 'Leader' ? (\r\n          <Box className={classes.boxIcon}>\r\n            <Tooltip\r\n              title=\"Leader\"\r\n              enterDelay={500}\r\n              TransitionComponent={Zoom}\r\n              placement=\"top\"\r\n              arrow\r\n            >\r\n              <IconButton\r\n                aria-label=\"leader\"\r\n                className={classes.leaderIcon}\r\n                disableRipple\r\n                disableFocusRipple\r\n                size=\"large\"\r\n              >\r\n                <StarsRoundedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        ) : AmILeader ? (\r\n          <Box className={classes.boxIcon}>\r\n            <Tooltip\r\n              title=\"Remove Member\"\r\n              enterDelay={500}\r\n              TransitionComponent={Zoom}\r\n              placement=\"top\"\r\n              arrow\r\n            >\r\n              <IconButton\r\n                aria-label=\"remove-member\"\r\n                color=\"secondary\"\r\n                disabled={participantStatus === 'Closed' ? true : false}\r\n                onClick={() => handleRemoveMember(matchId, profile.playerId)}\r\n                size=\"large\"\r\n              >\r\n                <CloseRoundedIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n\r\n      <Modal\r\n        ref={modalRef}\r\n        title={modalProps.title}\r\n        noAction={modalProps.noAction}\r\n        noActionText={modalProps.noActionText}\r\n        confirmText={modalProps.confirmText}\r\n        onConfirmClick={modalProps.onConfirmClick}\r\n      >\r\n        <ExitModal title={modalProps.title} entryFees={entryFees} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRemoveMember: (matchId, memberId) =>\r\n    dispatch(actions.kickTeammate(matchId, memberId))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayerAction);\r\n","import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  memo,\r\n  Suspense,\r\n  lazy\r\n} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport List from '@mui/material/List';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport makeStyles from '@mui/styles/makeStyles';\r\n\r\nimport * as actions from '../../../../../store/actions/index';\r\n\r\nimport Modal from '../../../../../ui/Modal/Modal';\r\nimport Loading from '../../../../../ui/Loading/Loading';\r\n\r\nimport Teamcode from './Teamcode';\r\nimport ExitModal from './ExitModal';\r\nimport PlayerAction from './PlayerAction';\r\n\r\nconst NotJoined = lazy(() => import('../ParticipantsHelper/NotJoined'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    marginBottom: theme.spacing(1.5)\r\n  },\r\n  player: {\r\n    padding: theme.spacing(1.25, 0)\r\n  },\r\n  teamAction: {\r\n    textAlign: 'center',\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n  actionButton: {\r\n    display: 'inline-block',\r\n    margin: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst MyTeam = memo((props) => {\r\n  const classes = useStyles();\r\n\r\n  const modalRef = useRef();\r\n\r\n  const {\r\n    tournamentId,\r\n    participantStatus,\r\n    entryFees,\r\n    user,\r\n    team: { loadingTeam, team },\r\n    onGetTeam,\r\n    onLeaveTeam,\r\n    onRemoveTeam\r\n  } = props;\r\n\r\n  const [modalProps, setModalProps] = useState({\r\n    title: '',\r\n    noAction: false,\r\n    noActionText: '',\r\n    confirmText: '',\r\n    onConfirmClick: () => console.log('Confirm button clicked!')\r\n  });\r\n\r\n  useEffect(() => {\r\n    onGetTeam(tournamentId);\r\n  }, [onGetTeam, tournamentId]);\r\n\r\n  const AmILeader =\r\n    team !== null &&\r\n    team.length === 1 &&\r\n    team[0].players.find((player) => player.playerId === user._id).label ===\r\n      'Leader'\r\n      ? true\r\n      : false;\r\n\r\n  const handleLeaveTeam = (matchId, teamId) => {\r\n    modalRef.current.openModal();\r\n    setModalProps({\r\n      title: 'Leave Team',\r\n      confirmText: 'Leave Team',\r\n      noAction: participantStatus !== 'Open',\r\n      noActionText: `Participation is ${participantStatus}`,\r\n      onConfirmClick: () => {\r\n        onLeaveTeam(matchId, teamId);\r\n        setTimeout(() => {\r\n          modalRef.current.closeModal();\r\n        }, 1500);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleRemoveTeam = (matchId) => {\r\n    modalRef.current.openModal();\r\n    setModalProps({\r\n      title: 'Remove Team',\r\n      confirmText: 'Remove Team',\r\n      noAction: participantStatus !== 'Open',\r\n      noActionText: `Participation is ${participantStatus}`,\r\n      onConfirmClick: () => {\r\n        onRemoveTeam(matchId);\r\n        setTimeout(() => {\r\n          modalRef.current.closeModal();\r\n        }, 1500);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingTeam || team === null ? (\r\n        <>\r\n          <Loading hideImage>Fetching Own Team...</Loading>\r\n\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            Below 18 are not allowed to participate, so this loading will never\r\n            disappear for them.\r\n          </Typography>\r\n        </>\r\n      ) : team.length === 0 || team === [] ? (\r\n        <Suspense>\r\n          <NotJoined\r\n            tournamentId={tournamentId}\r\n            entryFees={entryFees}\r\n            participantStatus={participantStatus}\r\n          />\r\n        </Suspense>\r\n      ) : (\r\n        <Box className={classes.root}>\r\n          <Paper elevation={0}>\r\n            <Box sx={{ paddingTop: 1.5, paddingBottom: 1.25 }}>\r\n              <Typography color=\"primary\">\r\n                <b>My Team</b>\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Teamcode teamCode={team[0]._id.teamCode} />\r\n\r\n            <Box className={classes.player}>\r\n              <List>\r\n                {team[0].players.map((player) => {\r\n                  return (\r\n                    <PlayerAction\r\n                      key={player.playerId}\r\n                      matchId={team[0]._id.match}\r\n                      profile={player}\r\n                      label={player.label}\r\n                      AmILeader={AmILeader}\r\n                      participantStatus={participantStatus}\r\n                      entryFees={entryFees}\r\n                    />\r\n                  );\r\n                })}\r\n              </List>\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <Box className={classes.teamAction}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={participantStatus === 'Closed' ? true : false}\r\n                className={classes.actionButton}\r\n                onClick={() =>\r\n                  handleLeaveTeam(tournamentId, team[0]._id.teamId)\r\n                }\r\n              >\r\n                Leave Team\r\n              </Button>\r\n\r\n              {AmILeader === true ? (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  disabled={participantStatus === 'Closed' ? true : false}\r\n                  className={classes.actionButton}\r\n                  onClick={() => handleRemoveTeam(tournamentId)}\r\n                >\r\n                  Remove Team\r\n                </Button>\r\n              ) : null}\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n\r\n      <Modal\r\n        ref={modalRef}\r\n        title={modalProps.title}\r\n        noAction={modalProps.noAction}\r\n        noActionText={modalProps.noActionText}\r\n        confirmText={modalProps.confirmText}\r\n        onConfirmClick={modalProps.onConfirmClick}\r\n      >\r\n        <ExitModal title={modalProps.title} entryFees={entryFees} />\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  team: state.team\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onGetTeam: (matchId) => dispatch(actions.getMyTeam(matchId)),\r\n  onLeaveTeam: (matchId, teamId) =>\r\n    dispatch(actions.leaveTeam(matchId, teamId)),\r\n  onRemoveTeam: (matchId) => dispatch(actions.removeTeam(matchId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyTeam);\r\n"],"sourceRoot":""}