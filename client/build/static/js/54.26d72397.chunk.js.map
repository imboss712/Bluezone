{"version":3,"sources":["assets/loading.svg","components/Loading/Loading.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","containers/Matches/randomColor.js","containers/Matches/MyMatchesHelper/CompletedMatches.js"],"names":["useStyles","makeStyles","theme","loadingBox","textAlign","margin","paper","padding","spacing","loadingIcon","marginLeft","verticalAlign","image","width","height","breakpoints","down","Loading","props","classes","children","hideImage","Box","className","Paper","elevation","src","loading","alt","Typography","color","variant","CircularProgress","size","SIZE","React","ref","_props$color","_props$disableShrink","disableShrink","_props$size","style","_props$thickness","thickness","_props$value","value","_props$variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","clsx","root","capitalize","determinate","indeterminate","static","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","randomColor","Error","lazy","Match","grid","justifyContent","connect","state","match","dispatch","fetchMyCompletedMatches","matchStatus","actions","loadingMyMatches","myMatches","useEffect","container","length","fallback","map","item","border","floor","random","_id","status","statusText"],"mappings":"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","file":"static/js/54.26d72397.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.46b68eb6.svg\";","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport loading from '../../assets/loading.svg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  loadingBox: {\r\n    textAlign: 'center',\r\n    margin: 'auto'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(5)\r\n  },\r\n  loadingIcon: {\r\n    marginLeft: theme.spacing(0.75),\r\n    verticalAlign: 'text-top'\r\n  },\r\n  image: {\r\n    width: 300,\r\n    height: 300,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 275,\r\n      height: 275\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 250,\r\n      height: 250\r\n    },\r\n    [theme.breakpoints.down(375)]: {\r\n      width: 200,\r\n      height: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst Loading = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { children, hideImage } = props;\r\n\r\n  return (\r\n    <Box className={classes.loadingBox}>\r\n      <Paper className={classes.paper} elevation={0}>\r\n        {hideImage || hideImage === true ? null : (\r\n          <img src={loading} alt=\"Loading...\" className={classes.image} />\r\n        )}\r\n\r\n        <Typography color=\"primary\" variant=\"h6\">\r\n          {children}{' '}\r\n          <CircularProgress\r\n            size={24}\r\n            color=\"primary\"\r\n            className={classes.loadingIcon}\r\n          />\r\n        </Typography>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","const randomColor = [\r\n  '#b71c1c',\r\n  '#880e4f',\r\n  '#4a148c',\r\n  '#004d40',\r\n  '#1b5e20',\r\n  '#827717',\r\n  '#e65100',\r\n  '#3e2723',\r\n  '#212121',\r\n  '#263238'\r\n];\r\n\r\nexport default randomColor;\r\n","import React, { lazy, Suspense, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\nimport randomColor from '../randomColor';\r\n\r\nimport Loading from '../../../components/Loading/Loading';\r\nimport SuspenseLoading from '../../../components/Loading/SuspenseLoading';\r\nconst Error = lazy(() => import('../../../components/Error/Error'));\r\nconst Match = lazy(() => import('../Match/Match'));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    justifyContent: 'flex-start',\r\n    [theme.breakpoints.down('sm')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  }\r\n}));\r\n\r\nconst CompletedMatches = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    fetchMyCompletedMatches,\r\n    match: { loadingMyMatches, myMatches }\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    fetchMyCompletedMatches('Completed');\r\n  }, [fetchMyCompletedMatches]);\r\n\r\n  return (\r\n    <Grid container spacing={3} className={classes.grid}>\r\n      {loadingMyMatches ? (\r\n        <Loading>Loading Completed Matches...</Loading>\r\n      ) : myMatches.length > 0 ? (\r\n        <Suspense fallback={<SuspenseLoading />}>\r\n          {myMatches.map((match) => (\r\n            <Grid item key={match._id}>\r\n              <Match\r\n                border={randomColor[Math.floor(Math.random() * 10)]}\r\n                match={match}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Suspense>\r\n      ) : (\r\n        <Suspense>\r\n          <Error\r\n            status=\"204\"\r\n            statusText=\"You have not completed any tournament yet.\"\r\n          />\r\n        </Suspense>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  match: state.match\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchMyCompletedMatches: (matchStatus) =>\r\n    dispatch(actions.getMyMatches(matchStatus))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompletedMatches);\r\n"],"sourceRoot":""}